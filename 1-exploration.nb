(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    266885,       6068]
NotebookOptionsPosition[    258637,       5919]
NotebookOutlinePosition[    258990,       5935]
CellTagsIndexPosition[    258947,       5932]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This code is released under the GPL license. Copyright 2018 by Valerio Marra \
(valerio.marra@me.com)\
\>", "Text",
 FontSize->14,
 FontWeight->"Bold",
 FontSlant->"Italic",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"1df35057-a96d-495e-94a0-0d484796faf7"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["1-Preamble",
 FontColor->RGBColor[1, 0, 1]]], "Section",ExpressionUUID->"f66ae1b8-2596-\
49c1-9dc9-953450f586df"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mvn", "=", "$VersionNumber"}], "\[IndentingNewLine]", 
 RowBox[{"logD", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<code-stat/Ltools.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<code-stat/triplotF.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<code-stat/triplotCombo.m\>\"", "]"}], 
  ";"}]}], "Input",
 CellLabel->
  "(L3) In[146]:=",ExpressionUUID->"8192d94f-8a8c-4581-ac68-81f6d7aa93e9"],

Cell[BoxData["11.3`"], "Output",
 CellLabel->
  "(L3) Out[147]=",ExpressionUUID->"6801d8e4-4814-48fb-a2bd-6167d9c5258e"],

Cell[BoxData["\<\"/Users/rjovale/Documents/Sync/mBayes1.0b9\"\>"], "Output",
 CellLabel->
  "(L3) Out[148]=",ExpressionUUID->"800406ca-b718-41f1-aacf-16fdacc883fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxMemAllowed", "=", 
    RowBox[{"0.8", " ", "$SystemMemory"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"80", "%", " ", "of", " ", "your", " ", "RAM"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Max memory allowed: \>\"", ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"maxMemAllowed", "/", 
         RowBox[{"1024", "^", "3"}]}], ",", ".1"}], "]"}], ",", 
      "\"\< GB\>\""}], "}"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"intervalBetweenTests", "=", "1"}], ";"}], 
  RowBox[{"(*", "seconds", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"iAmAliveSignal", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Dynamic", "[", "iAmAliveSignal", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RunScheduledTask", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MemoryInUse", "[", "]"}], ">", "maxMemAllowed"}], ",", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<..quitting Mathematica, too much RAM used :S\>\"", 
        "]"}], ";", 
       RowBox[{"Quit", "[", "]"}]}], ",", 
      RowBox[{"iAmAliveSignal", "++"}]}], "]"}], "\n", ",", 
    "intervalBetweenTests"}], "]"}], ";"}]}], "Input",ExpressionUUID->\
"3c0fb340-d704-4546-bbfc-942172e359fc"],

Cell[BoxData[
 TemplateBox[{"\"Max memory allowed: \"","51.2`","\" GB\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[152]:=",ExpressionUUID->"382cfba9-3aff-4418-9ad0-021d212e8873"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Removes", " ", "memory", " ", "limit", " ", "below", " ", "if", " ", 
    "needed"}], " ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"RemoveScheduledTask", "[", 
     RowBox[{"ScheduledTasks", "[", "]"}], "]"}], ";"}], "*)"}]}]], "Input",
 CellLabel->
  "(L3) In[158]:=",ExpressionUUID->"f0415793-8b7c-44f3-8211-5ce27648ef6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["2-Glue code",
 FontColor->RGBColor[1, 0, 1]]], "Section",ExpressionUUID->"21cf603a-8223-\
4a0c-ac28-50742c4960ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"importing", " ", "your", " ", "chi2", " ", "function"}], ";", 
    " ", 
    RowBox[{
    "use", " ", "\"\<chi2=-2log L\>\"", " ", "if", " ", "you", " ", "need", 
     " ", "the", " ", "normalization", " ", 
     RowBox[{"(", 
      RowBox[{"eg", " ", "for", " ", "the", " ", "evidence"}], ")"}]}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "rname", " ", "is", " ", "the", " ", "general", " ", "label", " ", "for", 
     " ", "the", " ", "run"}], ";", " ", 
    RowBox[{
    "output", " ", "files", " ", "will", " ", "start", " ", "with", " ", 
     "\"\<rname\>\""}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "rname", " ", "is", " ", "also", " ", "the", " ", "name", " ", "of", " ", 
    RowBox[{"the", " ", ".", "m"}], " ", 
    RowBox[{"file", " ", "[", 
     RowBox[{"rename", " ", "accordingly"}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rname", "=", "\"\<JLA\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"\"\<code-phys\>\"", ",", 
       RowBox[{"rname", "<>", "\"\<.m\>\""}]}], "]"}], "]"}], 
    ";"}]}]}]], "Input",
 CellLabel->
  "(L3) In[159]:=",ExpressionUUID->"b7b4c196-1a90-4f67-9696-d8c2fc427ffa"],

Cell[CellGroupData[{

Cell[BoxData["\<\"The reference vector is 'vectest'; the \
\\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \\(2\\)]\\) function is \
'chi2test[om,w0,wa]'\"\>"], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[159]:=",ExpressionUUID->"95c3870d-aac1-4198-b210-c5ee5fc84992"],

Cell[BoxData["\<\"The prior vector is 'vecPtest'; the prior Fisher matrix is \
'Ptest'\"\>"], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[159]:=",ExpressionUUID->"53ceafa7-a728-4b29-83ae-77e31c7bb1f7"],

Cell[BoxData[
 TemplateBox[{"\"Dimension of parameter space: \"","3"},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[159]:=",ExpressionUUID->"47c135e2-68f3-438b-90a5-e994c7a4af4c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"setting", " ", "up", " ", "the", " ", "chi2", " ", "function"}], 
    ";", " ", 
    RowBox[{"use", " ", "a", " ", "vector", " ", "argument"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "vecsolz", " ", "is", " ", "a", " ", "reference", " ", "parameter", " ", 
      "vector", " ", "not", " ", "far", " ", "from", " ", "the", " ", 
      "best"}], "-", 
     RowBox[{"fit", " ", "vector"}]}], ",", " ", 
    RowBox[{
    "its", " ", "value", " ", "is", " ", "inconsequential", " ", "and", " ", 
     RowBox[{"won", "'"}], "t", " ", "be", " ", "saved"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"in", " ", "case", " ", "of", " ", "a", " ", "forecast"}], ",", 
    " ", 
    RowBox[{
    "vecsolz", " ", "is", " ", "the", " ", "fiducial", " ", "value", " ", 
     "and", " ", "its", " ", "value", " ", "is", " ", "important"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vecsolz", "=", "vectest"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chi2impz", "[", 
      RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
     RowBox[{"chi2test", "[", 
      RowBox[{
       RowBox[{"vec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"vec", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"vec", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"parnamez", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(w\), \(0\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(w\), \(a\)]\)\>\""}], "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"put", " ", "the", " ", "parameter", " ", "labels", " ", 
     RowBox[{"(", 
      RowBox[{
      "matching", " ", "the", " ", "dimensionality", " ", "of", " ", 
       "vecsolz"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dpar", "=", 
     RowBox[{"Length", "[", "parnamez", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"{", 
      RowBox[{"parnamez", ",", "vecsolz"}], "}"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"chi2impz", "[", "vecsolz", "]"}], "]"}]}]}]], "Input",
 CellLabel->
  "(L3) In[161]:=",ExpressionUUID->"c44e4a2a-29b2-459e-81d0-9db8db943e4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>", ",", "\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.3`", ",", 
     RowBox[{"-", "1.`"}], ",", "0.`"}], "}"}]}], "}"}]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[161]:=",ExpressionUUID->"2c30297a-ec18-4f7b-a187-72cb31866e1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.009466`", ",", "33.64693049155176`"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[166]=",ExpressionUUID->"09164e70-eeff-4643-85ee-c94b4cc0f5a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["3-Parameter space and prior",
 FontColor->RGBColor[1, 0, 1]]], "Section",ExpressionUUID->"f927329e-9eec-\
4607-9a6b-db479773003e"],

Cell[CellGroupData[{

Cell["Parameter space", "Subsection",ExpressionUUID->"7f57a796-1961-49ed-bb8b-1b7c2f7726c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"run", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"specific", " ", "label", " ", "for", " ", "a", " ", "run"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"give", " ", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max", ",", "ngrid"}], "}"}], " ", "for", " ", 
     "parameters", " ", "p1"}], ",", 
    RowBox[{
     RowBox[{"p2", ".."}], ";", " ", 
     RowBox[{
     "add", " ", "more", " ", "lines", " ", "if", " ", "necessary"}]}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"it", " ", "must", " ", "be", " ", "min"}], " ", "<", " ", 
    RowBox[{"max", " ", 
     RowBox[{"(", 
      RowBox[{"careful", " ", "with", " ", "negative", " ", "quantities"}], 
      ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "a", " ", "multivariate", " ", "prior", " ", "is", " ", "not", 
     " ", "given", " ", 
     RowBox[{"(", 
      RowBox[{"see", " ", "next", " ", "section"}], ")"}]}], ",", " ", 
    RowBox[{
    "these", " ", "become", " ", "effectively", " ", "flat", " ", 
     "priors"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "put", " ", "all", " ", "the", " ", "parameters", " ", "you", " ", 
     "want"}], ",", " ", 
    RowBox[{
    "you", " ", "can", " ", "fix", " ", "them", " ", "with", " ", "FixSome", 
     " ", "below"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dpar", "=", 
   RowBox[{"Length", "[", "parnamez", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pSet", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "p1", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"pSet", ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", ".5", ",", "40"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "p2", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"pSet", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.4"}], ",", 
       RowBox[{"-", ".6"}], ",", "40"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "p3", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"pSet", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "40"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "pSet", "]"}], "\[NotEqual]", "dpar"}], ",", 
     RowBox[{
      RowBox[{"axt", "=", "\"\<Correct the parameter intervals above!\>\""}], 
      ";", 
      RowBox[{"Print", "[", "axt", "]"}], ";", 
      RowBox[{"Speak", "[", "axt", "]"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"redo", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "potentially", " ", "run", " ", "section", " ", "6", 
     "a"}], ",", " ", 
    RowBox[{"1", " ", "to", " ", "never", " ", "run", " ", "it"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adju", "=", "1"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "potentially", " ", "run", " ", "section", " ", "6", 
     "b"}], ",", " ", 
    RowBox[{"1", " ", "to", " ", "never", " ", "run", " ", "it"}]}], " ", 
   "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellLabel->
  "(L3) In[167]:=",ExpressionUUID->"118c7763-b43d-4ed1-9e62-a20e9c64efd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "here", " ", "you", " ", "can", " ", "fix", " ", "the", " ", "FixPar", " ",
     "paramters", " ", "to", " ", "the", " ", "FixVal", " ", "values"}], "  ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FixSome", "=", "0"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"1", " ", "to", " ", "fix", " ", "FixPar", " ", "paramters"}], 
      ",", " ", 
      RowBox[{"0", " ", "not", " ", "to"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FixSome", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"chi2imp", "[", "vec_", "]"}], "=", 
        RowBox[{"chi2impz", "[", "vec", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vecsol", "=", "vecsolz"}], ";", "\[IndentingNewLine]", 
       RowBox[{"parnames", "=", "parnamez"}], ";", "\[IndentingNewLine]", 
       RowBox[{"tabpp", "=", 
        RowBox[{"Range", "[", "dpar", "]"}]}], ";"}], "\[IndentingNewLine]", 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FixPar", "=", 
        RowBox[{"{", "3", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"FixVal", "=", 
        RowBox[{"vecsolz", "[", 
         RowBox[{"[", "FixPar", "]"}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "fixing", " ", "the", " ", "parameters", " ", "to", " ", "their", " ",
          "reference", " ", "value"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tabvv", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"vec", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             RowBox[{"dpar", "-", 
              RowBox[{"Length", "[", "FixPar", "]"}]}]}], "}"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"tabvv", "=", 
          RowBox[{"Insert", "[", 
           RowBox[{"tabvv", ",", 
            RowBox[{"FixVal", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"FixPar", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "FixPar", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"chi2imp", "[", "vec_", "]"}], "=", 
        RowBox[{"chi2impz", "[", "tabvv", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tabpp", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"Range", "[", "dpar", "]"}], ",", 
          RowBox[{"Partition", "[", 
           RowBox[{"FixPar", ",", "1"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vecsol", "=", 
        RowBox[{"vecsolz", "[", 
         RowBox[{"[", "tabpp", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"parnames", "=", 
        RowBox[{"parnamez", "[", 
         RowBox[{"[", "tabpp", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dpar", "=", 
        RowBox[{"dpar", "-", 
         RowBox[{"Length", "[", "FixPar", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pSet", "=", 
        RowBox[{"pSet", "[", 
         RowBox[{"[", "tabpp", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
      "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"tabpi", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{"pSet", ",", 
      RowBox[{"TableHeadings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"parnames", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
           "\"\<grid  -  parameter intervals\>\""}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellLabel->
  "(L3) In[176]:=",ExpressionUUID->"5326fd69-cb6f-439c-a2a0-5ae0fe888b59"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"min\"\>",
       HoldForm], 
      TagBox["\<\"max\"\>",
       HoldForm], 
      TagBox["\<\"grid  -  parameter intervals\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>",
       HoldForm], "0.1`", "0.5`", "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1.4`"}], 
      RowBox[{"-", "0.6`"}], "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1"}], "1", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(0\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(a\)]\)"}, {
      "min", "max", "grid  -  parameter intervals"}}]]]], "Output",
 CellLabel->
  "(L3) Out[177]//TableForm=",ExpressionUUID->"b12a5c6e-114b-4d95-91ee-\
417199ddd9c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prior", "Subsection",ExpressionUUID->"523ec158-ef57-40d9-b844-1ab3fecc1f57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "use", " ", "flat", " ", "priors", " ", "from", " ", 
     "previous", " ", "section"}], ",", " ", 
    RowBox[{
     RowBox[{
     "1", " ", "to", " ", "use", " ", "a", " ", "multivariate", " ", 
      "prior"}], " ", "-", " ", 
     RowBox[{
     "needs", " ", "Fisher", " ", "and", " ", "bf", " ", "of", " ", "the", 
      " ", "prior"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "as", " ", "the", " ", "prior", " ", "bf", " ", "is", " ", "in", " ", 
     "general", " ", "different", " ", "from", " ", "the", " ", "likelihood", 
     " ", "bf"}], ",", " ", 
    RowBox[{
     RowBox[{
     "it", " ", "does", " ", "not", " ", "make", " ", "sense", " ", "to", " ",
       "fix", " ", 
      RowBox[{"parameters", ":", " ", "dpar"}]}], "=", 
     RowBox[{"Length", "[", "PMat", "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mvprior", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mvprior", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PMat", "=", "Ptest"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "put", " ", "here", " ", "the", " ", "Fisher", " ", "matrix", " ", 
         "of", " ", "your", " ", "prior"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "PMat", "]"}], "\[NotEqual]", "dpar"}], ",", 
         
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Prior Fisher dimension does not match parameter space \
dimension\>\"", "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"CPMat", "=", 
        RowBox[{"Inverse", "[", "PMat", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vecP", "=", "vecPtest"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "put", " ", "here", " ", "the", " ", "central", " ", "value", " ", 
         "of", " ", "your", " ", "prior"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Prior", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "dpar"}], "/", "2"}], ")"}]}], 
         RowBox[{
          RowBox[{"Det", "[", "PMat", "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}]}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"vec", "-", "vecP"}], ")"}], ".", "PMat", ".", 
             RowBox[{"(", 
              RowBox[{"vec", "-", "vecP"}], ")"}]}]}], "/", "2"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"chi2P", "[", 
           RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"Prior", "[", "vec", "]"}], "]"}]}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"chi2P", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vec", "-", "vecP"}], ")"}], ".", "PMat", ".", 
          RowBox[{"(", 
           RowBox[{"vec", "-", "vecP"}], ")"}]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"-", "dpar"}], ")"}]}], 
           RowBox[{"Det", "[", "PMat", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "the", " ", "ranges", " ", "can", " ", "be", " ", "changed", " ", 
         "according", " ", "to", " ", "the", " ", "prior"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"nriskPrior", "=", "5"}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{"updating", " ", "ranges"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"newranges", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"vecP", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nriskPrior", " ", 
                RowBox[{
                 RowBox[{"CPMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{"vecP", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"nriskPrior", " ", 
                RowBox[{
                 RowBox[{"CPMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pSet", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "=", 
          "newranges"}], ";", "\[IndentingNewLine]", 
         RowBox[{"newtab", "=", 
          RowBox[{"TableForm", "[", 
           RowBox[{"pSet", ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"parnames", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
                 "\"\<grid  -  parameter intervals from prior\>\""}], "}"}]}],
               "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "newtab", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"TriPlotF", "[", 
         RowBox[{
         "1", ",", "0", ",", "CPMat", ",", "vecP", ",", "parnames", ",", "3", 
          ",", 
          RowBox[{"{", 
           RowBox[{"Darker", "[", "TangerineTango", "]"}], "}"}]}], "]"}], 
        "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"normPrior", "=", 
        RowBox[{"(", 
         RowBox[{"Times", "@@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Differences", ",", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
           "]"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Prior", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{"1", "/", "normPrior"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"normalization", ",", " ", 
         RowBox[{"necessary", " ", "for", " ", "the", " ", "evidence"}]}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"chi2P", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", 
          RowBox[{"Prior", "[", "vec", "]"}], "]"}]}]}], ";"}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"step", " ", "function", " ", "for", " ", "prior"}], " ", 
      "*)"}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "following", " ", "makes", " ", "the", " ", "paremeter"}], 
     "-", 
     RowBox[{"space", " ", "grid"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ngrid", "=", 
     RowBox[{"pSet", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
    RowBox[{"pMin", "=", 
     RowBox[{"pSet", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"pMax", "=", 
     RowBox[{"pSet", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"ParSpaceTab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"pTabX", "[", 
         RowBox[{"i", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParSpaceTab", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"pTabX", "[", 
        RowBox[{"#", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], "&"}], 
      " ", "/@", 
      RowBox[{"Range", "[", "dpar", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useFisher", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chi2", "[", "vec_", "]"}], ":=", 
     RowBox[{
      RowBox[{"chi2imp", "[", "vec", "]"}], "+", 
      RowBox[{"chi2P", "[", "vec", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"chi2vec", "[", "vec_", "]"}], ":=", 
      RowBox[{"Join", "[", 
       RowBox[{"vec", ",", 
        RowBox[{"{", 
         RowBox[{"chi2", "[", "vec", "]"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PLike", "[", "vec_", "]"}], ":=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"chi2", "[", "vec", "]"}]}], "/", "2"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellLabel->
  "(L3) In[178]:=",ExpressionUUID->"142fd9e4-69ff-46a5-9776-04f6675b4067"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[
           NCache[
            Rational[10, 17], 0.5882352941176471], 
           NCache[
            Rational[164, 765], 0.21437908496732025`], 
           NCache[
            Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
          1.6], Opacity[1.], LineBox[CompressedData["
1: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
gpnrFd0T70mEWXDSrpk+CgKehL0VGWHVW+M3T+kgBbd/xrdKjpKIQ1yX5lxG
KLh2JK5m1xiJWB1MqlrBpOCN79kYThqJmFa3TmmcZOmdx+f8icW9nK1+wdMU
yC4NnamZIBGZQX5n1n+nIEJPeugUg0QEq4/JDP6kYM8OkahFFjtyHluf8oeC
0/kTxzKZJMKgNe6XyT8K1Dz73hMfWHoFLQxLrqLCP0/bisriPeq6ddPsVJiR
X8wYfGT5jbMou4SLCucm/+vvWLzYwh3swkeFnrpMk9okiZh4YG57VICKRJ2T
IkUsblNr1F0hRMUjiyvGXJ9IROna7XKNwlSsTRaIMWBxQouXSLAoFR9cN75M
ZbHvg6F/WtuoeL1ue8cgi83V5BmCO6jQWVjoXDtFIs6tjWkZ2EXFz+MmNVIs
lm+ZK0iWouLjA+XkkywWf6AVabKfipB5V8vzLF6rlu8seYiKpK1LOy6x+CvH
WoNpOSpU5FvearJ4oNnseMlRKsQ/0W8pspgcWLfdBVQcNjWbFWHxk9NiHEdV
qGi+YmE6z7qfMA73z/9OUSHBI9b8msUuze/eNmhQce3AS2EvFhsFHnoepEXF
BLfnlYMsPnU6Mk5Llwr+a5UPR1h6SHPMegheoqLAvu6ZB4uFmjWuD1ymQmPt
CvI6Fi8H5JxMvkpFrC29Np6l74dTq/eYXKcixfpj2UYWd7Ff55O8QcWMxqO4
YFZ9kgM2vyu2piLrhIKCNque907dqXa2p2KzifuPNFa9rdl7UxWdqKi1Wsj5
SGf1Y0CoeYM7FaORqVPnWX6RODV1NsibCpn7tz1dWX7iYT99QMufdX3eZo7o
cRIxfH/F4rtgKkRiS9lzWf5sOHl1NCmMCksBDc90ln8L1lTVX4+i4oWg8Zfw
YRLhfv92yOd4KtyN7rWdYfl98/0PW/7lUnFj12MvsPqFa1Xj+IZnVKyzrimt
Z/XXok9mllQJFWOVvn/kKSRi0MNYyuAlFUvfbCjLXSQizun90fJWKtwkDLu+
NJOIB/Mv/rV3UnElzGaMm9Xfd+1j30z0UHFg+P0GkQYSoWd94cy691RYF+r+
Fahl6WvWZWA1RYWpGW3BvJJEsE8UiPnNUrGiI+yOWDmrn6+FTMTNU5G+Cweb
S0lE3xU1y6ZFln/st5vNs/Io+ny96zbuXmweyPpXxMozAZWKuHd7e9EZZsr6
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
22oLsHs2zY4+Z2L4///3/w9DD6CE
           "]]},
         Annotation[#, "Charting`Private`Tag$2929#1"]& ]}, {}, {}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.003110432498105149},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox["\" \"", FontSize -> 16, StripOnInput -> False], 
              TextForm]], "InlineText"], 
           Text[
            Style[" ", FontSize -> 16]]], TraditionalForm], None}, {
        None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-0.07832897429485852, 0.6783289742948585}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], "", ""},
    {
     GraphicsBox[{
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {0.13636556135652042`, 
           0.1818207484753606}}, {0.3, -1.1}}],
         Ellipsoid[{0.3, -1.1}, {{0.022957489288986367`, 
          0.020661740360087718`}, {0.020661740360087718`, 
          0.051654350900219276`}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {0.2237377971657399, 
           0.2983170628876532}}, {0.3, -1.1}}],
         Ellipsoid[{0.3, -1.1}, {{0.06180074306244176, 0.05562066875619755}, {
          0.05562066875619755, 0.1390516718904938}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.34393543117714404`, 0.}, {
           0.30954188805942945`, 0.4127225174125727}}, {0.3, -1.1}}],
         Ellipsoid[{0.3, -1.1}, {{0.118291580819008, 0.10646242273710713`}, {
          0.10646242273710713`, 0.2661560568427677}}]]}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {None, None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      PlotRange->{{-0.07832897429485852, 
       0.6783289742948585}, {-1.6674934614422874`, -0.5325065385577127}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[
           NCache[
            Rational[10, 17], 0.5882352941176471], 
           NCache[
            Rational[164, 765], 0.21437908496732025`], 
           NCache[
            Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
          1.6], Opacity[1.], LineBox[CompressedData["
1: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
k6k=
           "]]},
         Annotation[#, "Charting`Private`Tag$4586#1"]& ]}, {}, {}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1.6674934614422874`, 0.002073621665403438},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {25, 8}},
      ImageSize->{213, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.6674934614422874`, -0.5325065385577127}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], ""},
    {
     GraphicsBox[{
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {-0.4090966840695614, 
           0.1981345671107559}}, {0.3, -0.1}}],
         Ellipsoid[{0.3, -0.1}, {{
          0.022957489288986367`, -0.06198522108026318}, {-0.06198522108026318,
           0.20661740360087716`}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {-0.67121339149722, 
           0.3250834825652867}}, {0.3, -0.1}}],
         Ellipsoid[{0.3, -0.1}, {{
          0.06180074306244176, -0.1668620062685927}, {-0.1668620062685927, 
          0.5562066875619754}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.34393543117714404`, 0.}, {-0.9286256641782887,
            0.44975393628127724`}}, {0.3, -0.1}}],
         Ellipsoid[{0.3, -0.1}, {{
          0.118291580819008, -0.3193872682113215}, {-0.3193872682113215, 
          1.064624227371071}}]]}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(m\\)]\\)\"", 
               FontSize -> 16, StripOnInput -> False], TextForm]], 
            "InlineText"], 
           Text[
            Style[
            "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", FontSize -> 
             16]]], TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {50, 8}},
      ImageSize->{250, 238},
      PlotRange->{{-0.07832897429485852, 
       0.6783289742948585}, {-1.2349869228845751`, 1.034986922884575}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.22727593559420073`, 0.}, {-0.3636414969507212,
            0.27273112271304095`}}, {-1.1, -0.1}}],
         Ellipsoid[{-1.1, -0.1}, {{
          0.051654350900219276`, -0.08264696144035084}, {-0.08264696144035084,
           0.20661740360087716`}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.3728963286095665, 0.}, {-0.5966341257753065, 
           0.44747559433147993`}}, {-1.1, -0.1}}],
         Ellipsoid[{-1.1, -0.1}, {{
          0.1390516718904938, -0.2224826750247901}, {-0.2224826750247901, 
          0.5562066875619754}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.5159031467657158, 0.}, {-0.8254450348251453, 
           0.6190837761188591}}, {-1.1, -0.1}}],
         Ellipsoid[{-1.1, -0.1}, {{
          0.2661560568427677, -0.42584969094842834`}, {-0.42584969094842834`, 
          1.064624227371071}}]]}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      PlotRange->{{-1.6674934614422874`, -0.5325065385577127}, \
{-1.2349869228845751`, 1.034986922884575}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[
           NCache[
            Rational[10, 17], 0.5882352941176471], 
           NCache[
            Rational[164, 765], 0.21437908496732025`], 
           NCache[
            Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
          1.6], Opacity[1.], LineBox[CompressedData["
1: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
FfCrvWaq9BEH//+//38A3bSiUg==
           "]]},
         Annotation[#, "Charting`Private`Tag$6179#1"]& ]}, {}, {}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.0010368108327017207`},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.2349869228845751`, 1.034986922884575}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
  "Grid"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[178]:=",ExpressionUUID->"7708a801-3b76-472f-8cfb-d4a6dabb328b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"ToFileName", "[", 
     RowBox[{"\"\<results-chi2\>\"", ",", 
      RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
       RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
     "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "mvn", ",", "logD", ",", "parnames", ",", "PMat", ",", "CPMat", ",", 
     "vecP", ",", "mvprior"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "(L3) In[185]:=",ExpressionUUID->"230ca7fa-08fd-4abc-bc10-d4e5c19e0f35"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["4- Fisher approximation",
  FontColor->RGBColor[0, 0, 1]],
 " - can be skipped"
}], "Section",ExpressionUUID->"485388a7-09b9-4f22-adb2-203059ac80d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"comboLP", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "do", " ", "Fisher", " ", "on", " ", "the", " ", 
     "Likelihood"}], ",", " ", 
    RowBox[{
     RowBox[{
     "1", " ", "to", " ", "do", " ", "Fisher", " ", "on", " ", "Prior", "*", 
      "Likelihood"}], " ", "-", " ", 
     RowBox[{
     "this", " ", "may", " ", "be", " ", "necessary", " ", "if", " ", "the", 
      " ", "Likelihood", " ", "is", " ", "too", " ", "degenerated"}]}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"forecast", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "a", " ", "forecast", " ", "is", " ", "considered"}],
     ";", " ", 
    RowBox[{"skips", " ", "the", " ", "minimization"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumChi2", "=", "1"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", " ", "if", " ", "chi2imp", " ", "is", " ", "numeric"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"0", " ", "if", " ", "analytic"}], " ", "-", " ", 
     RowBox[{
     "the", " ", "only", " ", "implication", " ", "is", " ", "how", " ", 
      "the", " ", "Hessian", " ", 
      RowBox[{"(", 
       RowBox[{"Fisher", " ", "matrix"}], ")"}], " ", "is", " ", 
      "computed"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"mvprior", "\[Equal]", "0"}], ",", 
    RowBox[{"comboLP", "=", "0"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"comboLP", "\[Equal]", "0"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"forecast", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"minimum", " ", "chi2"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fmMethods", "=", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ConjugateGradient\>\"", ",", "\"\<PrincipalAxis\>\"", ",", 
            "\"\<Newton\>\"", ",", "\"\<QuasiNewton\>\""}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"LaunchKernels", "[", 
          RowBox[{"Length", "[", "fmMethods", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"AbsoluteTiming", "[", 
             RowBox[{
              RowBox[{"DistributeDefinitions", "[", "\"\<Global`\>\"", "]"}], 
              ";"}], "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"AbsoluteTiming", "[", 
           RowBox[{
            RowBox[{"DistributeDefinitions", "[", 
             RowBox[{"fmMethods", ",", "chi2"}], "]"}], ";"}], "]"}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tabfm1", "=", 
          RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Off", "[", 
              RowBox[{
               RowBox[{"General", "::", "partd"}], ",", 
               RowBox[{"FindMinimum", "::", "fddis"}], ",", 
               RowBox[{"FindMinimum", "::", "bdmtd"}]}], "]"}], ";", 
             RowBox[{"AbsoluteTiming", "[", 
              RowBox[{"FindMinimum", "[", 
               RowBox[{
                RowBox[{"chi2imp", "[", "vec", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"vec", ",", "vecsol", ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", "i"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "fmMethods"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"CloseKernels", "[", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"tabfm1", ",", "2"}], "]"}], ",", "3"}], "]"}], ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"fmMethods", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<time in seconds\>\"", ",", "\"\<\[Chi]\>\"", ",", 
                 "\"\<best-fit vector\>\""}], "}"}]}], "}"}]}]}], "]"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sortabfm1", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"tabfm1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"sortabfm1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"beffi", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"vecL", "=", 
          RowBox[{"vec", "/.", 
           RowBox[{"beffi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vecL", "=", "vecsol"}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", "0"}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"it", " ", "is", " ", "usually", " ", "the", " ", "case"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"{", 
           RowBox[{"chi2minfi", ",", "vecL"}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"testFin", "=", 
       RowBox[{"Total", "@", 
        RowBox[{"Boole", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"vecL", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "||", 
            RowBox[{
             RowBox[{"vecL", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "beffi", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
            "\"\<{\!\(\*SubsuperscriptBox[\(\[Chi]\), \(min\), \(2\)]\),   \
{vec -> \>\"", ",", "parnames", ",", "\"\<}\>\""}], "}"}], "]"}], ",", 
          "\"\<\>\""}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"testFin", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"NumChi2", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LMat", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"chi2imp", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", "2"}], 
                  "}"}]}], "]"}]}], "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], "\[Rule]", 
                 RowBox[{"vecL", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Get", "[", "\"\<code-stat/NHessian.m\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Hscale", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Total", "@", 
                 RowBox[{"Boole", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Equal", "[", 
                    RowBox[{"#", ",", "0"}], "]"}], "&"}], ",", "vecL"}], 
                   "]"}], "]"}]}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"Abs", "[", "vecL", "]"}], 
                RowBox[{"10", "^", 
                 RowBox[{"-", "4"}]}]}], ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "3"}]}]}], "]"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "in", " ", "the", " ", "rare", " ", "case", " ", "that", " ", 
               "a", " ", "bf", " ", "value", " ", "is", " ", "zero"}], 
              "..."}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2impt", "[", "vec_", "]"}], ":=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"coc", "++"}], ";", 
               RowBox[{"chi2imp", "[", "vec", "]"}]}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"coc", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"LMat", "=", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{"NHessian", "[", 
               RowBox[{"chi2impt", ",", "vecL", ",", 
                RowBox[{"Scale", "\[Rule]", "Hscale"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<NHessian calculated with \>\"", ",", "coc", ",", 
                "\"\< evaluations.\>\""}], "}"}], "]"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<L=\>\"", ",", 
           RowBox[{"MatrixForm", "[", "LMat", "]"}], ",", 
           "\"\<       \!\(\*SuperscriptBox[\(L\), \(-1\)]\)=\>\"", ",", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"CLMat", "=", 
             RowBox[{"Inverse", "[", "LMat", "]"}]}], "]"}]}], "]"}], ";", 
         RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"testE", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", ">", "0"}], ")"}], "&"}], ",", 
            RowBox[{"Eigenvalues", "[", "CLMat", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Times", "@@", 
             RowBox[{"(", 
              RowBox[{"Boole", "[", "testE", "]"}], ")"}]}], "\[NotEqual]", 
            "1"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Fisher went wrong! C is not positive definite!\>\"", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"useFisher", "=", "0"}], ";"}], "\[IndentingNewLine]", 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"useFisher", "=", "1"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Fisher", " ", "approximation", " ", "for", " ", "likelihood", 
              " ", "and", " ", "corresponding", " ", "chi2"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"Lmax", "=", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "chi2minfi"}], "/", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"LikeL", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"Lmax", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecL"}], ")"}], ".", "LMat", ".", 
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecL"}], ")"}]}]}], "/", "2"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"chi2L", "[", 
                RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"LikeL", "[", "vec", "]"}], "]"}]}]}], ";"}], "*)"}],
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2L", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"chi2minfi", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecL"}], ")"}], ".", "LMat", ".", 
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecL"}], ")"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2F", "[", "vec_", "]"}], ":=", 
             RowBox[{
              RowBox[{"chi2L", "[", "vec", "]"}], "+", 
              RowBox[{"chi2P", "[", "vec", "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"triplotL", "=", 
              RowBox[{"TriPlotF", "[", 
               RowBox[{
               "2", ",", "0", ",", "CLMat", ",", "vecL", ",", "parnames", ",",
                 "3", ",", 
                RowBox[{"{", 
                 RowBox[{"Darker", "[", "Emerald", "]"}], "}"}]}], "]"}]}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Min \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) outside prior \
intervals! Fisher can't be used.\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"useFisher", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"mvprior", "\[Equal]", "1"}], "&&", 
         RowBox[{"useFisher", "\[Equal]", "1"}]}], "\[IndentingNewLine]", ",",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "combined", " ", "Fisher", " ", "and", " ", "ML", " ", "estimator"}],
          " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FMat", "=", 
          RowBox[{"LMat", "+", "PMat"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"CFMat", "=", 
          RowBox[{"Inverse", "[", "FMat", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vecF", "=", 
          RowBox[{"CFMat", ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"LMat", ".", "vecL"}], "+", 
             RowBox[{"PMat", ".", "vecP"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"TriPlotF", "[", 
          RowBox[{
          "3", ",", "0", ",", "CFMat", ",", "vecF", ",", "parnames", ",", "3",
            ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Iris"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"triplotF", "=", 
           RowBox[{"TriPlotCombo", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"ToFileName", "[", 
            RowBox[{"\"\<results-analysis\>\"", ",", 
             RowBox[{"rname", "<>", "\"\<-run\>\"", "<>", 
              RowBox[{"ToString", "[", "run", "]"}], "<>", 
              "\"\<-triplot_Fisher.pdf\>\""}]}], "]"}], ",", "triplotF", ",", 
           
           RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
           RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"useFisher", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FMat", "=", "LMat"}], ";", "\[IndentingNewLine]", 
         RowBox[{"CFMat", "=", "CLMat"}], ";", "\[IndentingNewLine]", 
         RowBox[{"vecF", "=", "vecL"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"ToFileName", "[", 
            RowBox[{"\"\<results-analysis\>\"", ",", 
             RowBox[{"rname", "<>", "\"\<-run\>\"", "<>", 
              RowBox[{"ToString", "[", "run", "]"}], "<>", 
              "\"\<-triplot_Fisher.pdf\>\""}]}], "]"}], ",", "triplotL", ",", 
           
           RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
           RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"forecast", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"minimum", " ", "chi2"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fmMethods", "=", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ConjugateGradient\>\"", ",", "\"\<PrincipalAxis\>\"", ",", 
            "\"\<Newton\>\"", ",", "\"\<QuasiNewton\>\""}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"LaunchKernels", "[", 
          RowBox[{"Length", "[", "fmMethods", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"AbsoluteTiming", "[", 
             RowBox[{
              RowBox[{"DistributeDefinitions", "[", "\"\<Global`\>\"", "]"}], 
              ";"}], "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"AbsoluteTiming", "[", 
           RowBox[{
            RowBox[{"DistributeDefinitions", "[", 
             RowBox[{"fmMethods", ",", "chi2"}], "]"}], ";"}], "]"}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tabfm1", "=", 
          RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Off", "[", 
              RowBox[{
               RowBox[{"General", "::", "partd"}], ",", 
               RowBox[{"FindMinimum", "::", "fddis"}], ",", 
               RowBox[{"FindMinimum", "::", "bdmtd"}]}], "]"}], ";", 
             RowBox[{"AbsoluteTiming", "[", 
              RowBox[{"FindMinimum", "[", 
               RowBox[{
                RowBox[{"chi2", "[", "vec", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"vec", ",", "vecsol", ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", "i"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "fmMethods"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"CloseKernels", "[", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"tabfm1", ",", "2"}], "]"}], ",", "3"}], "]"}], ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"fmMethods", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<time in seconds\>\"", ",", "\"\<\[Chi]\>\"", ",", 
                 "\"\<best-fit vector\>\""}], "}"}]}], "}"}]}]}], "]"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sortabfm1", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"tabfm1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"sortabfm1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"beffi", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"vecF", "=", 
          RowBox[{"vec", "/.", 
           RowBox[{"beffi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vecF", "=", "vecsol"}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", "0"}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"it", " ", "is", " ", "usually", " ", "the", " ", "case"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"{", 
           RowBox[{"chi2minfi", ",", "vecF"}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"testFin", "=", 
       RowBox[{"Total", "@", 
        RowBox[{"Boole", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"vecF", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "||", 
            RowBox[{
             RowBox[{"vecF", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "beffi", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
            "\"\<{\!\(\*SubsuperscriptBox[\(\[Chi]\), \(min\), \(2\)]\),   \
{vec -> \>\"", ",", "parnames", ",", "\"\<}\>\""}], "}"}], "]"}], ",", 
          "\"\<\>\""}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"testFin", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"NumChi2", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"FMat", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"chi2", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", "2"}], 
                  "}"}]}], "]"}]}], "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], "\[Rule]", 
                 RowBox[{"vecF", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Get", "[", "\"\<code-stat/NHessian.m\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Hscale", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Total", "@", 
                 RowBox[{"Boole", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Equal", "[", 
                    RowBox[{"#", ",", "0"}], "]"}], "&"}], ",", "vecF"}], 
                   "]"}], "]"}]}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"Abs", "[", "vecF", "]"}], 
                RowBox[{"10", "^", 
                 RowBox[{"-", "4"}]}]}], ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "3"}]}]}], "]"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "in", " ", "the", " ", "rare", " ", "case", " ", "that", " ", 
               "a", " ", "bf", " ", "value", " ", "is", " ", "zero"}], 
              "..."}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2impt", "[", "vec_", "]"}], ":=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"coc", "++"}], ";", 
               RowBox[{"chi2", "[", "vec", "]"}]}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"coc", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"FMat", "=", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{"NHessian", "[", 
               RowBox[{"chi2impt", ",", "vecF", ",", 
                RowBox[{"Scale", "\[Rule]", "Hscale"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<NHessian calculated with \>\"", ",", "coc", ",", 
                "\"\< evaluations.\>\""}], "}"}], "]"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<L=\>\"", ",", 
           RowBox[{"MatrixForm", "[", "FMat", "]"}], ",", 
           "\"\<       \!\(\*SuperscriptBox[\(L\), \(-1\)]\)=\>\"", ",", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"CFMat", "=", 
             RowBox[{"Inverse", "[", "FMat", "]"}]}], "]"}]}], "]"}], ";", 
         RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"testE", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", ">", "0"}], ")"}], "&"}], ",", 
            RowBox[{"Eigenvalues", "[", "CFMat", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Times", "@@", 
             RowBox[{"(", 
              RowBox[{"Boole", "[", "testE", "]"}], ")"}]}], "\[NotEqual]", 
            "1"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Fisher went wrong! C is not positive definite!\>\"", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"useFisher", "=", "0"}], ";"}], "\[IndentingNewLine]", 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"useFisher", "=", "1"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Fisher", " ", "approximation", " ", "for", " ", "likelihood", 
              " ", "and", " ", "corresponding", " ", "chi2"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"Lmax", "=", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "chi2minfi"}], "/", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"LikeF", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"Lmax", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecF"}], ")"}], ".", "FMat", ".", 
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecF"}], ")"}]}]}], "/", "2"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"chi2F", "[", 
                RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"LikeF", "[", "vec", "]"}], "]"}]}]}], ";"}], "*)"}],
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2F", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"chi2minfi", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecF"}], ")"}], ".", "FMat", ".", 
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecF"}], ")"}]}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"TriPlotF", "[", 
             RowBox[{
             "3", ",", "0", ",", "CFMat", ",", "vecF", ",", "parnames", ",", 
              "3", ",", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", "Iris"}], "}"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"triplotF", "=", 
              RowBox[{"TriPlotCombo", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "3"}], "}"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Export", "[", 
             RowBox[{
              RowBox[{"ToFileName", "[", 
               RowBox[{"\"\<results-analysis\>\"", ",", 
                RowBox[{"rname", "<>", "\"\<-run\>\"", "<>", 
                 RowBox[{"ToString", "[", "run", "]"}], "<>", 
                 "\"\<-triplot_Fisher.pdf\>\""}]}], "]"}], ",", "triplotF", 
              ",", 
              RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
              
              RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Min \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) outside prior \
intervals! Fisher can't be used.\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"useFisher", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosteriorF", "[", 
    RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "dpar"}], "/", "2"}], ")"}]}], 
    RowBox[{
     RowBox[{"Det", "[", "FMat", "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}]}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"vec", "-", "vecF"}], ")"}], ".", "FMat", ".", 
        RowBox[{"(", 
         RowBox[{"vec", "-", "vecF"}], ")"}]}]}], "/", "2"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellLabel->
  "(L3) In[187]:=",ExpressionUUID->"e2e11314-00df-48a1-903d-42226ec84113"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.014973`", ",", "Null"}], "}"}]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[187]:=",ExpressionUUID->"fbd4eb46-fd2e-444c-b4cd-4445a84ed426"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], " ", ":", 
  "  ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"8468ee40-ae2f-4b9c-b5fe-b5be1d764e0a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], " ", ":", 
  "  ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d775c5ea-30ff-45a7-9b25-7bf5fa8bb23d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], " ", ":", 
  "  ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0d35b0fa-76a2-424a-bfeb-6adc11a7bc2a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"\"\>", "\<\"time in seconds\"\>", "\<\"\[Chi]\"\>", "\<\"best-fit \
vector\"\>"},
    {"\<\"ConjugateGradient\"\>", "1.197378`", "25.83402055845957`", 
     GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.31974273644122214`", ",", 
           RowBox[{"-", "1.0384595196136421`"}], ",", 
           RowBox[{"-", "0.1875566049924215`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"PrincipalAxis\"\>", "0.000364`", "30.455010825637455`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3`", ",", 
           RowBox[{"-", "1.`"}], ",", "0.`"}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"Newton\"\>", "1.715964`", "25.833890229140195`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.31989400914202054`", ",", 
           RowBox[{"-", "1.038794286781462`"}], ",", 
           RowBox[{"-", "0.1884922436285376`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"QuasiNewton\"\>", "1.474878`", "25.83386713685681`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3199063628033962`", ",", 
           RowBox[{"-", "1.0383114896599055`"}], ",", 
           RowBox[{"-", "0.18902575460510126`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{
    1.197378, 
     25.83402055845957, {$CellContext`vec -> {
       0.31974273644122214`, -1.0384595196136421`, -0.1875566049924215}}}, {
    0.000364, 30.455010825637455`, {$CellContext`vec -> {0.3, -1., 0.}}}, {
    1.715964, 
     25.833890229140195`, {$CellContext`vec -> {
       0.31989400914202054`, -1.038794286781462, -0.1884922436285376}}}, {
    1.474878, 
     25.83386713685681, {$CellContext`vec -> {
       0.3199063628033962, -1.0383114896599055`, -0.18902575460510126`}}}}, 
   TableHeadings -> {{
     "ConjugateGradient", "PrincipalAxis", "Newton", "QuasiNewton"}, {
     "time in seconds", "\[Chi]", "best-fit vector"}}]]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[187]:=",ExpressionUUID->"d20115bd-1898-4af7-88f3-e0af4c1d3ca0"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"25.83386713685681`", ",", 
       RowBox[{"{", 
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3199063628033962`", ",", 
           RowBox[{"-", "1.0383114896599055`"}], ",", 
           RowBox[{"-", "0.18902575460510126`"}]}], "}"}]}], "}"}]}], "}"}]},
    {
     TemplateBox[{
      "\"{\\!\\(\\*SubsuperscriptBox[\\(\[Chi]\\), \\(min\\), \\(2\\)]\\),   \
{vec -> \"",RowBox[{"{", 
         RowBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(m\\)]\\)\"", ",",
            "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", ",", 
           "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\""}], "}"}],"\"}\""},
      
      "RowDefault"]},
    {"\<\"\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[187]:=",ExpressionUUID->"3f351cbc-dbdd-4d08-b610-d6d9b37e1b27"],

Cell[BoxData[
 TemplateBox[{"\"NHessian calculated with \"","19","\" evaluations.\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[187]:=",ExpressionUUID->"6567769d-54ae-46e4-a87b-5a160d7ee4b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1603.767177109104`", "467.5028512240883`", "309.89090457042823`"},
       {"467.5028512240883`", "274.6738233058826`", "124.37505804499945`"},
       {"309.89090457042823`", "124.37505804499945`", "139.18093859157008`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"       \\!\\(\\*SuperscriptBox[\\(L\\), \
\\(-1\\)]\\)=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.0014457441408012343`", 
        RowBox[{"-", "0.001684872948548174`"}], 
        RowBox[{"-", "0.0017133581021173397`"}]},
       {
        RowBox[{"-", "0.0016848729485481738`"}], "0.008078654380953045`", 
        RowBox[{"-", "0.0034678333852960473`"}]},
       {
        RowBox[{"-", "0.0017133581021173397`"}], 
        RowBox[{"-", "0.003467833385296047`"}], "0.014098669620723824`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["L=", 
   MatrixForm[{{1603.767177109104, 467.5028512240883, 309.89090457042823`}, {
    467.5028512240883, 274.6738233058826, 124.37505804499945`}, {
    309.89090457042823`, 124.37505804499945`, 139.18093859157008`}}], 
   "       \!\(\*SuperscriptBox[\(L\), \(-1\)]\)=", 
   MatrixForm[{{
    0.0014457441408012343`, -0.001684872948548174, -0.0017133581021173397`}, \
{-0.0016848729485481738`, 
    0.008078654380953045, -0.0034678333852960473`}, {-0.0017133581021173397`, \
-0.003467833385296047, 0.014098669620723824`}}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[187]:=",ExpressionUUID->"e8a7116d-63a7-4ccf-b512-d07521bd90f7"],

Cell[BoxData["\<\" \"\>"], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[187]:=",ExpressionUUID->"4328b41f-b612-4b56-a30c-ec1bc1d8fbd4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[10, 17], 0.5882352941176471], 
            NCache[
             Rational[164, 765], 0.21437908496732025`], 
            NCache[
             Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
           1.6], Opacity[1.], LineBox[CompressedData["
1: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
gpnrFd0T70mEWXDSrpk+CgKehL0VGWHVW+M3T+kgBbd/xrdKjpKIQ1yX5lxG
KLh2JK5m1xiJWB1MqlrBpOCN79kYThqJmFa3TmmcZOmdx+f8icW9nK1+wdMU
yC4NnamZIBGZQX5n1n+nIEJPeugUg0QEq4/JDP6kYM8OkahFFjtyHluf8oeC
0/kTxzKZJMKgNe6XyT8K1Dz73hMfWHoFLQxLrqLCP0/bisriPeq6ddPsVJiR
X8wYfGT5jbMou4SLCucm/+vvWLzYwh3swkeFnrpMk9okiZh4YG57VICKRJ2T
IkUsblNr1F0hRMUjiyvGXJ9IROna7XKNwlSsTRaIMWBxQouXSLAoFR9cN75M
ZbHvg6F/WtuoeL1ue8cgi83V5BmCO6jQWVjoXDtFIs6tjWkZ2EXFz+MmNVIs
lm+ZK0iWouLjA+XkkywWf6AVabKfipB5V8vzLF6rlu8seYiKpK1LOy6x+CvH
WoNpOSpU5FvearJ4oNnseMlRKsQ/0W8pspgcWLfdBVQcNjWbFWHxk9NiHEdV
qGi+YmE6z7qfMA73z/9OUSHBI9b8msUuze/eNmhQce3AS2EvFhsFHnoepEXF
BLfnlYMsPnU6Mk5Llwr+a5UPR1h6SHPMegheoqLAvu6ZB4uFmjWuD1ymQmPt
CvI6Fi8H5JxMvkpFrC29Np6l74dTq/eYXKcixfpj2UYWd7Ff55O8QcWMxqO4
YFZ9kgM2vyu2piLrhIKCNque907dqXa2p2KzifuPNFa9rdl7UxWdqKi1Wsj5
SGf1Y0CoeYM7FaORqVPnWX6RODV1NsibCpn7tz1dWX7iYT99QMufdX3eZo7o
cRIxfH/F4rtgKkRiS9lzWf5sOHl1NCmMCksBDc90ln8L1lTVX4+i4oWg8Zfw
YRLhfv92yOd4KtyN7rWdYfl98/0PW/7lUnFj12MvsPqFa1Xj+IZnVKyzrimt
Z/XXok9mllQJFWOVvn/kKSRi0MNYyuAlFUvfbCjLXSQizun90fJWKtwkDLu+
NJOIB/Mv/rV3UnElzGaMm9Xfd+1j30z0UHFg+P0GkQYSoWd94cy691RYF+r+
Fahl6WvWZWA1RYWpGW3BvJJEsE8UiPnNUrGiI+yOWDmrn6+FTMTNU5G+Cweb
S0lE3xU1y6ZFln/st5vNs/Io+ny96zbuXmweyPpXxMozAZWKuHd7e9EZZsr6
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
22oLsHs2zY4+Z2L4///3/w9DD6CE
            "]]},
          Annotation[#, "Charting`Private`Tag$2929#1"]& ]}, {}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[91, 255], 0.3568627450980392], 
            NCache[
             Rational[94, 255], 0.3686274509803922], 
            NCache[
             Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$8847#1"]& ]}, {}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.003110432498105149},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox["\" \"", FontSize -> 16, StripOnInput -> False], 
              TextForm]], "InlineText"], 
           Text[
            Style[" ", FontSize -> 16]]], TraditionalForm], None}, {
        None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-0.07832897429485854, 0.6783289742948586}, {
       0.0031104324981051485`, 10.492144707067458`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], "", ""},
    {
     GraphicsBox[{{
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {0.13636556135652042`,
             0.1818207484753606}}, {0.3, -1.1}}],
          
          Ellipsoid[{0.3, -1.1}, {{0.022957489288986367`, 
           0.020661740360087718`}, {0.020661740360087718`, 
           0.051654350900219276`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {0.2237377971657399, 
            0.2983170628876532}}, {0.3, -1.1}}],
          
          Ellipsoid[{0.3, -1.1}, {{0.06180074306244176, 
           0.05562066875619755}, {0.05562066875619755, 
           0.1390516718904938}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.34393543117714404`, 0.}, {
            0.30954188805942945`, 0.4127225174125727}}, {0.3, -1.1}}],
          
          Ellipsoid[{0.3, -1.1}, {{0.118291580819008, 0.10646242273710713`}, {
           0.10646242273710713`, 0.2661560568427677}}]]}}, {
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.0576113318949138, 0.}, {-0.0671403548526752, 
            0.11848516739352685`}}, {
            0.3199063628033962, -1.0383114896599055`}}],
          
          Ellipsoid[{0.3199063628033962, -1.0383114896599055`}, {{
           0.003319065562705912, -0.003868045266959757}, \
{-0.003868045266959757, 0.018546562142015225`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.09452410389931643, 
            0.}, {-0.11015856896881657`, 0.19440106494434983`}}, {
            0.3199063628033962, -1.0383114896599055`}}],
          
          Ellipsoid[{0.3199063628033962, -1.0383114896599055`}, {{
           0.008934806217968766, -0.010412640018608432`}, \
{-0.010412640018608432`, 0.04992668436875484}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1307743705300073, 0.}, {-0.1524046980728644, 
            0.26895443436882205`}}, {
            0.3199063628033962, -1.0383114896599055`}}],
          
          Ellipsoid[{0.3199063628033962, -1.0383114896599055`}, {{
           0.01710193598751964, -0.019930628456294657`}, \
{-0.019930628456294657`, 0.09556367976133397}}]]}}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {None, None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      PlotRange->{{-0.07832897429485854, 
       0.6783289742948586}, {-1.6674934614422876`, -0.5325065385577126}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[10, 17], 0.5882352941176471], 
            NCache[
             Rational[164, 765], 0.21437908496732025`], 
            NCache[
             Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
           1.6], Opacity[1.], LineBox[CompressedData["
1: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
k6k=
            "]]},
          Annotation[#, "Charting`Private`Tag$4586#1"]& ]}, {}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[91, 255], 0.3568627450980392], 
            NCache[
             Rational[94, 255], 0.3686274509803922], 
            NCache[
             Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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

            "]]},
          Annotation[#, "Charting`Private`Tag$10440#1"]& ]}, {}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1.6674934614422874`, 0.002073621665403438},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {25, 8}},
      ImageSize->{213, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.6674934614422876`, -0.5325065385577126}, {
       0.0020736216654034375`, 4.438543472487072}},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], ""},
    {
     GraphicsBox[{{
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {-0.4090966840695614, 
            0.1981345671107559}}, {0.3, -0.1}}],
          
          Ellipsoid[{0.3, -0.1}, {{
           0.022957489288986367`, -0.06198522108026318}, \
{-0.06198522108026318, 0.20661740360087716`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {-0.67121339149722, 
            0.3250834825652867}}, {0.3, -0.1}}],
          
          Ellipsoid[{0.3, -0.1}, {{
           0.06180074306244176, -0.1668620062685927}, {-0.1668620062685927, 
           0.5562066875619754}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.34393543117714404`, 
            0.}, {-0.9286256641782887, 0.44975393628127724`}}, {0.3, -0.1}}],
          
          Ellipsoid[{0.3, -0.1}, {{
           0.118291580819008, -0.3193872682113215}, {-0.3193872682113215, 
           1.064624227371071}}]]}}, {
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.0576113318949138, 0.}, {-0.06827545724737784,
             0.16644959482778546`}}, {
            0.3199063628033962, -0.18902575460510126`}}],
          
          Ellipsoid[{0.3199063628033962, -0.18902575460510126`}, {{
           0.003319065562705912, -0.003933440027755682}, \
{-0.003933440027755682, 0.03236700568067246}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.09452410389931643, 
            0.}, {-0.11202095494678607`, 0.2730972931540529}}, {
            0.3199063628033962, -0.18902575460510126`}}],
          
          Ellipsoid[{0.3199063628033962, -0.18902575460510126`}, {{
           0.008934806217968766, -0.010588680384290651`}, \
{-0.010588680384290651`, 0.0871308258752606}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1307743705300073, 
            0.}, {-0.15498131444800928`, 0.3778308932048856}}, {
            0.3199063628033962, -0.18902575460510126`}}],
          
          Ellipsoid[{0.3199063628033962, -0.18902575460510126`}, {{
           0.01710193598751964, -0.020267583840851536`}, \
{-0.020267583840851536`, 0.16677539168803443`}}]]}}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(m\\)]\\)\"", 
               FontSize -> 16, StripOnInput -> False], TextForm]], 
            "InlineText"], 
           Text[
            Style[
            "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", FontSize -> 
             16]]], TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {50, 8}},
      ImageSize->{250, 238},
      PlotRange->{{-0.07832897429485854, 
       0.6783289742948586}, {-1.2349869228845753`, 1.0349869228845752`}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.22727593559420073`, 
            0.}, {-0.3636414969507212, 0.27273112271304095`}}, {-1.1, -0.1}}],
          
          
          Ellipsoid[{-1.1, -0.1}, {{
           0.051654350900219276`, -0.08264696144035084}, \
{-0.08264696144035084, 0.20661740360087716`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.3728963286095665, 0.}, {-0.5966341257753065, 
            0.44747559433147993`}}, {-1.1, -0.1}}],
          
          Ellipsoid[{-1.1, -0.1}, {{
           0.1390516718904938, -0.2224826750247901}, {-0.2224826750247901, 
           0.5562066875619754}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.5159031467657158, 0.}, {-0.8254450348251453, 
            0.6190837761188591}}, {-1.1, -0.1}}],
          
          Ellipsoid[{-1.1, -0.1}, {{
           0.2661560568427677, -0.42584969094842834`}, {-0.42584969094842834`,
            1.064624227371071}}]]}}, {
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.13618576336025445`, 
            0.}, {-0.05845893567327033, 
            0.17014569791981488`}}, {-1.0383114896599055`, \
-0.18902575460510126`}}],
          
          Ellipsoid[{-1.0383114896599055`, -0.18902575460510126`}, {{
           0.018546562142015225`, -0.00796127477989233}, \
{-0.00796127477989233, 0.03236700568067246}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.22344279887424173`, 
            0.}, {-0.09591478495069303, 
            0.27916156594904484`}}, {-1.0383114896599055`, \
-0.18902575460510126`}}],
          
          Ellipsoid[{-1.0383114896599055`, -0.18902575460510126`}, {{
           0.04992668436875484, -0.02143146800280385}, {-0.02143146800280385, 
           0.0871308258752606}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.30913375707181184`, 
            0.}, {-0.13269838177792667`, 
            0.3862208321175258}}, {-1.0383114896599055`, \
-0.18902575460510126`}}],
          
          Ellipsoid[{-1.0383114896599055`, -0.18902575460510126`}, {{
           0.09556367976133397, -0.04102154931636012}, {-0.04102154931636012, 
           0.16677539168803443`}}]]}}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      PlotRange->{{-1.6674934614422876`, -0.5325065385577126}, \
{-1.2349869228845753`, 1.0349869228845752`}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[10, 17], 0.5882352941176471], 
            NCache[
             Rational[164, 765], 0.21437908496732025`], 
            NCache[
             Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
           1.6], Opacity[1.], LineBox[CompressedData["
1:eJw12Xc4ll/4AHCJSgOFlFQko6xsUu4QbdmKZAtlZSQre5PMMrKz957HHi+Z
kVH2Hq/XOxDf9Ht/v+v6Pdfzz+c6fzznPOc+930/18NuaK1qQklBvij/76ao
wb744tlMQJlUsdyl/ykD77Hx6ExEQD/y5J/ScKhAArtWxPc6ApLbDZopfKAC
7uoqwecrCYiboa8AF6sCsjUKbsW5BLTC+fuwqqQqdPoKGMxEEdCUOqnpcqAa
SCXl6h6NIKCnfdNUHWVqkFPFo83/kYDcbtv2dU6rQcjaFbX3gQS04+uWNSml
Dk9VmBVOuxPQQmankSlOHUZYKa7JviIgrFuln6e1JtwTd+N8ZUxAELg+w5Gi
CVVP99hDDQjohRDrX94hTYjzIrKM6RDQ7cufLWwktUB3efmkrTIBebLq8kwd
fQbzpQO4ZCkCWl07aktR+xwID9OqKE4SkEdoofrOO12YZPrwZOUYAVE7UHyW
qdeFzmnt2QFqAprAOCiyHn4JXx3PnEz7h0dN8y+8k8JfwsNUTz0FAh6JPcPI
LpboQeofvSNB43hUviDR2XjcAEJbpePf/sQj6cuGbHrCBuD0kfmGzg88umir
rK+qbQBKnH3P+XrxSLPyOc/NXAPYU5bJ723Co5x3DifYVQxBNYtVnSEbj7DC
booz+UZw2253eT8Dj2ocuDQvThgBj8wPt/lUPArZkKOvPmYMB0PBmeUJeJTn
taFzxsQYcv7t7WmF49Hrr1vO+ldM4JDWWErCOzya1lKkoS8yhSLqmE1ORTya
Uw6i4LpoAZMfE7bl5PEonE58cUnNAk6wpP3Vu4NHPsevUDEEW4CpQNGJuJt4
JB5kUZu5ZwEXtTDctIJ4JNcqyTg1+RqCsg70tpnx6Iu6D+KpswTjR6/621e2
kOVClH79kg1EDFv+nFvcQl0d078sjtsC0rOfpJjfQiQRSYXn/LbAYu+5fnNy
C30Qdgncs7OFgYT4Y4WDW+hWh/x3baq3IIPtuxNbu4X0PfkSCEJ2wPxJsvhV
6Ba6+EKSsbjFAXDDnBKRQVvIjuBq6Yp1gE4WhvoGf7LdLt2OOu8ITukbnUxe
W8hirp4t18YRRitTp1sct5ATjeNd7yvv4PPkSXo2/S10JilF50G0E7DwzViN
Cm8h+8+WDUU1LoC36SUevrGFGL+otf3bdAFMea2zIP8W+pfm8SGX0xWcIcbP
j3sL0eIW7lyIcIVx1UdfRVm3EHWyoM9razeIf1/+PZx6Cx1hepP35NYHYO0I
5HswikN/VUz+fv7kCVb1ww8lhnHIm73mmXm5JzSWsptzDuKQ9t8KM5cxTzBO
rs441INDfDuU902veEH++5VLNQiHkrWPBRlWeoEM34PTvJk4NHZk7UAV6w36
n45tn3T8Xz96finSD0r81Rn33+KQQ7Pngz/ID6jck4VXrHHIVVbzD8eGH2RZ
SFq3mePQv+Dnbhb3/WFL3mzZTReH6tZMXLsoA8Bru2McexeH6OYOP7/lHwjp
Ov6onwGHbPlYtV0GQ0Dq9MFTAj0OWXFgjgYcCYXedvtpJlocona0e7h8MxR2
hAwP6RzDobSqTPWM9FCIonf2w/zZRLKiwv8uuobBjPlCKKF7E53iTkmsvBgO
zqx1CQo2m6giSqjD4t8nSPfPrg+y2ES4xzIprJcj4Ds+ZrLPeBOJHjnZ808m
Ati6bNm0n2+irlx6Rp0PEdDhwJ1uJbeJNBkxLm8oI4GxLyI3lnETiY0O/hY5
EwX5nuY1K1VYZLrC3nddOwYwTxlPlpVgUbTIOZpG7xhYvoh03fOwaMCmi/1L
fgxcrWE8xJCMRfL3y3TOUcZCHB7du+WPRdSysKdeEAsBRmeHwzSwiLXAR+Ic
4xcwVmjZFMFvoL8C7kaGzAngxWAle7C2gWKC1uiuP0yA5JlzkZ0LG6gWS4qX
dUuACTcrcd2xDSRW+XnZYD4BVCvOu/k1bqD2xl23txWJANw2x8fCNlCLnCWB
3yIJWGgucrrzbqCv6dZlToEpEPI42t6EcwMJyKllFWamwL+Pp1ofX95APFy/
PjC0p8D82QPDCwwbKHmoLM/wcCoUXp1KrtpbR6rVEl1XPVLh7p0UVkLXOhIX
Sp4y9UoDq3ecjGZm6yhX6Le4fm4GTNckGj01XEcXuc5rJfRlgNoBU6n4i3V0
/Ted6EliBkj6HlGlVl5HjK1njwXc/gaHI5c+pkqso286c9rbg9/gc0H2id9H
1lGyNQ/n9NEsaF7gP6yasYauSGJUvOJzoCZzXzw1aQ1xjVpFNrTkQIl5lwX+
yxrqMvS6KbCeA6kbxoMRYWsopB7jlnU7F7xI8SlD79aQMf1fGdq5XJClPn5H
4+EaaqTNuICRyIfGq4uuzzZXEWVWs5QQdRFULZYWZa2sIkuWupMVrEVQlOU5
vzu3irwVaCq1RIsgme/i4y+jq8hvQ3V3y6gIPETVL4w3rSIJReYDn9YiuHO3
uVonahUZVg0USgcXAzL6uv1SahWNRmcUpwiWQl7ANR1RkVXUK2VyUf5JKXzO
L0M0/Kvoz/nJ+8dfl4LNDiagjG0VOevomhzPLAW24B2W48dW0f0BGcNhtjLw
KFGG8pEV9KGDtFB6oRxkDx0OOGG/gjz62t99EKwEAa6w9WnLFfSgOPYGi2ol
sDw6r1LxagUN5tvMTNpXAj5KkMVAZwXtRJiVLNZUQirPi7wKuRXU3CbRQrhf
BZTK5f0Gp1cQ1YNLnOyW1dDy9dX5qoJlNPOHl7dspBZE5e4bbmcto/2n6D3H
f7XwbYEnVzRtGf301ztUy14HAXyrt4pjl1HPs7fcRpZ1oFTzRj/HYxmVZS42
xB2ph/Fh28wE1WVkF3zco+FOA+BOuop5bi8hXS+VxvsWjcDqEq7yUGYJBcTW
Dh2+0wKzkTKfMySXUPXALYdCrRbIylufpBBZQp6Rls621i0gNnn/TSX3EkrR
+zshmdQCSrKH/K+eXkIW7sECI/9awPPo27qDuUVUYRLmq97WCouRatylgYso
N8naINugHYryzv69MLyAgieHBkZmusCCx8v+v94F9KycZmbzEAY40zfWfnUu
oBKmVVauKxiIi28dT6xbQCrs1HKrhhjwCXpbdTl9AS2Zbj4dXMCAllmvHYfd
ArpRr5h4basbDjj8Vq+fXkD6VCVTNy71wqN40k+pJ/NoP6NKOdJ8AIKiK0S8
782jmQjPQ/SuA4D5+O5jj+w8CtmivxAXNgAPff4o6onPo+KhopCR0gF4YPm3
3OfyPPpopuKDOxiAe0Ad1bc1h+IbiK+zYwdBfo5R2SRmDv3jVfUQGhoCaV7R
zvCpWfT6kvBj97cjIOzUvSSiNoN4kkX6ln78gi5RDxJfwhSa+pCmHro7A6O1
PIrG7b/Q14M7dk+iFoBU50USKR1DlbdPcvzLW4F6ioQ+hx8jaNa9c/a35wZE
NZgeU64aQtMlD0rWqnEg9mP+zfm8IfRxLDzkURMORlYMB2aThpCVWeyvzE4c
nGfSi3PwH0JKpoNI4ycOvr7W4ovXHEISbphGXyIOMs/dV14kDqKL129cviGw
BTVvr312FRpES4QlYeevWzDNtc6dndOP1HgsDz20xUOIFJPG3aR+VOaSOML+
Dg+Sj2W8piL7UfPdXUqSKx7CbcN/Mbn1I/PCuYehAXiAOtFPXk/7Uci2/H8+
SXiQTtsjVi73offChUwhPXio2GWNu+jai/Sdaw2GrhCA9pI1Uc2kF40aNn86
wUMAE/kmpSClXnQi+ZWlDD8BGMNMDu+w9aIQPBtDlAQB7DgK3vS3fUeWhIdB
B48IcEMJwJvuO7rpNtjWbUeA3DSD+eXUbjRveUWTExHgh3r2IdGgbqT9WOPD
8VYC/Ee9demDbTfK1HArWO4kwGMzj+dMd7pRRWPp0fBBAqzzJfXK/sag7vs+
R4IWCCBQ8asqjhmDkpL81bmOE0Hz1dWRhYMu9O+bjPQXWiK4n3tDuLHYhW4E
v+6jYiBCr/M+f0dZF6J6xrTWdoEI1sCSRlDpQqHqWN1NPiIUdWqFPg7pRK5b
4Q3jT4gw+j4pJ9auE7VI6zKNqBCBgnepY1a7Ex3YnOjq0iCCcqgj5ftrnSjX
6ZRonC4RtlSi32W0d6Cpc0HRk2+IIDwxaHBA0YFuhXAFbQUSoWzjiXiRQxsa
RDoCVxqIgP+8Nv/1ZRvyjVI42GgkguDdwMjQe23oxPKbopIWIuTEteIszreh
S9NFhVxdREi+J53LWd+KIp+rdVUNESE4hYctnqoVDXi47XstEaHzcXtv4EYL
uphRmDixQoQju0ZuTiMt6GqY9TbfOhE8lJLGNbJakMvxsqZqHBEc95mi6R+3
oK+Pal1c/hDBUOPwcb/IZnQGa+CcSEOCZIqUKnvXZuRFG/bG4wQJfufKvDIy
aUZDpiJbOqdI8IzSufWORDOiUiBl/0dPAqVCnPv+eBOqk9BPm2cmQYh2GP9q
SxMqS79GCD5Pgi5qvl+jeU0odkq5nfcCCe6+eCVV4d6EypebNtUvkUCKZpJg
c6UJhf7lZ3tylQSOZS6peieaUP9Evk4VJwnK9M6rKBEbkd0hq1Os3CQQrFAv
4G1vRD101d97rpGA06jbbNG8EfHe9PkyJEACQ1pz5mHVRhT55+dLyhvk9VQf
aW+RbkTsd1Q/XhMiwQV6OY6UU43oQ2MHn4EICdidbWsrDRHK7/8l6SBBnp/L
uaNuYgg9ORMWYChJAlNXpCp3DCETawG/+1IkyHE/tdqT34D2PAL8D26SoOdD
mViERwNSF3AJ7JUmAdZDx1NLrQFtr/WKxd4igYh39rnZ3XpUfF4v6IwMCTR9
lI0zu+tRxtPTQm1kO/nuFL75Wo/krtJ/sAES1Pkr3NuRr0eCh0Roi++QYDJg
PaLubD2i6qBRUpQlAUVQ5KTnSh3qy4oQ/kG2QsiMw8mPdcjopv3SmBwJzEID
mgYM6pBdS12FijwJgsIET8WK1qHfrLE8zWTnfRx59uJoHQpQC7vFe5cEveFu
6ezjtUibVQwfQjbu01XcYl4t2vzB+WCJ7DOR3dJ5H2qRig+l7E0FEohGvfW3
Va1FERP2Y75ka0WfHxLnrEUW4gJnMGQ7xzRe+m+nBlXHL60eUSRBQuwriyZM
DTrWYGB0i+yGz7QVfonkDn3f2MWC7Okv5Yce29QgD/0m4U9kU8a/eHJavgaF
pSkFFpF9NeHwlxGmGvTftXX3TrIVE3Pm45erEZ7ak2GMbPOvKjcMaqsRzc6+
4izZIUm7Llxh1cjcQu38PNkFyUkda/rVaMzZN2iS7P4URYZikWrUjIuNGyAb
n7rx0vFINeKU+/ygnmzG9Kgc6bEq5B8RH5tCtniG9DZFXhVqK2nwcSf72bdZ
2Xb3KrTGxnVanWyXzMDQYJUqhD16cOsK2V+zbowpX61ChuB8bIX8Phqzf149
u1OJ2B6N2GWRPZvjbjPRVYkmtTU+6JNNlcdZl5xQieoeyPGeJpsrv+eoqXUl
akzcfFdDfv/3C+zUeOUq0SP/SpMXZIcWNa2WL1UgKz4uriDyfhYVm4m71FSg
+pjMP0xkD5bQed0JrUDe+F3rOHI8nC3XPd8tXIHWTjDdCyXHi2QFlUk4dQW6
UrCTtU+OL+3K3CKN0XJ0mma80JDspOo/96bdyhFjDXshCzkem2uSIzOUy9GD
k7+yXpPjdb723pQFRzniOXXnYfltEvA0RDuSOstQzgqlvzA53oubhTKOM5ah
uDbafz/I58d+osXxz2wpOnn/B/tP8vmSJGrcXy4uRWt9uZn94uR44HRea3ta
inJSv85ki5IAE9As5BlcgrIsb4uSBMnrTVE/bKNdgmTKCFEl5POtXLP44+W1
EuR0e8noFT8Jfq4dd7rVUYySumZUK6+T56ek1rBDWYzufl5Lw5HzSearhY+L
A0Xo2W+aDHMOElh4vDMYTi5CzBeuXxlnJ8FWcTxVqUwRKiOd/ZxCzkf71zqj
fxELkNmCZQ6GnM8EKlYKuuZy0RTNxn3/Y+R8tHRKNdMzF305PEz1/ggJpM8L
k3wu5yIn7x09Qyryfrk6S9/RyUGNbRcOLlCQwEDuRGfFYBba99Dl4N0hQlQv
30xaUwb6XMjpXjtHBBYKFR9PvQzEkz5sxzNDhBQhB269v+koYfGPWOgkEQqi
6i1ZpNKR/Td5PpkxInRoK+2FF6Wixxz20jK9RCB8n+L6TyYJSfXfG62uINeP
Q6M7Q/5f0f6MLON4KTm/i/V35vYnIqv4VzqEIiL0JzRa6BgmoNBeQ+bTuUTI
e51SUOP7BZnd+Jnw5ysRTGiMxN/3RCKJ0Ps5nr7k5wf2BK+XeqCwBPYYX3J9
lJx9ryMZ7I7+auwmfn9ABKZi7aTYAhckFgyX6RTJ9VaJlVuT5IDswuMT3WWI
4MkIlt+oTdCOyMMdOkEiVPwtVTdpNQPh4Ijkf+R6HRjAJX75bCj85DJjuIEh
9xfGv4050sLAKcJGQ6mNAH2XMV0M58JBZ9gyxKSRAM/3PXaZMz5BjWwxzr2C
AFYlWA02FAW3HH9JvEwlQCwbhl6IEAeMFpJUP5wI4OB+Rz47Pw1c6O6e62Qj
gHG+y4uF40VAV5TQIfcSDwKTi4RE6SLI5n9SgtXCwy6tarDmmyIQ9xl5Ha1C
7rdseGo6vhdBwAjjq6G7eCgTGWbOCS8GvQ2XO2d48XC4RmDI6mwpdDfUJ6Rs
b0Fq+8yDXfYKuH7h/GfJoC2YmroncUKqDizC2C1/p+NgzDtYpAzTAqGkE+Gb
BRuQwUFPW0Logg6+88MTEStwSeZsZHdpH8SHpeyN1y/AsKdahl3uIHz5yymJ
uToLIRYWV8xrhuGgYsuTguU3xNM3269HjcK5BtYoL66f8DA7nO1xyiik0Llw
vqP9CXuyej25+aNgPuPB5bI9Atp2/3G8bh+Fwu9VfsXtI8AyIj60sjMKGwry
nKOvRsj9fq7QkvYYeH/fqKHLH4Y4rmjsDNs4/IcdL7wp/wPibpmZ/cybAKOd
Yo+erwNwZzT4kUnVBNC9lWw5FDIAC3aFAoSWCUhpMq27+34AbuRuE2knJmCt
TKGXoDYAbed9PRVpfsHb+d9PtmkGALedEldu8gt+Xt51D3bqB4XiiZ7IS7+B
NRBz5QfqBRznUyHl8EnwUbPXGsnHwPrIz3Pp8ZNQOjL6JPojBpb89Sl2v03C
EEf7S0tbDEyu2PYl1U/Cw+9bxWZiGOjJj7LcXJ0ESoc6heCGLsgSG88OU5gC
/8BcvvfDnaCvYHLl+94UHB68tl7H1AEC+9s+9IenwVza8snHvXbIU6t1qjk2
DS8EMJXvp9ohk+quPi3jNFi9LPKMyW6Hr6YaghXXp2Hok9IvrEw7hFx3+k79
bBq4AiXPnLFqA7OSepqMkmnwtLrIPPG7BfCZrT1dVdPwLzXbMqylBVwSuz9i
G6Yh7ra3/4vsFggLGGOS7J6GLIrOnvsOLVD+ksTePTcN4v4C9Pq0LUB5gv/m
FuMMuOtJzrkqNEOCUYLF7Xcz4F2a7nCsoxG4nqfxG7rNgOiJst2dwkYoVMrB
+XnPAK1dmjHFl0Zolqpy7P84A5njlNU6rxthhe6Hl1HWDLSfIXy9eboRxOtO
xAeOzUDX74ybzC0NMMDo0j0sPQv51tGBTDx1MBLMl/NJdhaSYz5pJFLWwTjl
ZMCTe7PQJlB86snvWpjF3VFsU52FWYe+nxyRtUDsOdJUZj4LXWbSy7kUtXDW
N6IiMnYWMsI3gmjnqkGHlJ2iQpiFSNF9VYPWStB/o+Nx6s8sfHk9klCSVgnG
cyf1ug5moTw52p7HuxLeDFizyh6fg/oCZgNPuUpwzxeLvcE+B7niCmILzRWQ
bNIUQvd0DgZX9Cl0MeWwMDz67nvOHFwb0xhVIpTC9koPJ1XxHCzkXuJP/lEK
Rw4ah25WzoEjfsT6XEUpcHFlC2a1zEHXZQMxt/elYOr4fsnrF3m8ceMvA2Up
LJ9l0ZKknQcb5jz3ZywlsK6lI55mOw9WNvy6SqZF8N/rp/Nj7+Zhb6v8uvTj
IjjpIR9B7z4PznGJ6Q+Fi4A/ixfrFjQPJG4KwdS/hWC1u5/xLG0eflXQpeGE
C2HzcwIT7fA8REhzEzhz8gE/9pvoJLkAzHI9PJxdOZDvRJURIbMA/Iv6atuJ
OWDGzKuRd3cBtq9QWlHa5cCUulP5lPICMHGbemIu5kBP3xlHRfMFOPXWM4DB
MRu+td3bYYhbgHgZrWJ1oSzQKS7+U7C/ALMq+Zzb/RlwVnk0u/PQIhhu1QqU
5GXAIPbg+ezRRei/mNWbEpAB9/ke1zAxLkLI7YNNFtkMEM9cdHblW4TyxRNB
VmXpQJ944b8HuovQeqiSwSI9DVoDfA/mGxaBXUJaRCgrBfayNDHRrYsQWbNK
vx+cAje6uGMUMYuQZCk9s2adAgk0GP6s4UUI4HtRKCuZAvZBtLqv1xcB5zbz
shqTDBwhsbVb55dASutkstlGEnh9zHY6sF+CaGO2FpuhBKgqdL5b6LwE/Wn9
QmzpCYDte0Sv77EEITW8DxkcEkCbHpvZFLwE53rVoYU5AYQ/Cf/0SV2CtbsS
dbL68TAbUSt2on8JwuMCWx3+fgHZmO94Zt5lsDkexJ5nGgteajOh8kLL8Nqt
UWdDOhZa6Uk81hLLIP696Yrd6Vi4H8yq1y6/DBjicezD+hhQ9njdbf9iGWZ1
a3PZz8XASwua9IHQZTBNDNW9NB4FrjIKGsG4Zegpnji0FxIBDfvPcBXby6DP
MLDAYREBFNVvgmf/WwbLpIVM/3sR4C0S1SRFswLKpt989ykjIIhnjn+ZfQWS
DSIIwa6f4MsZzyMKaiuQ7fj24LhzOFQs1lUelK+ANdZTd1wyFN5yulg11a4A
9YYsTowqFASNpTh9mlbgUd7T3YW+EMiaKY+g+b4Ctt0zibJmIRD3q8CScX4F
xBgF+8YTgsF9MJnj+plV0D4Z1inMFASKDT4fNaxW4Yl1npcH+APlXznFc/ar
wCijxB/N6A9I+tDf8ferIBVFGsKt+IFktZuFvu8qfAkP93aJ9oPrZY4KrxNW
gX0ryn9o0xdoc8z2PTCrsHv7r7FksQ/8jH78Ko9rDUQ17YJvG3uBjN5tNlW+
NbhQ5+7HKecF33gExnaE1sC8wtdakc0LHGvpHsnfXgOnGzPNQr89gXFmUGBc
bQ00OQf8Mp57gjLf8+2jnmvgNU7rUPvCAzDNJr5GE2vggnV9f4TBDYRDNGVo
ZtZg3NKCb2bCFb5o3NspWFyDnw94w1gyXMFsmcd8b2sNDnmc4s6UdIWjtOuP
Px1bh209PtVzxi5w9/lbRiS2DnvdGuMz3e+hftM9jSV8HQxjSu9bTTjCDc0S
XumYdUgNeH/qWa4jpNctlOokrMM3PeJQoosjBAU+bk3IWod7Q9i9mxcd4RkH
y8KlpnWI/8iNzzF2AKJmORcHfh12zdUUJw/bg1n9coH87jow35ZWkR2zgwkO
Vgnjg3WoDxY7vVNgB804r3sZxzegezvw/TMdOwgPUjbj5tgA6+i12LnKt8DX
sJbNq04el5vdS/1gC8lXLws/1t6AVu67/rjntsAQrFrzRn8DbuL17gWI2sKe
VjUm/80GUDBS60at2kDnlt+aoO8GhGSwT9Fr24Ax5xV+0YoNeLEcqKUTYgXx
Ic+Kbp3DwrzvH/6XSRYQZC+uTryIhRCR/K0oMwtwesG4m8uBhSjWM9dEhC1A
na8fLghiYdfxnVRauzmc7LnX90cBCwSbo9RANAP3ExLYCjsshB9ViBgweAVv
CIwRVu+xcDXx2w9BoVegPYEX4/qAhZR6PsY1ilcgnlvgFh2EhTvDI6ccU0xh
8yHXKfsULDkPrZf1LJqAfhATn1AfFkRsFWm3PY1B6S2hb/kHFrzxY3oTmsZw
S3vALnkcC2f1OTgY+Yzh3PXQWrpFLIxFfapx+2kEA11Uj7D/YcGqQ9edXdgI
5GiI5rnXN2GqbzP1xrYBXA0YzOT024RBIxp3n9d6MB1s7OMfsgnOJ7tGH7Dp
kfd1W38lYhOaRiqKy4dfwplYFpb8pE3Y0eXNdZF7CYe+GYaIVm8CzTWZkQQO
XZhswdvIr29CFeUKO+thHYjr8HmSgd8E8QHvwyVN2qDRffb60T+b0Dc8Gzvu
oQ2m5om2C5Q4mE28LjRFoQ2TNk3Xs+lwoKnCczjm6HPo+UCTeOMaDgT+UFYg
AS3I8VQNNuDDwZybjOofkiYEeMe/jxDEgegD8mdAvSbI+/NrEsVwMM2M8JlK
mlATpkJXJYcD7truCCtHDchO/OIJL3DgJ+UXH/NLDfySZq1t9HAgv5ou8CpX
DYxTeF+mGOKARZCSkOWsBmwZ9TcPm+PASqpU25VFDT7nzRDaHXCwJGjB+EBP
FRwLrs/uOOEgjKMtMlBIFdSL7Pp5XHGw73/sqCiVKtCVUecHeeEgJsfkYUuO
CqyXK8XX+uLglTWn3jd3FcBUxgauB+DgZjTj1qaqCmRVT7+7GIIDBq4IriRu
FfCrvWaq9BEH//+//38A3bSiUg==
            "]]},
          Annotation[#, "Charting`Private`Tag$6179#1"]& ]}, {}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[91, 255], 0.3568627450980392], 
            NCache[
             Rational[94, 255], 0.3686274509803922], 
            NCache[
             Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
/3wLLP57OsHwiQT//7//fwC1vSjB
            "]]},
          Annotation[#, "Charting`Private`Tag$12033#1"]& ]}, {}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.0010368108327017207`},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.2349869228845753`, 1.0349869228845752`}, {
       0.0010368108327017205`, 3.359858018953249}},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
  "Grid"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[187]:=",ExpressionUUID->"a7322e98-2610-4cc2-8204-10b69479804d"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "vecL", ",", "LMat", ",", "CLMat", ",", "chi2minfi", ",", "vecF", ",", 
     "FMat", ",", "CFMat", ",", "useFisher", ",", "comboLP"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->
  "(L3) In[192]:=",ExpressionUUID->"b2772f9d-e242-41ec-8b23-4112dd9a5924"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["n-Evidence",
  FontColor->RGBColor[0, 0, 1]],
 " - can be skipped"
}], "Section",ExpressionUUID->"26a50104-84f0-4360-b4f9-20899c453e30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nEvi", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"mvprior", "\[Equal]", "1"}], "&&", 
      RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
      RowBox[{"comboLP", "\[Equal]", "1"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FEvi", "=", 
       RowBox[{"Lmax", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"dpar", "/", "2"}], ")"}]}], 
        RowBox[{
         RowBox[{"Det", "[", "FMat", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NEvi", "=", 
       RowBox[{"NEvidence", "[", 
        RowBox[{"vecF", ",", "FMat", ",", "nEvi"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NFEvi", "=", 
       RowBox[{
        RowBox[{"PLike", "[", "vecF", "]"}], "/", 
        RowBox[{"PosteriorF", "[", "vecF", "]"}]}]}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mvprior", "\[Equal]", "1"}], "&&", 
      RowBox[{"useFisher", "\[Equal]", "1"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"see", " ", 
       RowBox[{"eq", ".", 
        RowBox[{"(", "14", ")"}]}], " ", "of", " ", 
       RowBox[{"arXiv", ":", "1209.1897"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FEvi", "=", 
       RowBox[{"Lmax", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Det", "[", "PMat", "]"}], "/", " ", 
           RowBox[{"Det", "[", "FMat", "]"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vecL", "-", "vecP"}], ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"LMat", ".", 
             RowBox[{"Inverse", "[", "FMat", "]"}], ".", "PMat"}], ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"vecL", "-", "vecP"}], ")"}]}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NEvi", "=", 
       RowBox[{"NEvidence", "[", 
        RowBox[{"vecF", ",", "FMat", ",", "nEvi"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NFEvi", "=", 
       RowBox[{
        RowBox[{"PLike", "[", "vecF", "]"}], "/", 
        RowBox[{"PosteriorF", "[", "vecF", "]"}]}]}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"useFisher", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FEvi", "=", 
       RowBox[{
        RowBox[{"1", "/", "normPrior"}], " ", "Lmax", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"dpar", "/", "2"}], ")"}]}], 
        RowBox[{
         RowBox[{"Det", "[", "LMat", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NEvi", "=", " ", 
       RowBox[{"NEvidence", "[", 
        RowBox[{"vecL", ",", "LMat", ",", "nEvi"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NFEvi", "=", 
       RowBox[{
        RowBox[{"PLike", "[", "vecL", "]"}], "/", 
        RowBox[{"PosteriorF", "[", "vecL", "]"}]}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Fisher evidence: Log E=\>\"", ",", 
      RowBox[{"logFEvi", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{"Log", "[", "FEvi", "]"}], "]"}]}]}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Numeric evidence: Log E=\>\"", ",", 
      RowBox[{"logNEvi", "=", 
       RowBox[{"Log", "[", "NEvi", "]"}]}], ",", 
      "\"\<  -  limiting the integration within the n-\[Sigma] Fisher \
ellipsoid\>\""}], "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<'Numeric' Fisher: Log E=\>\"", ",", 
      RowBox[{"logFNEvi", "=", 
       RowBox[{"Log", "[", "NFEvi", "]"}]}]}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
    RowBox[{"ToFileName", "[", 
     RowBox[{"\"\<results-chi2\>\"", ",", 
      RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
       RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"logNEvi", ",", "logFEvi"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellLabel->
  "(L3) In[193]:=",ExpressionUUID->"38ac59c1-bbf1-48b7-8047-f510821e4b02"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "\"Fisher evidence: Log E=\"",RowBox[{"-", "18.446067983586072`"}]},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[193]:=",ExpressionUUID->"66ce079a-2c0e-41ef-940f-0506c273c9cd"],

Cell[BoxData[
 TemplateBox[{
  "\"Numeric evidence: Log E=\"",RowBox[{"-", "18.466049636653555`"}],
   "\"  -  limiting the integration within the n-\[Sigma] Fisher ellipsoid\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[193]:=",ExpressionUUID->"5e906442-be49-412e-ac79-9cc6e6ada121"],

Cell[BoxData[
 TemplateBox[{
  "\"'Numeric' Fisher: Log E=\"",RowBox[{"-", "18.446067983586072`"}]},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[193]:=",ExpressionUUID->"d132d4fe-b6d3-4153-8b80-f8c28713d88e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", "normalized", ")"}], " ", "posterior", " ", "distribution"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Posterior", "[", 
      RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"PLike", "[", "vec", "]"}], "/", "NEvi"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PosteriorF2", "[", 
      RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"PLike", "[", "vec", "]"}], "/", "FEvi"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Posterior", "[", "vecF", "]"}], ",", 
     RowBox[{"PosteriorF2", "[", "vecF", "]"}], ",", 
     RowBox[{"PosteriorF", "[", "vecF", "]"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Posterior", "[", "vecsol", "]"}], ",", 
     RowBox[{"PosteriorF2", "[", "vecsol", "]"}], ",", 
     RowBox[{"PosteriorF", "[", "vecsol", "]"}]}], "}"}]}]}]], "Input",
 CellLabel->
  "(L3) In[199]:=",ExpressionUUID->"afeea501-2e89-4297-b19c-78244eb6069d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "257.01027592122364`", ",", "251.92575350658547`", ",", 
   "251.9257535065854`"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[201]=",ExpressionUUID->"a1525d36-20e0-4300-ac87-ae83b8c59540"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "25.496577407306006`", ",", "24.992169873952204`", ",", 
   "23.223689741795347`"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[202]=",ExpressionUUID->"7e1758b0-a2b7-4ee2-885c-43e04f0b38cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["6a-Reducing grid intervals using Fisher",
  FontColor->RGBColor[0, 0, 1]],
 " - can be skipped"
}], "Section",ExpressionUUID->"34c819e1-41c5-4d2d-acfa-07ea615f1f75"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nrisk", "=", "6"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "for", " ", "automatic", " ", "parameter", " ", "intervals", " ", "of", 
     " ", "vecF"}], " ", "\[PlusMinus]", " ", 
    RowBox[{"nrisk", " ", "sigma"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
      RowBox[{"redo", "\[Equal]", "0"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"redo", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridspo", "=", 
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"extremaF", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"extremaF", ",", 
           RowBox[{"auxex", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}]}], 
             "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"popo1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"vecF", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}], 
               "]"}], ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", "12"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"parnames", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Darker", "[", "Emerald", "]"}]}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "None"}], "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"popo2", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"CFMat", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}]}], ")"}], "^", 
                  RowBox[{"-", ".5"}]}]}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
              "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"popo", "[", "i", "]"}], "=", 
          RowBox[{"Show", "[", 
           RowBox[{"popo1", ",", "popo2"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"GraphicsRow", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"popo", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Suggested nrisk-intervals (x-axes) and original intervals \
\>\"", ",", "16"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<(green areas)\>\"", ",", "16", ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
                 "]"}]}]}], "]"}]}], "}"}], "]"}]}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"-", ".2"}], "]"}]}]}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"this", " ", "updates", " ", "the", " ", "intervals"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntervalIntersection", "[", 
             RowBox[{
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"extremaF", ",", 
              RowBox[{"pSet", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
            "]"}]}], "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "following", " ", "makes", " ", "the", " ", "paremeter"}], 
    "-", 
    RowBox[{"space", " ", "grid"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ngrid", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMin", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMax", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ParSpaceTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pTabX", "[", 
        RowBox[{"i", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParSpaceTab", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"pTabX", "[", 
       RowBox[{"#", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], "&"}], 
     " ", "/@", 
     RowBox[{"Range", "[", "dpar", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"pSet", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"parnames", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
        "\"\<grid  -  updated parameter intervals\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[203]:=",ExpressionUUID->"bc043824-8b24-4e63-9b33-3b8d691ab905"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"min\"\>",
       HoldForm], 
      TagBox["\<\"max\"\>",
       HoldForm], 
      TagBox["\<\"grid  -  updated parameter intervals\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>",
       HoldForm], "0.1`", "0.5`", "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1.4`"}], 
      RowBox[{"-", "0.6`"}], "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1"}], "1", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(0\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(a\)]\)"}, {
      "min", "max", "grid  -  updated parameter intervals"}}]]]], "Output",
 CellLabel->
  "(L3) Out[207]//TableForm=",ExpressionUUID->"17af3648-028e-42de-bef6-\
4b65d7b71a12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["6b-Adjusting grid intervals using Fisher",
  FontColor->RGBColor[0, 0, 1]],
 " - can be skipped"
}], "Section",ExpressionUUID->"d4e21bdf-407a-479e-944e-4c95c97605ff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nrisk", "=", "4"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "for", " ", "automatic", " ", "parameter", " ", "intervals", " ", "of", 
     " ", "vecF"}], " ", "\[PlusMinus]", " ", 
    RowBox[{"nrisk", " ", "sigma"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
      RowBox[{"adju", "\[Equal]", "0"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"adju", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridspo", "=", 
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"extremaF", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"extremaF", ",", 
           RowBox[{"auxex", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}]}], 
             "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"popo1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"vecF", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}], 
               "]"}], ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", "12"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"parnames", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Darker", "[", "Emerald", "]"}]}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "None"}], "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"popo2", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"CFMat", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}]}], ")"}], "^", 
                  RowBox[{"-", ".5"}]}]}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
              "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"popo", "[", "i", "]"}], "=", 
          RowBox[{"Show", "[", 
           RowBox[{"popo1", ",", "popo2"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"GraphicsRow", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"popo", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Suggested nrisk-intervals (x-axes) and original intervals \
\>\"", ",", "16"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<(green areas)\>\"", ",", "16", ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
                 "]"}]}]}], "]"}]}], "}"}], "]"}]}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"-", ".2"}], "]"}]}]}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"this", " ", "updates", " ", "the", " ", "intervals"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntervalUnion", "[", 
             RowBox[{
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"extremaF", ",", 
              RowBox[{"pSet", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
            "]"}]}], "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "following", " ", "makes", " ", "the", " ", "paremeter"}], 
    "-", 
    RowBox[{"space", " ", "grid"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ngrid", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMin", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMax", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ParSpaceTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pTabX", "[", 
        RowBox[{"i", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParSpaceTab", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"pTabX", "[", 
       RowBox[{"#", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], "&"}], 
     " ", "/@", 
     RowBox[{"Range", "[", "dpar", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"pSet", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"parnames", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
        "\"\<grid  -  updated parameter intervals\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[208]:=",ExpressionUUID->"fa90cd18-0caf-4752-bbd4-5478e4c4facd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"min\"\>",
       HoldForm], 
      TagBox["\<\"max\"\>",
       HoldForm], 
      TagBox["\<\"grid  -  updated parameter intervals\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>",
       HoldForm], "0.1`", "0.5`", "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1.4`"}], 
      RowBox[{"-", "0.6`"}], "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1"}], "1", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(0\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(a\)]\)"}, {
      "min", "max", "grid  -  updated parameter intervals"}}]]]], "Output",
 CellLabel->
  "(L3) Out[212]//TableForm=",ExpressionUUID->"a476c5b1-5985-4326-b431-\
7c00f51ebef2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["7-chi2 table",
 FontColor->RGBColor[1, 0, 0]]], "Section",ExpressionUUID->"a4600738-056d-\
4cf4-b4cd-6b8baeb20217"],

Cell[CellGroupData[{

Cell["Preparation", "Subsection",ExpressionUUID->"2617a760-982e-465c-b90b-518f050d264c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LaunchKernels", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ncompkern", "=", 
  RowBox[{"Length", "[", 
   RowBox[{"Kernels", "[", "]"}], "]"}]}]}], "Input",
 CellLabel->
  "(L3) In[213]:=",ExpressionUUID->"bc3fec40-2bd2-4447-bce7-c926a44fbde9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"5", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"6", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"7", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"8", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"9", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"10", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"11", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"12", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"13", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"14", ",", "\<\"local\"\>"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[213]=",ExpressionUUID->"48bb3f99-7815-4528-b8dd-7bc513064eb6"],

Cell[BoxData["10"], "Output",
 CellLabel->
  "(L3) Out[214]=",ExpressionUUID->"1a2e3c32-db70-45ef-ad58-f7407deb4365"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nco", "=", "32"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "number", " ", "of", " ", "points", " ", "to", " ", "be", " ", "computed",
      " ", "in", " ", "order", " ", "to", " ", "estimate", " ", "total", " ", 
     "time"}], " ", "-", " ", 
    RowBox[{"not", " ", "working", " ", "well"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ere", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ere", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{".9", ",", "1.1"}], "}"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{
         RowBox[{"chi2", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"vecsol", " ", "ere"}], "]"}], "]"}], ";"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"{", "$KernelCount", "}"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"to", " ", "load", " ", "stuff"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{"auxte", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ere", "=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{".9", ",", "1.1"}], "}"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"AbsoluteTiming", "[", 
          RowBox[{
           RowBox[{"chi2", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"vecsol", " ", "ere"}], "]"}], "]"}], ";"}], "]"}], "[", 
         
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", "nco", "}"}]}], "]"}]}], ";"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempo1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "auxte", "]"}], "/", "$KernelCount"}], "/", 
     "nco"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"glevel", "=", "0"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "restricting", " ", "the", " ", "grid", " ", "to", " ", "within", " ", 
      "the", " ", "glevel"}], "-", 
     RowBox[{"\[Sigma]", " ", "Fisher", " ", "ellipsoid"}]}], ";", " ", 
    RowBox[{"0", " ", "for", " ", "a", " ", "full", " ", "exploration"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
     RowBox[{"glevel", "\[NotEqual]", "0"}]}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"alevel", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "/.", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CDF", "[", 
              RowBox[{
               RowBox[{"ChiSquareDistribution", "[", "dpar", "]"}], ",", 
               "x"}], "]"}], "==", 
             RowBox[{"v", "[", "glevel", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "10"}], "}"}]}], "]"}]}], ")"}], "^", ".5"}]}],
       ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"alevel", "=", 
      RowBox[{
       RowBox[{"levhi2", "[", 
        RowBox[{"dpar", ",", "glevel"}], "]"}], "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"chi2vecx", "[", "vec_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gtest", "[", 
           RowBox[{"vec", ",", "alevel", ",", "FMat", ",", "vecF"}], "]"}], 
          ",", 
          RowBox[{"chi2vec", "[", "vec", "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"vec", ",", 
            RowBox[{"{", 
             RowBox[{"chi2F", "[", "vec", "]"}], "}"}]}], "]"}]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"chi2x", "[", "vec_", "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"gtest", "[", 
         RowBox[{"vec", ",", "alevel", ",", "FMat", ",", "vecF"}], "]"}], ",", 
        RowBox[{"chi2", "[", "vec", "]"}], ",", 
        RowBox[{"chi2F", "[", "vec", "]"}]}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "using", " ", "Fisher", " ", "to", " ", "give", " ", "the", " ", 
       "right", " ", "order", " ", "of", " ", "magnitude"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{
          RowBox[{"ppTab", "=", 
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"btest", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"take", "[", 
                  RowBox[{"ParSpaceTab", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "i"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "alevel", ",", "FMat", 
                ",", "vecF"}], "]"}], ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Times", "@@", "ngrid"}]}], "}"}]}], "]"}]}], ";"}], 
         "]"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"tpoints", "=", 
         RowBox[{"Total", "[", "ppTab", "]"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"volume", " ", "glevel"}], "-", 
       RowBox[{
       "\[Sigma]", " ", "Fisher", " ", "ellipsoid", " ", "over", " ", "total",
         " ", "volume"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"volratio", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[Pi]", 
           RowBox[{"dpar", "/", "2"}]], 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"dpar", "/", "2"}], "+", "1"}], "]"}]], 
         RowBox[{"glevel", "^", "dpar"}], " ", 
         RowBox[{"Times", "@@", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Eigenvalues", "[", "CFMat", "]"}], "]"}]}]}], ")"}], "/", 
       
       RowBox[{"(", 
        RowBox[{"Times", "@@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Differences", "/@", 
           RowBox[{"pSet", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Volume reduction: \>\"", ",", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"1", "/", "volratio"}], ",", ".1"}], "]"}]}], "}"}], "]"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tpoints", "=", 
      RowBox[{"volratio", " ", 
       RowBox[{"Times", "@@", "ngrid"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime1", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Estimated wall-clock time: \>\"", ",", 
          RowBox[{"tpoints", " ", 
           RowBox[{"tempo1", "/", "60"}]}], ",", "\"\< min or \>\"", ",", 
          RowBox[{"tpoints", " ", 
           RowBox[{"tempo1", "/", 
            RowBox[{"60", "^", "2"}]}]}], ",", "\"\< hours\>\""}], "}"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Posterior exploration will end on \>\"", ",", 
         RowBox[{"DatePlus", "[", 
          RowBox[{"Quantity", "[", 
           RowBox[{
            RowBox[{"tpoints", " ", "tempo1"}], ",", "\"\<Seconds\>\""}], 
           "]"}], "]"}]}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime2", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Total number of points: \>\"", ",", 
          RowBox[{"Round", "[", "tpoints", "]"}], ",", "\"\< instead of \>\"",
           ",", 
          RowBox[{"Times", "@@", "ngrid"}]}], "}"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"chi2vecx", "[", "vec_", "]"}], ":=", 
       RowBox[{"chi2vec", "[", "vec", "]"}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"chi2x", "[", "vec_", "]"}], ":=", 
      RowBox[{"chi2", "[", "vec", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime1", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Estimated wall-clock time: \>\"", ",", 
          RowBox[{
           RowBox[{"Times", "@@", "ngrid"}], " ", 
           RowBox[{"tempo1", "/", "60"}]}], ",", "\"\< min or \>\"", ",", 
          RowBox[{
           RowBox[{"Times", "@@", "ngrid"}], " ", 
           RowBox[{"tempo1", "/", 
            RowBox[{"60", "^", "2"}]}]}], ",", "\"\< hours\>\""}], "}"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Posterior exploration will end on \>\"", ",", 
         RowBox[{"DatePlus", "[", 
          RowBox[{"Quantity", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Times", "@@", "ngrid"}], " ", "tempo1"}], ",", 
            "\"\<Seconds\>\""}], "]"}], "]"}]}], "}"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime2", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Total number of points: \>\"", ",", 
          RowBox[{"Times", "@@", "ngrid"}]}], "}"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ncompkern", ",", "estime1", ",", "estime2"}], "}"}]}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[215]:=",ExpressionUUID->"c211c595-ca14-4065-a8c9-fbb01301de53"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "\"Estimated wall-clock time: \"","0.5656366666666666`","\" min or \"",
   "0.009427277777777776`","\" hours\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[215]:=",ExpressionUUID->"17f945dc-c3f8-489b-9358-aa3f73746995"],

Cell[BoxData[
 TemplateBox[{"\"Posterior exploration will end on \"",TemplateBox[{
     RowBox[{"\"Thu 10 May 2018 10:18:24\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "3.`"}], NumberMarks -> False, StripOnInput -> 
           False]}], FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2018", ",", "5", ",", "10", ",", "10", ",", "18", ",", 
             "24.45352602005005`"}], "}"}], ",", "\"Instant\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "3.`"}]}], "]"}]}, "DateObject", Editable -> False]},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[215]:=",ExpressionUUID->"73ed84f3-e250-4ace-a50d-09425a5c3e32"],

Cell[BoxData[
 TemplateBox[{"\"Total number of points: \"","64000"},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[215]:=",ExpressionUUID->"5b97d08d-7174-475d-84b2-5a24ed43ba8b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computation", "Subsection",ExpressionUUID->"a92f7429-5c41-496c-9b36-2fe2da1919f8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{"DistributeDefinitions", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tta", " ", "=", " ", 
    RowBox[{"SessionTime", "[", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"chi2Tab", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"chi2", "[", "#", "]"}], ")"}], "&"}], ",", 
       RowBox[{"Tuples", "[", "ParSpaceTab", "]"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chi2Tab", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"chi2x", "[", 
      RowBox[{
       RowBox[{"take", "[", 
        RowBox[{"ParSpaceTab", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "i"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Times", "@@", "ngrid"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dtt", "=", 
    RowBox[{
     RowBox[{"SessionTime", "[", "]"}], "-", "tta"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "pronto", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Calculation ended on \>\"", ",", 
    RowBox[{"DateString", "[", "]"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"dtt", "/", 
       RowBox[{"60", "^", "2"}]}], ",", ".1"}], "]"}], ",", "\"\<h or \>\"", 
    ",", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"dtt", "/", "60"}], ",", ".1"}], "]"}], ",", 
    "\"\<m of total computation\>\""}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"dtt", "/", 
       RowBox[{"(", 
        RowBox[{"Times", "@@", "ngrid"}], ")"}]}], ",", ".001"}], "]"}], ",", 
    "\"\<s per grid point\>\""}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logrun", "=", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Calculation ended on \>\"", ",", 
      RowBox[{"DateString", "[", "]"}], ",", "\"\<  -  \>\"", ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"dtt", "/", 
         RowBox[{"60", "^", "2"}]}], ",", ".1"}], "]"}], ",", "\"\<h or \>\"",
       ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"dtt", "/", "60"}], ",", ".1"}], "]"}], ",", 
      "\"\<m of total computation  -  \>\"", ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"dtt", "/", 
         RowBox[{"(", 
          RowBox[{"Times", "@@", "ngrid"}], ")"}]}], ",", ".00001"}], "]"}], 
      ",", "\"\<s per grid point\>\""}], "}"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "(L3) In[222]:=",ExpressionUUID->"7eec9cc2-0419-479b-896c-f4d12e27b804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.206691`", ",", "Null"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[222]=",ExpressionUUID->"20527a76-88c5-4886-bf9a-643840b393b6"],

Cell[BoxData[
 TemplateBox[{"\"Calculation ended on \"","\"Thu 10 May 2018 10:18:44\""},
  "RowDefault"]], "Output",
 CellLabel->
  "(L3) Out[226]=",ExpressionUUID->"26eacd12-92da-40b1-b9ae-4e2631ba76a4"],

Cell[BoxData[
 TemplateBox[{"0.`","\"h or \"","0.9`","\"m of total computation\""},
  "RowDefault"]], "Output",
 CellLabel->
  "(L3) Out[227]=",ExpressionUUID->"a082bee0-df6a-4588-8e8d-45caba2913d6"],

Cell[BoxData[
 TemplateBox[{"0.001`","\"s per grid point\""},
  "RowDefault"]], "Output",
 CellLabel->
  "(L3) Out[228]=",ExpressionUUID->"c784ddfd-55b9-400c-a48e-c81764971dc3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"sanity", " ", "check"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"stest", "=", 
    RowBox[{"Total", "[", 
     RowBox[{"Im", "[", 
      RowBox[{"chi2Tab", "[", 
       RowBox[{"[", "All", "]"}], "]"}], "]"}], "]"}]}], ";", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"stest", "\[NotEqual]", " ", "0"}], ",", 
     "\"\<something funny is going on...\>\""}], "]"}]}]}]], "Input",
 CellLabel->
  "(L3) In[230]:=",ExpressionUUID->"59394994-cfea-456b-a056-2eb213ea0f6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"pSet", ",", "logrun"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<.r32\>\""}]}], "]"}], 
   ",", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Re", "[", "chi2Tab", "]"}], "]"}], ",", "\"\<Real32\>\""}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[231]:=",ExpressionUUID->"71b910ef-ed05-49ad-b463-799d7e59dccd"],

Cell[BoxData["\<\"results-chi2/JLA_run1.r32\"\>"], "Output",
 CellLabel->
  "(L3) Out[232]=",ExpressionUUID->"f3016799-ebdf-4d78-9dc5-ebc991505fd9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End", "Subsection",ExpressionUUID->"29fc1c95-49fc-4a02-9057-759ac81c252e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CloseKernels", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NotebookSave", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]}], "Input",
 CellLabel->
  "(L3) In[233]:=",ExpressionUUID->"2c32a026-be8f-44ab-b105-0f99a328e530"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1146, 719},
WindowMargins->{{9, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 272, 8, 33, "Text",ExpressionUUID->"1df35057-a96d-495e-94a0-0d484796faf7"],
Cell[CellGroupData[{
Cell[855, 32, 137, 2, 67, "Section",ExpressionUUID->"f66ae1b8-2596-49c1-9dc9-953450f586df"],
Cell[CellGroupData[{
Cell[1017, 38, 701, 18, 136, "Input",ExpressionUUID->"8192d94f-8a8c-4581-ac68-81f6d7aa93e9"],
Cell[1721, 58, 120, 2, 34, "Output",ExpressionUUID->"6801d8e4-4814-48fb-a2bd-6167d9c5258e"],
Cell[1844, 62, 164, 2, 34, "Output",ExpressionUUID->"800406ca-b718-41f1-aacf-16fdacc883fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2045, 69, 1371, 40, 199, "Input",ExpressionUUID->"3c0fb340-d704-4546-bbfc-942172e359fc"],
Cell[3419, 111, 212, 5, 24, "Print",ExpressionUUID->"382cfba9-3aff-4418-9ad0-021d212e8873"]
}, Open  ]],
Cell[3646, 119, 402, 11, 52, "Input",ExpressionUUID->"f0415793-8b7c-44f3-8211-5ce27648ef6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4085, 135, 138, 2, 67, "Section",ExpressionUUID->"21cf603a-8223-4a0c-ac28-50742c4960ab"],
Cell[CellGroupData[{
Cell[4248, 141, 1416, 37, 136, "Input",ExpressionUUID->"b7b4c196-1a90-4f67-9696-d8c2fc427ffa"],
Cell[CellGroupData[{
Cell[5689, 182, 270, 5, 25, "Print",ExpressionUUID->"95c3870d-aac1-4198-b210-c5ee5fc84992"],
Cell[5962, 189, 213, 4, 24, "Print",ExpressionUUID->"53ceafa7-a728-4b29-83ae-77e31c7bb1f7"],
Cell[6178, 195, 208, 5, 24, "Print",ExpressionUUID->"47c135e2-68f3-438b-90a5-e994c7a4af4c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6435, 206, 2617, 69, 241, "Input",ExpressionUUID->"c44e4a2a-29b2-459e-81d0-9db8db943e4d"],
Cell[9055, 277, 502, 13, 24, "Print",ExpressionUUID->"2c30297a-ec18-4f7b-a187-72cb31866e1d"],
Cell[9560, 292, 186, 4, 34, "Output",ExpressionUUID->"09164e70-eeff-4643-85ee-c94b4cc0f5a1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9795, 302, 154, 2, 67, "Section",ExpressionUUID->"f927329e-9eec-4607-9a6b-db479773003e"],
Cell[CellGroupData[{
Cell[9974, 308, 92, 0, 54, "Subsection",ExpressionUUID->"7f57a796-1961-49ed-bb8b-1b7c2f7726c9"],
Cell[10069, 310, 3834, 110, 472, "Input",ExpressionUUID->"118c7763-b43d-4ed1-9e62-a20e9c64efd9"],
Cell[CellGroupData[{
Cell[13928, 424, 4026, 100, 514, "Input",ExpressionUUID->"5326fd69-cb6f-439c-a2a0-5ae0fe888b59"],
Cell[17957, 526, 1749, 50, 98, "Output",ExpressionUUID->"b12a5c6e-114b-4d95-91ee-417199ddd9c3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19755, 582, 82, 0, 54, "Subsection",ExpressionUUID->"523ec158-ef57-40d9-b844-1ab3fecc1f57"],
Cell[CellGroupData[{
Cell[19862, 586, 10077, 272, 808, "Input",ExpressionUUID->"142fd9e4-69ff-46a5-9776-04f6675b4067"],
Cell[29942, 860, 46148, 897, 674, "Print",ExpressionUUID->"7708a801-3b76-472f-8cfb-d4a6dabb328b"]
}, Open  ]],
Cell[76105, 1760, 842, 21, 52, "Input",ExpressionUUID->"230ca7fa-08fd-4abc-bc10-d4e5c19e0f35"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76996, 1787, 176, 4, 67, "Section",ExpressionUUID->"485388a7-09b9-4f22-adb2-203059ac80d4"],
Cell[CellGroupData[{
Cell[77197, 1795, 33972, 800, 3646, "Input",ExpressionUUID->"e2e11314-00df-48a1-903d-42226ec84113"],
Cell[111172, 2597, 194, 5, 24, "Print",ExpressionUUID->"fbd4eb46-fd2e-444c-b4cd-4445a84ed426"],
Cell[111369, 2604, 553, 11, 42, "Message",ExpressionUUID->"8468ee40-ae2f-4b9c-b5fe-b5be1d764e0a"],
Cell[111925, 2617, 553, 11, 42, "Message",ExpressionUUID->"d775c5ea-30ff-45a7-9b25-7bf5fa8bb23d"],
Cell[112481, 2630, 553, 11, 42, "Message",ExpressionUUID->"0d35b0fa-76a2-424a-bfeb-6adc11a7bc2a"],
Cell[CellGroupData[{
Cell[113059, 2645, 4179, 103, 94, "Print",ExpressionUUID->"d20115bd-1898-4af7-88f3-e0af4c1d3ca0"],
Cell[117241, 2750, 1088, 30, 76, "Print",ExpressionUUID->"3f351cbc-dbdd-4d08-b610-d6d9b37e1b27"],
Cell[118332, 2782, 224, 5, 24, "Print",ExpressionUUID->"6567769d-54ae-46e4-a87b-5a160d7ee4b7"],
Cell[118559, 2789, 2624, 60, 56, "Print",ExpressionUUID->"e8a7116d-63a7-4ccf-b512-d07521bd90f7"],
Cell[121186, 2851, 146, 3, 24, "Print",ExpressionUUID->"4328b41f-b612-4b56-a30c-ec1bc1d8fbd4"],
Cell[121335, 2856, 86623, 1624, 674, "Print",ExpressionUUID->"a7322e98-2610-4cc2-8204-10b69479804d"]
}, Open  ]]
}, Open  ]],
Cell[207985, 4484, 550, 14, 30, "Input",ExpressionUUID->"b2772f9d-e242-41ec-8b23-4112dd9a5924"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208572, 4503, 163, 4, 67, "Section",ExpressionUUID->"26a50104-84f0-4360-b4f9-20899c453e30"],
Cell[CellGroupData[{
Cell[208760, 4511, 5129, 141, 556, "Input",ExpressionUUID->"38ac59c1-bbf1-48b7-8047-f510821e4b02"],
Cell[CellGroupData[{
Cell[213914, 4656, 237, 6, 24, "Print",ExpressionUUID->"66ce079a-2c0e-41ef-940f-0506c273c9cd"],
Cell[214154, 4664, 317, 7, 24, "Print",ExpressionUUID->"5e906442-be49-412e-ac79-9cc6e6ada121"],
Cell[214474, 4673, 238, 6, 24, "Print",ExpressionUUID->"d132d4fe-b6d3-4153-8b80-f8c28713d88e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214761, 4685, 1167, 32, 136, "Input",ExpressionUUID->"afeea501-2e89-4297-b19c-78244eb6069d"],
Cell[215931, 4719, 231, 6, 34, "Output",ExpressionUUID->"a1525d36-20e0-4300-ac87-ae83b8c59540"],
Cell[216165, 4727, 232, 6, 34, "Output",ExpressionUUID->"7e1758b0-a2b7-4ee2-885c-43e04f0b38cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216446, 4739, 192, 4, 67, "Section",ExpressionUUID->"34c819e1-41c5-4d2d-acfa-07ea615f1f75"],
Cell[CellGroupData[{
Cell[216663, 4747, 9260, 243, 640, "Input",ExpressionUUID->"bc043824-8b24-4e63-9b33-3b8d691ab905"],
Cell[225926, 4992, 1765, 50, 98, "Output",ExpressionUUID->"17af3648-028e-42de-bef6-4b65d7b71a12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227740, 5048, 193, 4, 67, "Section",ExpressionUUID->"d4e21bdf-407a-479e-944e-4c95c97605ff"],
Cell[CellGroupData[{
Cell[227958, 5056, 9253, 243, 640, "Input",ExpressionUUID->"fa90cd18-0caf-4752-bbd4-5478e4c4facd"],
Cell[237214, 5301, 1765, 50, 98, "Output",ExpressionUUID->"a476c5b1-5985-4326-b431-7c00f51ebef2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[239028, 5357, 139, 2, 67, "Section",ExpressionUUID->"a4600738-056d-4cf4-b4cd-6b8baeb20217"],
Cell[CellGroupData[{
Cell[239192, 5363, 88, 0, 54, "Subsection",ExpressionUUID->"2617a760-982e-465c-b90b-518f050d264c"],
Cell[CellGroupData[{
Cell[239305, 5367, 272, 6, 52, "Input",ExpressionUUID->"bc3fec40-2bd2-4447-bce7-c926a44fbde9"],
Cell[239580, 5375, 1096, 24, 56, "Output",ExpressionUUID->"48bb3f99-7815-4528-b8dd-7bc513064eb6"],
Cell[240679, 5401, 117, 2, 34, "Output",ExpressionUUID->"1a2e3c32-db70-45ef-ad58-f7407deb4365"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240833, 5408, 10482, 280, 702, "Input",ExpressionUUID->"c211c595-ca14-4065-a8c9-fbb01301de53"],
Cell[CellGroupData[{
Cell[251340, 5692, 282, 7, 24, "Print",ExpressionUUID->"17f945dc-c3f8-489b-9358-aa3f73746995"],
Cell[251625, 5701, 816, 19, 33, "Print",ExpressionUUID->"73ed84f3-e250-4ace-a50d-09425a5c3e32"],
Cell[252444, 5722, 206, 5, 24, "Print",ExpressionUUID->"5b97d08d-7174-475d-84b2-5a24ed43ba8b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252711, 5734, 88, 0, 54, "Subsection",ExpressionUUID->"a92f7429-5c41-496c-9b36-2fe2da1919f8"],
Cell[CellGroupData[{
Cell[252824, 5738, 3012, 90, 283, "Input",ExpressionUUID->"7eec9cc2-0419-479b-896c-f4d12e27b804"],
Cell[255839, 5830, 172, 4, 34, "Output",ExpressionUUID->"20527a76-88c5-4886-bf9a-643840b393b6"],
Cell[256014, 5836, 204, 4, 34, "Output",ExpressionUUID->"26eacd12-92da-40b1-b9ae-4e2631ba76a4"],
Cell[256221, 5842, 199, 4, 34, "Output",ExpressionUUID->"a082bee0-df6a-4588-8e8d-45caba2913d6"],
Cell[256423, 5848, 177, 4, 34, "Output",ExpressionUUID->"c784ddfd-55b9-400c-a48e-c81764971dc3"]
}, Open  ]],
Cell[256615, 5855, 551, 15, 52, "Input",ExpressionUUID->"59394994-cfea-456b-a056-2eb213ea0f6b"],
Cell[CellGroupData[{
Cell[257191, 5874, 817, 21, 52, "Input",ExpressionUUID->"71b910ef-ed05-49ad-b463-799d7e59dccd"],
Cell[258011, 5897, 148, 2, 34, "Output",ExpressionUUID->"f3016799-ebdf-4d78-9dc5-ebc991505fd9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258208, 5905, 80, 0, 54, "Subsection",ExpressionUUID->"29fc1c95-49fc-4a02-9057-759ac81c252e"],
Cell[258291, 5907, 318, 8, 73, "Input",ExpressionUUID->"2c32a026-be8f-44ab-b105-0f99a328e530"]
}, Open  ]]
}, Open  ]]
}
]
*)

