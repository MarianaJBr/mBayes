(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    292468,       6729]
NotebookOptionsPosition[    283090,       6562]
NotebookOutlinePosition[    283443,       6578]
CellTagsIndexPosition[    283400,       6575]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This code is released under the GPL license. Copyright 2018 by Valerio Marra \
(valerio.marra@me.com)\
\>", "Text",
 FontSize->14,
 FontWeight->"Bold",
 FontSlant->"Italic",
 FontColor->RGBColor[
  0, 0, 1],ExpressionUUID->"1df35057-a96d-495e-94a0-0d484796faf7"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["1 Preamble",
 FontColor->RGBColor[1, 0, 1]]], "Section",ExpressionUUID->"f66ae1b8-2596-\
49c1-9dc9-953450f586df"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mvn", "=", "$VersionNumber"}], "\[IndentingNewLine]", 
 RowBox[{"logD", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<code-stat/Ltools.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<code-stat/triplotF.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<code-stat/triplotCombo.m\>\"", "]"}], 
  ";"}]}], "Input",
 CellLabel->
  "(L3) In[1]:=",ExpressionUUID->"8192d94f-8a8c-4581-ac68-81f6d7aa93e9"],

Cell[BoxData["11.3`"], "Output",
 CellLabel->
  "(L3) Out[2]=",ExpressionUUID->"e4500050-8bf8-4ecc-bd95-738137f3b985"],

Cell[BoxData["\<\"/Users/rjovale/Documents/GitHub/mBayes\"\>"], "Output",
 CellLabel->
  "(L3) Out[3]=",ExpressionUUID->"1415665a-551f-4768-a093-7e3854301eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxMemAllowed", "=", 
    RowBox[{"0.8", " ", "$SystemMemory"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"80", "%", " ", "of", " ", "your", " ", "RAM"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Max memory allowed: \>\"", ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"maxMemAllowed", "/", 
         RowBox[{"1024", "^", "3"}]}], ",", ".1"}], "]"}], ",", 
      "\"\< GB\>\""}], "}"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"intervalBetweenTests", "=", "1"}], ";"}], 
  RowBox[{"(*", "seconds", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"iAmAliveSignal", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Dynamic", "[", "iAmAliveSignal", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RunScheduledTask", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MemoryInUse", "[", "]"}], ">", "maxMemAllowed"}], ",", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<..quitting Mathematica, too much RAM used :S\>\"", 
        "]"}], ";", 
       RowBox[{"Quit", "[", "]"}]}], ",", 
      RowBox[{"iAmAliveSignal", "++"}]}], "]"}], "\n", ",", 
    "intervalBetweenTests"}], "]"}], ";"}]}], "Input",
 CellLabel->
  "(L3) In[7]:=",ExpressionUUID->"3c0fb340-d704-4546-bbfc-942172e359fc"],

Cell[BoxData[
 TemplateBox[{"\"Max memory allowed: \"","51.2`","\" GB\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[7]:=",ExpressionUUID->"68ccc89a-0ee2-4742-8d68-9929b0f23061"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Removes", " ", "memory", " ", "limit", " ", "below", " ", "if", " ", 
    "needed"}], " ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"RemoveScheduledTask", "[", 
     RowBox[{"ScheduledTasks", "[", "]"}], "]"}], ";"}], "*)"}]}]], "Input",
 CellLabel->
  "(L3) In[13]:=",ExpressionUUID->"f0415793-8b7c-44f3-8211-5ce27648ef6c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["2 Glue code",
 FontColor->RGBColor[1, 0, 1]]], "Section",ExpressionUUID->"21cf603a-8223-\
4a0c-ac28-50742c4960ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"importing", " ", "your", " ", "chi2", " ", "function"}], ";", 
    " ", 
    RowBox[{
    "use", " ", "\"\<chi2=-2log L\>\"", " ", "if", " ", "you", " ", "need", 
     " ", "the", " ", "normalization", " ", 
     RowBox[{"(", 
      RowBox[{"eg", " ", "for", " ", "the", " ", "evidence"}], ")"}]}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "rname", " ", "is", " ", "the", " ", "general", " ", "label", " ", "for", 
     " ", "the", " ", "run"}], ";", " ", 
    RowBox[{
    "output", " ", "files", " ", "will", " ", "start", " ", "with", " ", 
     "\"\<rname\>\""}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "rname", " ", "is", " ", "also", " ", "the", " ", "name", " ", "of", " ", 
    RowBox[{"the", " ", ".", "m"}], " ", 
    RowBox[{"file", " ", "[", 
     RowBox[{"rename", " ", "accordingly"}], "]"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rname", "=", "\"\<JLA\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"ToFileName", "[", 
      RowBox[{"\"\<code-phys\>\"", ",", 
       RowBox[{"rname", "<>", "\"\<.m\>\""}]}], "]"}], "]"}], 
    ";"}]}]}]], "Input",
 CellLabel->
  "(L3) In[14]:=",ExpressionUUID->"b7b4c196-1a90-4f67-9696-d8c2fc427ffa"],

Cell[CellGroupData[{

Cell[BoxData["\<\"The reference vector is 'vectest'; the \
\\!\\(\\*SuperscriptBox[\\(\[Chi]\\), \\(2\\)]\\) function is \
'chi2test[om,w0,wa]'\"\>"], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[14]:=",ExpressionUUID->"99af5dde-9e5a-4893-ac0a-0ef577b4a8ea"],

Cell[BoxData["\<\"The prior vector is 'vecPtest'; the prior Fisher matrix is \
'Ptest'\"\>"], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[14]:=",ExpressionUUID->"5a679986-f538-4f74-b2aa-08b203e593b0"],

Cell[BoxData[
 TemplateBox[{"\"Dimension of parameter space: \"","3"},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[14]:=",ExpressionUUID->"5e8b26b4-2b3f-4151-bd73-819986cd1649"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"setting", " ", "up", " ", "the", " ", "chi2", " ", "function"}], 
    ";", " ", 
    RowBox[{"use", " ", "a", " ", "vector", " ", "argument"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "vecsolz", " ", "is", " ", "a", " ", "reference", " ", "parameter", " ", 
      "vector", " ", "not", " ", "far", " ", "from", " ", "the", " ", 
      "best"}], "-", 
     RowBox[{"fit", " ", "vector"}]}], ",", " ", 
    RowBox[{
    "its", " ", "value", " ", "is", " ", "inconsequential", " ", "and", " ", 
     RowBox[{"won", "'"}], "t", " ", "be", " ", "saved"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"in", " ", "case", " ", "of", " ", "a", " ", "forecast"}], ",", 
    " ", 
    RowBox[{
    "vecsolz", " ", "is", " ", "the", " ", "fiducial", " ", "value", " ", 
     "and", " ", "its", " ", "value", " ", "is", " ", "important"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vecsolz", "=", "vectest"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chi2impz", "[", 
      RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
     RowBox[{"chi2test", "[", 
      RowBox[{
       RowBox[{"vec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"vec", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"vec", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"parnamez", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(w\), \(0\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(w\), \(a\)]\)\>\""}], "}"}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"put", " ", "the", " ", "parameter", " ", "labels", " ", 
     RowBox[{"(", 
      RowBox[{
      "matching", " ", "the", " ", "dimensionality", " ", "of", " ", 
       "vecsolz"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dpar", "=", 
     RowBox[{"Length", "[", "parnamez", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"{", 
      RowBox[{"parnamez", ",", "vecsolz"}], "}"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"chi2impz", "[", "vecsolz", "]"}], "]"}]}]}]], "Input",
 CellLabel->
  "(L3) In[16]:=",ExpressionUUID->"c44e4a2a-29b2-459e-81d0-9db8db943e4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>", ",", "\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>", 
     ",", "\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.3`", ",", 
     RowBox[{"-", "1.`"}], ",", "0.`"}], "}"}]}], "}"}]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[16]:=",ExpressionUUID->"7bb8693b-dc52-4eae-a1ad-1a0eafa598d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.010664`", ",", "33.64693049155176`"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[21]=",ExpressionUUID->"8d3f1d9b-d8b6-46b9-b80d-033294534c5a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["3 Parameter space and prior",
 FontColor->RGBColor[1, 0, 1]]], "Section",ExpressionUUID->"f927329e-9eec-\
4607-9a6b-db479773003e"],

Cell[CellGroupData[{

Cell["a Parameter space", "Subsection",ExpressionUUID->"7f57a796-1961-49ed-bb8b-1b7c2f7726c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"run", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"specific", " ", "label", " ", "for", " ", "a", " ", "run"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"give", " ", 
     RowBox[{"{", 
      RowBox[{"min", ",", "max", ",", "ngrid"}], "}"}], " ", "for", " ", 
     "parameters", " ", "p1"}], ",", 
    RowBox[{
     RowBox[{"p2", ".."}], ";", " ", 
     RowBox[{
     "add", " ", "more", " ", "lines", " ", "if", " ", "necessary"}]}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"it", " ", "must", " ", "be", " ", "min"}], " ", "<", " ", 
    RowBox[{"max", " ", 
     RowBox[{"(", 
      RowBox[{"careful", " ", "with", " ", "negative", " ", "quantities"}], 
      ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "a", " ", "multivariate", " ", "prior", " ", "is", " ", "not", 
     " ", "given", " ", 
     RowBox[{"(", 
      RowBox[{"see", " ", "next", " ", "section"}], ")"}]}], ",", " ", 
    RowBox[{
    "these", " ", "become", " ", "effectively", " ", "flat", " ", 
     "priors"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "put", " ", "all", " ", "the", " ", "parameters", " ", "you", " ", 
     "want"}], ",", " ", 
    RowBox[{
    "you", " ", "can", " ", "fix", " ", "them", " ", "with", " ", "FixSome", 
     " ", "below"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dpar", "=", 
   RowBox[{"Length", "[", "parnamez", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pSet", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "p1", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"pSet", ",", 
     RowBox[{"{", 
      RowBox[{".1", ",", ".5", ",", "40"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "p2", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"pSet", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.4"}], ",", 
       RowBox[{"-", ".6"}], ",", "40"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "p3", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"pSet", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "40"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "pSet", "]"}], "\[NotEqual]", "dpar"}], ",", 
     RowBox[{
      RowBox[{"axt", "=", "\"\<Correct the parameter intervals above!\>\""}], 
      ";", 
      RowBox[{"Print", "[", "axt", "]"}], ";", 
      RowBox[{"Speak", "[", "axt", "]"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"redo", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "potentially", " ", "run", " ", "section", " ", "6", 
     "a"}], ",", " ", 
    RowBox[{"1", " ", "to", " ", "never", " ", "run", " ", "it"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"incr", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "potentially", " ", "run", " ", "section", " ", "6", 
     "b"}], ",", " ", 
    RowBox[{"1", " ", "to", " ", "never", " ", "run", " ", "it"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"adju", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "potentially", " ", "run", " ", "section", " ", "6", 
     "c"}], ",", " ", 
    RowBox[{"1", " ", "to", " ", "never", " ", "run", " ", "it"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->
  "(L3) In[22]:=",ExpressionUUID->"118c7763-b43d-4ed1-9e62-a20e9c64efd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "here", " ", "you", " ", "can", " ", "fix", " ", "the", " ", "FixPar", " ",
     "paramters", " ", "to", " ", "the", " ", "FixVal", " ", "values"}], "  ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FixSome", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"1", " ", "to", " ", "fix", " ", "FixPar", " ", "paramters"}], 
     ",", " ", 
     RowBox[{"0", " ", "not", " ", "to"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FixSome", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"chi2imp", "[", "vec_", "]"}], "=", 
        RowBox[{"chi2impz", "[", "vec", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vecsol", "=", "vecsolz"}], ";", "\[IndentingNewLine]", 
       RowBox[{"parnames", "=", "parnamez"}], ";", "\[IndentingNewLine]", 
       RowBox[{"tabpp", "=", 
        RowBox[{"Range", "[", "dpar", "]"}]}], ";"}], "\[IndentingNewLine]", 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FixPar", "=", 
        RowBox[{"{", "3", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"FixVal", "=", 
        RowBox[{"vecsolz", "[", 
         RowBox[{"[", "FixPar", "]"}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "fixing", " ", "the", " ", "parameters", " ", "to", " ", "their", " ",
          "reference", " ", "value"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tabvv", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"vec", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             RowBox[{"dpar", "-", 
              RowBox[{"Length", "[", "FixPar", "]"}]}]}], "}"}]}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"tabvv", "=", 
          RowBox[{"Insert", "[", 
           RowBox[{"tabvv", ",", 
            RowBox[{"FixVal", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"FixPar", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "FixPar", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"chi2imp", "[", "vec_", "]"}], "=", 
        RowBox[{"chi2impz", "[", "tabvv", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tabpp", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"Range", "[", "dpar", "]"}], ",", 
          RowBox[{"Partition", "[", 
           RowBox[{"FixPar", ",", "1"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vecsol", "=", 
        RowBox[{"vecsolz", "[", 
         RowBox[{"[", "tabpp", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"parnames", "=", 
        RowBox[{"parnamez", "[", 
         RowBox[{"[", "tabpp", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dpar", "=", 
        RowBox[{"dpar", "-", 
         RowBox[{"Length", "[", "FixPar", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pSet", "=", 
        RowBox[{"pSet", "[", 
         RowBox[{"[", "tabpp", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
      "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"tabpi", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{"pSet", ",", 
      RowBox[{"TableHeadings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"parnames", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
           "\"\<grid  -  parameter intervals\>\""}], "}"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellLabel->
  "(L3) In[32]:=",ExpressionUUID->"5326fd69-cb6f-439c-a2a0-5ae0fe888b59"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"min\"\>",
       HoldForm], 
      TagBox["\<\"max\"\>",
       HoldForm], 
      TagBox["\<\"grid  -  parameter intervals\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>",
       HoldForm], "0.1`", "0.5`", "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1.4`"}], 
      RowBox[{"-", "0.6`"}], "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1"}], "1", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(0\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(a\)]\)"}, {
      "min", "max", "grid  -  parameter intervals"}}]]]], "Output",
 CellLabel->
  "(L3) Out[34]//TableForm=",ExpressionUUID->"a90196a1-4497-43d3-9001-\
f9d38ab58362"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["b Prior", "Subsection",ExpressionUUID->"523ec158-ef57-40d9-b844-1ab3fecc1f57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "use", " ", "flat", " ", "priors", " ", "from", " ", 
     "previous", " ", "section"}], ",", " ", 
    RowBox[{
     RowBox[{
     "1", " ", "to", " ", "use", " ", "a", " ", "multivariate", " ", 
      "prior"}], " ", "-", " ", 
     RowBox[{
     "needs", " ", "Fisher", " ", "and", " ", "bf", " ", "of", " ", "the", 
      " ", "prior"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "as", " ", "the", " ", "prior", " ", "bf", " ", "is", " ", "in", " ", 
     "general", " ", "different", " ", "from", " ", "the", " ", "likelihood", 
     " ", "bf"}], ",", " ", 
    RowBox[{
     RowBox[{
     "it", " ", "does", " ", "not", " ", "make", " ", "sense", " ", "to", " ",
       "fix", " ", 
      RowBox[{"parameters", ":", " ", "dpar"}]}], "=", 
     RowBox[{"Length", "[", "PMat", "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mvprior", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mvprior", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PMat", "=", "Ptest"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "put", " ", "here", " ", "the", " ", "Fisher", " ", "matrix", " ", 
         "of", " ", "your", " ", "prior"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "PMat", "]"}], "\[NotEqual]", "dpar"}], ",", 
         
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Prior Fisher dimension does not match parameter space \
dimension\>\"", "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"CPMat", "=", 
        RowBox[{"Inverse", "[", "PMat", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vecP", "=", "vecPtest"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "put", " ", "here", " ", "the", " ", "central", " ", "value", " ", 
         "of", " ", "your", " ", "prior"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Prior", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "dpar"}], "/", "2"}], ")"}]}], 
         RowBox[{
          RowBox[{"Det", "[", "PMat", "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}]}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"vec", "-", "vecP"}], ")"}], ".", "PMat", ".", 
             RowBox[{"(", 
              RowBox[{"vec", "-", "vecP"}], ")"}]}]}], "/", "2"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"chi2P", "[", 
           RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"Prior", "[", "vec", "]"}], "]"}]}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"chi2P", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vec", "-", "vecP"}], ")"}], ".", "PMat", ".", 
          RowBox[{"(", 
           RowBox[{"vec", "-", "vecP"}], ")"}]}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "\[Pi]"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"-", "dpar"}], ")"}]}], 
           RowBox[{"Det", "[", "PMat", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "the", " ", "ranges", " ", "can", " ", "be", " ", "changed", " ", 
         "according", " ", "to", " ", "the", " ", "prior"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"nriskPrior", "=", "5"}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{"updating", " ", "ranges"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"newranges", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"vecP", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nriskPrior", " ", 
                RowBox[{
                 RowBox[{"CPMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{"vecP", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"nriskPrior", " ", 
                RowBox[{
                 RowBox[{"CPMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pSet", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "=", 
          "newranges"}], ";", "\[IndentingNewLine]", 
         RowBox[{"newtab", "=", 
          RowBox[{"TableForm", "[", 
           RowBox[{"pSet", ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"parnames", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
                 "\"\<grid  -  parameter intervals from prior\>\""}], "}"}]}],
               "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "newtab", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"TriPlotF", "[", 
         RowBox[{
         "1", ",", "0", ",", "CPMat", ",", "vecP", ",", "parnames", ",", "3", 
          ",", 
          RowBox[{"{", 
           RowBox[{"Darker", "[", "TangerineTango", "]"}], "}"}]}], "]"}], 
        "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"normPrior", "=", 
        RowBox[{"(", 
         RowBox[{"Times", "@@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Map", "[", 
            RowBox[{"Differences", ",", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
           "]"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Prior", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{"1", "/", "normPrior"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"normalization", ",", " ", 
         RowBox[{"necessary", " ", "for", " ", "the", " ", "evidence"}]}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"chi2P", "[", 
         RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", 
          RowBox[{"Prior", "[", "vec", "]"}], "]"}]}]}], ";"}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{"step", " ", "function", " ", "for", " ", "prior"}], " ", 
      "*)"}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "following", " ", "makes", " ", "the", " ", "paremeter"}], 
     "-", 
     RowBox[{"space", " ", "grid"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ngrid", "=", 
     RowBox[{"pSet", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
    RowBox[{"pMin", "=", 
     RowBox[{"pSet", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"pMax", "=", 
     RowBox[{"pSet", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"ParSpaceTab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"pTabX", "[", 
         RowBox[{"i", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParSpaceTab", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"pTabX", "[", 
        RowBox[{"#", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], "&"}], 
      " ", "/@", 
      RowBox[{"Range", "[", "dpar", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"useFisher", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"chi2", "[", "vec_", "]"}], ":=", 
     RowBox[{
      RowBox[{"chi2imp", "[", "vec", "]"}], "+", 
      RowBox[{"chi2P", "[", "vec", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"chi2vec", "[", "vec_", "]"}], ":=", 
      RowBox[{"Join", "[", 
       RowBox[{"vec", ",", 
        RowBox[{"{", 
         RowBox[{"chi2", "[", "vec", "]"}], "}"}]}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PLike", "[", "vec_", "]"}], ":=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"chi2", "[", "vec", "]"}]}], "/", "2"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellLabel->
  "(L3) In[35]:=",ExpressionUUID->"142fd9e4-69ff-46a5-9776-04f6675b4067"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[
           NCache[
            Rational[10, 17], 0.5882352941176471], 
           NCache[
            Rational[164, 765], 0.21437908496732025`], 
           NCache[
            Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
          1.6], Opacity[1.], LineBox[CompressedData["
1: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
gpnrFd0T70mEWXDSrpk+CgKehL0VGWHVW+M3T+kgBbd/xrdKjpKIQ1yX5lxG
KLh2JK5m1xiJWB1MqlrBpOCN79kYThqJmFa3TmmcZOmdx+f8icW9nK1+wdMU
yC4NnamZIBGZQX5n1n+nIEJPeugUg0QEq4/JDP6kYM8OkahFFjtyHluf8oeC
0/kTxzKZJMKgNe6XyT8K1Dz73hMfWHoFLQxLrqLCP0/bisriPeq6ddPsVJiR
X8wYfGT5jbMou4SLCucm/+vvWLzYwh3swkeFnrpMk9okiZh4YG57VICKRJ2T
IkUsblNr1F0hRMUjiyvGXJ9IROna7XKNwlSsTRaIMWBxQouXSLAoFR9cN75M
ZbHvg6F/WtuoeL1ue8cgi83V5BmCO6jQWVjoXDtFIs6tjWkZ2EXFz+MmNVIs
lm+ZK0iWouLjA+XkkywWf6AVabKfipB5V8vzLF6rlu8seYiKpK1LOy6x+CvH
WoNpOSpU5FvearJ4oNnseMlRKsQ/0W8pspgcWLfdBVQcNjWbFWHxk9NiHEdV
qGi+YmE6z7qfMA73z/9OUSHBI9b8msUuze/eNmhQce3AS2EvFhsFHnoepEXF
BLfnlYMsPnU6Mk5Llwr+a5UPR1h6SHPMegheoqLAvu6ZB4uFmjWuD1ymQmPt
CvI6Fi8H5JxMvkpFrC29Np6l74dTq/eYXKcixfpj2UYWd7Ff55O8QcWMxqO4
YFZ9kgM2vyu2piLrhIKCNque907dqXa2p2KzifuPNFa9rdl7UxWdqKi1Wsj5
SGf1Y0CoeYM7FaORqVPnWX6RODV1NsibCpn7tz1dWX7iYT99QMufdX3eZo7o
cRIxfH/F4rtgKkRiS9lzWf5sOHl1NCmMCksBDc90ln8L1lTVX4+i4oWg8Zfw
YRLhfv92yOd4KtyN7rWdYfl98/0PW/7lUnFj12MvsPqFa1Xj+IZnVKyzrimt
Z/XXok9mllQJFWOVvn/kKSRi0MNYyuAlFUvfbCjLXSQizun90fJWKtwkDLu+
NJOIB/Mv/rV3UnElzGaMm9Xfd+1j30z0UHFg+P0GkQYSoWd94cy691RYF+r+
Fahl6WvWZWA1RYWpGW3BvJJEsE8UiPnNUrGiI+yOWDmrn6+FTMTNU5G+Cweb
S0lE3xU1y6ZFln/st5vNs/Io+ny96zbuXmweyPpXxMozAZWKuHd7e9EZZsr6
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
22oLsHs2zY4+Z2L4///3/w9DD6CE
           "]]},
         Annotation[#, "Charting`Private`Tag$1291#1"]& ]}, {}, {}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.003110432498105149},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox["\" \"", FontSize -> 16, StripOnInput -> False], 
              TextForm]], "InlineText"], 
           Text[
            Style[" ", FontSize -> 16]]], TraditionalForm], None}, {
        None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-0.07832897429485852, 0.6783289742948585}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], "", ""},
    {
     GraphicsBox[{
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {0.13636556135652042`, 
           0.1818207484753606}}, {0.3, -1.1}}],
         Ellipsoid[{0.3, -1.1}, {{0.022957489288986367`, 
          0.020661740360087718`}, {0.020661740360087718`, 
          0.051654350900219276`}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {0.2237377971657399, 
           0.2983170628876532}}, {0.3, -1.1}}],
         Ellipsoid[{0.3, -1.1}, {{0.06180074306244176, 0.05562066875619755}, {
          0.05562066875619755, 0.1390516718904938}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.34393543117714404`, 0.}, {
           0.30954188805942945`, 0.4127225174125727}}, {0.3, -1.1}}],
         Ellipsoid[{0.3, -1.1}, {{0.118291580819008, 0.10646242273710713`}, {
          0.10646242273710713`, 0.2661560568427677}}]]}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {None, None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      PlotRange->{{-0.07832897429485852, 
       0.6783289742948585}, {-1.6674934614422874`, -0.5325065385577127}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[
           NCache[
            Rational[10, 17], 0.5882352941176471], 
           NCache[
            Rational[164, 765], 0.21437908496732025`], 
           NCache[
            Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
          1.6], Opacity[1.], LineBox[CompressedData["
1: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
k6k=
           "]]},
         Annotation[#, "Charting`Private`Tag$2963#1"]& ]}, {}, {}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1.6674934614422874`, 0.002073621665403438},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {25, 8}},
      ImageSize->{213, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.6674934614422874`, -0.5325065385577127}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], ""},
    {
     GraphicsBox[{
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {-0.4090966840695614, 
           0.1981345671107559}}, {0.3, -0.1}}],
         Ellipsoid[{0.3, -0.1}, {{
          0.022957489288986367`, -0.06198522108026318}, {-0.06198522108026318,
           0.20661740360087716`}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {-0.67121339149722, 
           0.3250834825652867}}, {0.3, -0.1}}],
         Ellipsoid[{0.3, -0.1}, {{
          0.06180074306244176, -0.1668620062685927}, {-0.1668620062685927, 
          0.5562066875619754}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.34393543117714404`, 0.}, {-0.9286256641782887,
            0.44975393628127724`}}, {0.3, -0.1}}],
         Ellipsoid[{0.3, -0.1}, {{
          0.118291580819008, -0.3193872682113215}, {-0.3193872682113215, 
          1.064624227371071}}]]}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(m\\)]\\)\"", 
               FontSize -> 16, StripOnInput -> False], TextForm]], 
            "InlineText"], 
           Text[
            Style[
            "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", FontSize -> 
             16]]], TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {50, 8}},
      ImageSize->{250, 238},
      PlotRange->{{-0.07832897429485852, 
       0.6783289742948585}, {-1.2349869228845751`, 1.034986922884575}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.22727593559420073`, 0.}, {-0.3636414969507212,
            0.27273112271304095`}}, {-1.1, -0.1}}],
         Ellipsoid[{-1.1, -0.1}, {{
          0.051654350900219276`, -0.08264696144035084}, {-0.08264696144035084,
           0.20661740360087716`}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.3728963286095665, 0.}, {-0.5966341257753065, 
           0.44747559433147993`}}, {-1.1, -0.1}}],
         Ellipsoid[{-1.1, -0.1}, {{
          0.1390516718904938, -0.2224826750247901}, {-0.2224826750247901, 
          0.5562066875619754}}]]}, 
       {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
         NCache[
          Rational[10, 17], 0.5882352941176471], 
         NCache[
          Rational[164, 765], 0.21437908496732025`], 
         NCache[
          Rational[122, 765], 0.15947712418300652`]]], 
        InterpretationBox[
         GeometricTransformationBox[
          DiskBox[{0, 0}], {{{0.5159031467657158, 0.}, {-0.8254450348251453, 
           0.6190837761188591}}, {-1.1, -0.1}}],
         Ellipsoid[{-1.1, -0.1}, {{
          0.2661560568427677, -0.42584969094842834`}, {-0.42584969094842834`, 
          1.064624227371071}}]]}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      PlotRange->{{-1.6674934614422874`, -0.5325065385577127}, \
{-1.2349869228845751`, 1.034986922884575}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[
           NCache[
            Rational[10, 17], 0.5882352941176471], 
           NCache[
            Rational[164, 765], 0.21437908496732025`], 
           NCache[
            Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
          1.6], Opacity[1.], LineBox[CompressedData["
1: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
FfCrvWaq9BEH//+//38A3bSiUg==
           "]]},
         Annotation[#, "Charting`Private`Tag$4556#1"]& ]}, {}, {}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.0010368108327017207`},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.2349869228845751`, 1.034986922884575}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
  "Grid"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[35]:=",ExpressionUUID->"5b85c13a-1c7f-4414-b4f0-916638e063f4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"DeleteFile", "[", 
    RowBox[{"ToFileName", "[", 
     RowBox[{"\"\<results-chi2\>\"", ",", 
      RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
       RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
     "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "mvn", ",", "logD", ",", "parnames", ",", "PMat", ",", "CPMat", ",", 
     "vecP", ",", "mvprior"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "(L3) In[42]:=",ExpressionUUID->"230ca7fa-08fd-4abc-bc10-d4e5c19e0f35"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["4 Fisher approximation",
  FontColor->RGBColor[0, 0, 1]],
 " - can be skipped"
}], "Section",ExpressionUUID->"485388a7-09b9-4f22-adb2-203059ac80d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"comboLP", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "0", " ", "to", " ", "do", " ", "Fisher", " ", "on", " ", "the", " ", 
     "Likelihood"}], ",", " ", 
    RowBox[{
     RowBox[{
     "1", " ", "to", " ", "do", " ", "Fisher", " ", "on", " ", "Prior", "*", 
      "Likelihood"}], " ", "-", " ", 
     RowBox[{
     "this", " ", "may", " ", "be", " ", "necessary", " ", "if", " ", "the", 
      " ", "Likelihood", " ", "is", " ", "too", " ", "degenerated"}]}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"forecast", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "1", " ", "if", " ", "a", " ", "forecast", " ", "is", " ", "considered"}],
     ";", " ", 
    RowBox[{"skips", " ", "the", " ", "minimization"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NumChi2", "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", " ", "if", " ", "chi2imp", " ", "is", " ", "numeric"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"0", " ", "if", " ", "analytic"}], " ", "-", " ", 
     RowBox[{
     "the", " ", "only", " ", "implication", " ", "is", " ", "how", " ", 
      "the", " ", "Hessian", " ", 
      RowBox[{"(", 
       RowBox[{"Fisher", " ", "matrix"}], ")"}], " ", "is", " ", 
      "computed"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scaleNH", "=", 
    RowBox[{"10", "^", 
     RowBox[{"-", "2.5"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"NHessian", " ", "fudge", " ", "parameter"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"mvprior", "\[Equal]", "0"}], ",", 
    RowBox[{"comboLP", "=", "0"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"comboLP", "\[Equal]", "0"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"forecast", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"minimum", " ", "chi2"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fmMethods", "=", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ConjugateGradient\>\"", ",", "\"\<PrincipalAxis\>\"", ",", 
            "\"\<Newton\>\"", ",", "\"\<QuasiNewton\>\""}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"LaunchKernels", "[", 
          RowBox[{"Length", "[", "fmMethods", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"AbsoluteTiming", "[", 
             RowBox[{
              RowBox[{"DistributeDefinitions", "[", "\"\<Global`\>\"", "]"}], 
              ";"}], "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"AbsoluteTiming", "[", 
           RowBox[{
            RowBox[{"DistributeDefinitions", "[", 
             RowBox[{"fmMethods", ",", "chi2imp"}], "]"}], ";"}], "]"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"tabfm1", "=", 
          RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Off", "[", 
              RowBox[{
               RowBox[{"General", "::", "partd"}], ",", 
               RowBox[{"FindMinimum", "::", "fddis"}], ",", 
               RowBox[{"FindMinimum", "::", "bdmtd"}]}], "]"}], ";", 
             RowBox[{"AbsoluteTiming", "[", 
              RowBox[{"FindMinimum", "[", 
               RowBox[{
                RowBox[{"chi2imp", "[", "vec", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"vec", ",", "vecsol", ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", "i"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "fmMethods"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"CloseKernels", "[", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"tabfm1", ",", "2"}], "]"}], ",", "3"}], "]"}], ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"fmMethods", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<time in seconds\>\"", ",", "\"\<\[Chi]\>\"", ",", 
                 "\"\<best-fit vector\>\""}], "}"}]}], "}"}]}]}], "]"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sortabfm1", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"tabfm1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"sortabfm1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"beffi", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"vecL", "=", 
          RowBox[{"vec", "/.", 
           RowBox[{"beffi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"tabfm1", "=", 
          RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Off", "[", 
              RowBox[{
               RowBox[{"General", "::", "partd"}], ",", 
               RowBox[{"FindMinimum", "::", "fddis"}], ",", 
               RowBox[{"FindMinimum", "::", "bdmtd"}]}], "]"}], ";", 
             RowBox[{"AbsoluteTiming", "[", 
              RowBox[{"FindMinimum", "[", 
               RowBox[{
                RowBox[{"chi2imp", "[", "vec", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"vec", ",", "vecL", ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", "i"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "fmMethods"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"CloseKernels", "[", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"tabfm1", ",", "2"}], "]"}], ",", "3"}], "]"}], ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"fmMethods", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<time in seconds\>\"", ",", "\"\<\[Chi]\>\"", ",", 
                 "\"\<best-fit vector\>\""}], "}"}]}], "}"}]}]}], "]"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sortabfm1", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"tabfm1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"sortabfm1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"beffi", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"vecL", "=", 
          RowBox[{"vec", "/.", 
           RowBox[{"beffi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vecL", "=", "vecsol"}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", "0"}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"it", " ", "is", " ", "usually", " ", "the", " ", "case"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"{", 
           RowBox[{"chi2minfi", ",", "vecL"}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"testFin", "=", 
       RowBox[{"Total", "@", 
        RowBox[{"Boole", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"vecL", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "||", 
            RowBox[{
             RowBox[{"vecL", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "beffi", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
            "\"\<{\!\(\*SubsuperscriptBox[\(\[Chi]\), \(min\), \(2\)]\),   \
{vec -> \>\"", ",", "parnames", ",", "\"\<}\>\""}], "}"}], "]"}], ",", 
          "\"\<\>\""}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"testFin", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"NumChi2", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"LMat", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"chi2imp", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", "2"}], 
                  "}"}]}], "]"}]}], "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], "\[Rule]", 
                 RowBox[{"vecL", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Get", "[", "\"\<code-stat/NHessian.m\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Hscale", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Total", "@", 
                 RowBox[{"Boole", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Equal", "[", 
                    RowBox[{"#", ",", "0"}], "]"}], "&"}], ",", "vecL"}], 
                   "]"}], "]"}]}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"Abs", "[", "vecL", "]"}], "scaleNH"}], ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "3"}]}]}], "]"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "in", " ", "the", " ", "rare", " ", "case", " ", "that", " ", 
               "a", " ", "bf", " ", "value", " ", "is", " ", "zero"}], 
              "..."}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2impt", "[", "vec_", "]"}], ":=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"coc", "++"}], ";", 
               RowBox[{"chi2imp", "[", "vec", "]"}]}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"coc", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"LMat", "=", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{"NHessian", "[", 
               RowBox[{"chi2impt", ",", "vecL", ",", 
                RowBox[{"Scale", "\[Rule]", "Hscale"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<NHessian calculated with \>\"", ",", "coc", ",", 
                "\"\< evaluations.\>\""}], "}"}], "]"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<L=\>\"", ",", 
           RowBox[{"MatrixForm", "[", "LMat", "]"}], ",", 
           "\"\<       \!\(\*SuperscriptBox[\(L\), \(-1\)]\)=\>\"", ",", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"CLMat", "=", 
             RowBox[{"Inverse", "[", "LMat", "]"}]}], "]"}]}], "]"}], ";", 
         RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"testE", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", ">", "0"}], ")"}], "&"}], ",", 
            RowBox[{"Eigenvalues", "[", "CLMat", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Times", "@@", 
             RowBox[{"(", 
              RowBox[{"Boole", "[", "testE", "]"}], ")"}]}], "\[NotEqual]", 
            "1"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Fisher went wrong! C is not positive definite!\>\"", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"useFisher", "=", "0"}], ";"}], "\[IndentingNewLine]", 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"useFisher", "=", "1"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Fisher", " ", "approximation", " ", "for", " ", "likelihood", 
              " ", "and", " ", "corresponding", " ", "chi2"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"Lmax", "=", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "chi2minfi"}], "/", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"LikeL", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"Lmax", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecL"}], ")"}], ".", "LMat", ".", 
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecL"}], ")"}]}]}], "/", "2"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"chi2L", "[", 
                RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"LikeL", "[", "vec", "]"}], "]"}]}]}], ";"}], "*)"}],
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2L", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"chi2minfi", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecL"}], ")"}], ".", "LMat", ".", 
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecL"}], ")"}]}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2F", "[", "vec_", "]"}], ":=", 
             RowBox[{
              RowBox[{"chi2L", "[", "vec", "]"}], "+", 
              RowBox[{"chi2P", "[", "vec", "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"triplotL", "=", 
              RowBox[{"TriPlotF", "[", 
               RowBox[{
               "2", ",", "0", ",", "CLMat", ",", "vecL", ",", "parnames", ",",
                 "3", ",", 
                RowBox[{"{", 
                 RowBox[{"Darker", "[", "Emerald", "]"}], "}"}]}], "]"}]}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Min \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) outside prior \
intervals! Fisher can't be used.\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"useFisher", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"mvprior", "\[Equal]", "1"}], "&&", 
         RowBox[{"useFisher", "\[Equal]", "1"}]}], "\[IndentingNewLine]", ",",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "combined", " ", "Fisher", " ", "and", " ", "ML", " ", "estimator"}],
          " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FMat", "=", 
          RowBox[{"LMat", "+", "PMat"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"CFMat", "=", 
          RowBox[{"Inverse", "[", "FMat", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vecF", "=", 
          RowBox[{"CFMat", ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"LMat", ".", "vecL"}], "+", 
             RowBox[{"PMat", ".", "vecP"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"chi2", "[", "vecF", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"TriPlotF", "[", 
          RowBox[{
          "3", ",", "0", ",", "CFMat", ",", "vecF", ",", "parnames", ",", "3",
            ",", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Dashed", ",", "Iris"}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"triplotF", "=", 
           RowBox[{"TriPlotCombo", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"ToFileName", "[", 
            RowBox[{"\"\<results-analysis\>\"", ",", 
             RowBox[{"rname", "<>", "\"\<-run\>\"", "<>", 
              RowBox[{"ToString", "[", "run", "]"}], "<>", 
              "\"\<-triplot_Fisher.pdf\>\""}]}], "]"}], ",", "triplotF", ",", 
           
           RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
           RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"useFisher", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FMat", "=", "LMat"}], ";", "\[IndentingNewLine]", 
         RowBox[{"CFMat", "=", "CLMat"}], ";", "\[IndentingNewLine]", 
         RowBox[{"vecF", "=", "vecL"}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"chi2", "[", "vecF", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"ToFileName", "[", 
            RowBox[{"\"\<results-analysis\>\"", ",", 
             RowBox[{"rname", "<>", "\"\<-run\>\"", "<>", 
              RowBox[{"ToString", "[", "run", "]"}], "<>", 
              "\"\<-triplot_Fisher.pdf\>\""}]}], "]"}], ",", "triplotL", ",", 
           
           RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
           RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"forecast", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"minimum", " ", "chi2"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"fmMethods", "=", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ConjugateGradient\>\"", ",", "\"\<PrincipalAxis\>\"", ",", 
            "\"\<Newton\>\"", ",", "\"\<QuasiNewton\>\""}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"LaunchKernels", "[", 
          RowBox[{"Length", "[", "fmMethods", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"AbsoluteTiming", "[", 
             RowBox[{
              RowBox[{"DistributeDefinitions", "[", "\"\<Global`\>\"", "]"}], 
              ";"}], "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"AbsoluteTiming", "[", 
           RowBox[{
            RowBox[{"DistributeDefinitions", "[", 
             RowBox[{"fmMethods", ",", "chi2"}], "]"}], ";"}], "]"}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tabfm1", "=", 
          RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Off", "[", 
              RowBox[{
               RowBox[{"General", "::", "partd"}], ",", 
               RowBox[{"FindMinimum", "::", "fddis"}], ",", 
               RowBox[{"FindMinimum", "::", "bdmtd"}]}], "]"}], ";", 
             RowBox[{"AbsoluteTiming", "[", 
              RowBox[{"FindMinimum", "[", 
               RowBox[{
                RowBox[{"chi2", "[", "vec", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"vec", ",", "vecsol", ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", "i"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "fmMethods"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"CloseKernels", "[", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"tabfm1", ",", "2"}], "]"}], ",", "3"}], "]"}], ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"fmMethods", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<time in seconds\>\"", ",", "\"\<\[Chi]\>\"", ",", 
                 "\"\<best-fit vector\>\""}], "}"}]}], "}"}]}]}], "]"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sortabfm1", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"tabfm1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"sortabfm1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"beffi", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"vecF", "=", 
          RowBox[{"vec", "/.", 
           RowBox[{"beffi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"tabfm1", "=", 
          RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Off", "[", 
              RowBox[{
               RowBox[{"General", "::", "partd"}], ",", 
               RowBox[{"FindMinimum", "::", "fddis"}], ",", 
               RowBox[{"FindMinimum", "::", "bdmtd"}]}], "]"}], ";", 
             RowBox[{"AbsoluteTiming", "[", 
              RowBox[{"FindMinimum", "[", 
               RowBox[{
                RowBox[{"chi2", "[", "vec", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"vec", ",", "vecF", ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"pSet", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"Method", "\[Rule]", "i"}]}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "fmMethods"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"CloseKernels", "[", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"TableForm", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"tabfm1", ",", "2"}], "]"}], ",", "3"}], "]"}], ",", 
            RowBox[{"TableHeadings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"fmMethods", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<time in seconds\>\"", ",", "\"\<\[Chi]\>\"", ",", 
                 "\"\<best-fit vector\>\""}], "}"}]}], "}"}]}]}], "]"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"sortabfm1", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"tabfm1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"sortabfm1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", 
          RowBox[{"beffi", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"vecF", "=", 
          RowBox[{"vec", "/.", 
           RowBox[{"beffi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vecF", "=", "vecsol"}], ";", "\[IndentingNewLine]", 
         RowBox[{"chi2minfi", "=", "0"}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"it", " ", "is", " ", "usually", " ", "the", " ", "case"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"beffi", "=", 
          RowBox[{"{", 
           RowBox[{"chi2minfi", ",", "vecF"}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"testFin", "=", 
       RowBox[{"Total", "@", 
        RowBox[{"Boole", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"vecF", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "||", 
            RowBox[{
             RowBox[{"vecF", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "==", 
             RowBox[{"pSet", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "beffi", ",", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
            "\"\<{\!\(\*SubsuperscriptBox[\(\[Chi]\), \(min\), \(2\)]\),   \
{vec -> \>\"", ",", "parnames", ",", "\"\<}\>\""}], "}"}], "]"}], ",", 
          "\"\<\>\""}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"testFin", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"NumChi2", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"FMat", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"chi2", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", "2"}], 
                  "}"}]}], "]"}]}], "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", "i", "]"}], "\[Rule]", 
                 RowBox[{"vecF", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Get", "[", "\"\<code-stat/NHessian.m\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Hscale", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Total", "@", 
                 RowBox[{"Boole", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Equal", "[", 
                    RowBox[{"#", ",", "0"}], "]"}], "&"}], ",", "vecF"}], 
                   "]"}], "]"}]}], "\[Equal]", "0"}], ",", 
               RowBox[{
                RowBox[{"Abs", "[", "vecF", "]"}], "scaleNH"}], ",", 
               RowBox[{"10", "^", 
                RowBox[{"-", "3"}]}]}], "]"}]}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "in", " ", "the", " ", "rare", " ", "case", " ", "that", " ", 
               "a", " ", "bf", " ", "value", " ", "is", " ", "zero"}], 
              "..."}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2impt", "[", "vec_", "]"}], ":=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"coc", "++"}], ";", 
               RowBox[{"chi2", "[", "vec", "]"}]}], ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"coc", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"FMat", "=", 
             RowBox[{
              RowBox[{"1", "/", "2"}], 
              RowBox[{"NHessian", "[", 
               RowBox[{"chi2impt", ",", "vecF", ",", 
                RowBox[{"Scale", "\[Rule]", "Hscale"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<NHessian calculated with \>\"", ",", "coc", ",", 
                "\"\< evaluations.\>\""}], "}"}], "]"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<L=\>\"", ",", 
           RowBox[{"MatrixForm", "[", "FMat", "]"}], ",", 
           "\"\<       \!\(\*SuperscriptBox[\(L\), \(-1\)]\)=\>\"", ",", 
           RowBox[{"MatrixForm", "[", 
            RowBox[{"CFMat", "=", 
             RowBox[{"Inverse", "[", "FMat", "]"}]}], "]"}]}], "]"}], ";", 
         RowBox[{"Print", "[", "\"\< \>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"testE", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", ">", "0"}], ")"}], "&"}], ",", 
            RowBox[{"Eigenvalues", "[", "CFMat", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Times", "@@", 
             RowBox[{"(", 
              RowBox[{"Boole", "[", "testE", "]"}], ")"}]}], "\[NotEqual]", 
            "1"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "Print", "[", 
             "\"\<Fisher went wrong! C is not positive definite!\>\"", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"useFisher", "=", "0"}], ";"}], "\[IndentingNewLine]", 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"useFisher", "=", "1"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Fisher", " ", "approximation", " ", "for", " ", "likelihood", 
              " ", "and", " ", "corresponding", " ", "chi2"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"Lmax", "=", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "chi2minfi"}], "/", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"LikeF", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"Lmax", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecF"}], ")"}], ".", "FMat", ".", 
                  RowBox[{"(", 
                   RowBox[{"vec", "-", "vecF"}], ")"}]}]}], "/", "2"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"chi2F", "[", 
                RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"LikeF", "[", "vec", "]"}], "]"}]}]}], ";"}], "*)"}],
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"chi2F", "[", 
              RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
             RowBox[{"chi2minfi", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecF"}], ")"}], ".", "FMat", ".", 
               RowBox[{"(", 
                RowBox[{"vec", "-", "vecF"}], ")"}]}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"TriPlotF", "[", 
             RowBox[{
             "3", ",", "0", ",", "CFMat", ",", "vecF", ",", "parnames", ",", 
              "3", ",", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", "Iris"}], "}"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"triplotF", "=", 
              RowBox[{"TriPlotCombo", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "3"}], "}"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Export", "[", 
             RowBox[{
              RowBox[{"ToFileName", "[", 
               RowBox[{"\"\<results-analysis\>\"", ",", 
                RowBox[{"rname", "<>", "\"\<-run\>\"", "<>", 
                 RowBox[{"ToString", "[", "run", "]"}], "<>", 
                 "\"\<-triplot_Fisher.pdf\>\""}]}], "]"}], ",", "triplotF", 
              ",", 
              RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
              
              RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Min \!\(\*SuperscriptBox[\(\[Chi]\), \(2\)]\) outside prior \
intervals! Fisher can't be used.\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"useFisher", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PosteriorF", "[", 
    RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "dpar"}], "/", "2"}], ")"}]}], 
    RowBox[{
     RowBox[{"Det", "[", "FMat", "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}]}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"vec", "-", "vecF"}], ")"}], ".", "FMat", ".", 
        RowBox[{"(", 
         RowBox[{"vec", "-", "vecF"}], ")"}]}]}], "/", "2"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellLabel->
  "(L3) In[44]:=",ExpressionUUID->"e2e11314-00df-48a1-903d-42226ec84113"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.013461`", ",", "Null"}], "}"}]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"0308bb3e-2ab8-420f-a451-e36d8e558dfc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], " ", ":", 
  "  ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"0f59188b-92a1-4a87-aec0-7b777cdd40c9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], " ", ":", 
  "  ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a912cc74-e0f3-4a04-8458-b63a2b87d61e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], " ", ":", 
  "  ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"fa62957d-bdce-4157-b836-561bfe734091"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"\"\>", "\<\"time in seconds\"\>", "\<\"\[Chi]\"\>", "\<\"best-fit \
vector\"\>"},
    {"\<\"ConjugateGradient\"\>", "1.139204`", "25.83402055845957`", 
     GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.31974273644122214`", ",", 
           RowBox[{"-", "1.0384595196136421`"}], ",", 
           RowBox[{"-", "0.1875566049924215`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"PrincipalAxis\"\>", "0.000341`", "30.455010825637455`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3`", ",", 
           RowBox[{"-", "1.`"}], ",", "0.`"}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"Newton\"\>", "1.514938`", "25.833890229140195`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.31989400914202054`", ",", 
           RowBox[{"-", "1.038794286781462`"}], ",", 
           RowBox[{"-", "0.1884922436285376`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"QuasiNewton\"\>", "1.342032`", "25.83386713685681`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3199063628033962`", ",", 
           RowBox[{"-", "1.0383114896599055`"}], ",", 
           RowBox[{"-", "0.18902575460510126`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{
    1.139204, 
     25.83402055845957, {$CellContext`vec -> {
       0.31974273644122214`, -1.0384595196136421`, -0.1875566049924215}}}, {
    0.000341, 30.455010825637455`, {$CellContext`vec -> {0.3, -1., 0.}}}, {
    1.514938, 
     25.833890229140195`, {$CellContext`vec -> {
       0.31989400914202054`, -1.038794286781462, -0.1884922436285376}}}, {
    1.342032, 
     25.83386713685681, {$CellContext`vec -> {
       0.3199063628033962, -1.0383114896599055`, -0.18902575460510126`}}}}, 
   TableHeadings -> {{
     "ConjugateGradient", "PrincipalAxis", "Newton", "QuasiNewton"}, {
     "time in seconds", "\[Chi]", "best-fit vector"}}]]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"0aedc19a-8eb8-4831-81fd-cf30c4917c5e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "sdprec"}], "MessageName"], " ", ":", 
  "  ", "\<\"Line search unable to find a sufficient decrease in the function \
value with \\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digit \
precision.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 4)",ExpressionUUID->"6894266f-577b-42ae-81fa-caa91747b511"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "sdprec"}], "MessageName"], " ", ":", 
  "  ", "\<\"Line search unable to find a sufficient decrease in the function \
value with \\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digit \
precision.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 1)",ExpressionUUID->"98bd1908-f379-43e4-b679-d5190a52c108"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], " ", ":", 
  "  ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the function. You may need more than \\!\\(\\*RowBox[{\
\\\"MachinePrecision\\\"}]\\) digits of working precision to meet these \
tolerances.\"\>"}]], "Message", "MSG",
 ShowCellLabel->True,
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2479debf-3e62-42f0-9022-27097d950ff5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"\"\>", "\<\"time in seconds\"\>", "\<\"\[Chi]\"\>", "\<\"best-fit \
vector\"\>"},
    {"\<\"ConjugateGradient\"\>", "0.378335`", "25.83386713664666`", 
     GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.31990633836305254`", ",", 
           RowBox[{"-", "1.038311496447476`"}], ",", 
           RowBox[{"-", "0.18902576296287418`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"PrincipalAxis\"\>", "0.788258`", "25.83386479272997`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3199150971790507`", ",", 
           RowBox[{"-", "1.0384377639846631`"}], ",", 
           RowBox[{"-", "0.18891947899914568`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"Newton\"\>", "0.487541`", "25.83386713685681`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3199063628033962`", ",", 
           RowBox[{"-", "1.0383114896599055`"}], ",", 
           RowBox[{"-", "0.18902575460510126`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"QuasiNewton\"\>", "0.379737`", "25.83386713664666`", GridBox[{
       {
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.31990633836305254`", ",", 
           RowBox[{"-", "1.038311496447476`"}], ",", 
           RowBox[{"-", "0.18902576296287418`"}]}], "}"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{
    0.378335, 
     25.83386713664666, {$CellContext`vec -> {
       0.31990633836305254`, -1.038311496447476, -0.18902576296287418`}}}, {
    0.788258, 
     25.83386479272997, {$CellContext`vec -> {
       0.3199150971790507, -1.0384377639846631`, -0.18891947899914568`}}}, {
    0.487541, 
     25.83386713685681, {$CellContext`vec -> {
       0.3199063628033962, -1.0383114896599055`, -0.18902575460510126`}}}, {
    0.379737, 
     25.83386713664666, {$CellContext`vec -> {
       0.31990633836305254`, -1.038311496447476, -0.18902576296287418`}}}}, 
   TableHeadings -> {{
     "ConjugateGradient", "PrincipalAxis", "Newton", "QuasiNewton"}, {
     "time in seconds", "\[Chi]", "best-fit vector"}}]]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"82413513-f0f4-4f9c-9581-bfb47363de06"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"25.83386479272997`", ",", 
       RowBox[{"{", 
        RowBox[{"vec", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.3199150971790507`", ",", 
           RowBox[{"-", "1.0384377639846631`"}], ",", 
           RowBox[{"-", "0.18891947899914568`"}]}], "}"}]}], "}"}]}], "}"}]},
    {
     TemplateBox[{
      "\"{\\!\\(\\*SubsuperscriptBox[\\(\[Chi]\\), \\(min\\), \\(2\\)]\\),   \
{vec -> \"",RowBox[{"{", 
         RowBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(m\\)]\\)\"", ",",
            "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", ",", 
           "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\""}], "}"}],"\"}\""},
      
      "RowDefault"]},
    {"\<\"\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"d77647ee-c217-4243-b38d-1eb6732a3fb5"],

Cell[BoxData[
 TemplateBox[{"\"NHessian calculated with \"","19","\" evaluations.\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"5b1eaa24-bd43-4a13-8042-182a3660a358"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1603.7249942097644`", "467.32070133232344`", "308.45506336471163`"},
       {"467.32070133232344`", "274.5484668073601`", "123.85197695535224`"},
       {"308.45506336471163`", "123.85197695535224`", "134.62579392793435`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"       \\!\\(\\*SuperscriptBox[\\(L\\), \
\\(-1\\)]\\)=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.001455135436266473`", 
        RowBox[{"-", "0.0016629985855899805`"}], 
        RowBox[{"-", "0.001804098780866259`"}]},
       {
        RowBox[{"-", "0.0016629985855899805`"}], "0.008126890554253897`", 
        RowBox[{"-", "0.0036662448788584347`"}]},
       {
        RowBox[{"-", "0.001804098780866259`"}], 
        RowBox[{"-", "0.0036662448788584343`"}], "0.014934397200982235`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["L=", 
   MatrixForm[{{1603.7249942097644`, 467.32070133232344`, 
    308.45506336471163`}, {467.32070133232344`, 274.5484668073601, 
    123.85197695535224`}, {308.45506336471163`, 123.85197695535224`, 
    134.62579392793435`}}], "       \!\(\*SuperscriptBox[\(L\), \(-1\)]\)=", 
   MatrixForm[{{
    0.001455135436266473, -0.0016629985855899805`, -0.001804098780866259}, \
{-0.0016629985855899805`, 
    0.008126890554253897, -0.0036662448788584347`}, {-0.001804098780866259, \
-0.0036662448788584343`, 0.014934397200982235`}}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"8fde8a7b-cbf4-43ec-acc7-c4c12cbc2c06"],

Cell[BoxData["\<\" \"\>"], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"2463e879-659e-48e0-8e22-0940499cb33c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[10, 17], 0.5882352941176471], 
            NCache[
             Rational[164, 765], 0.21437908496732025`], 
            NCache[
             Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
           1.6], Opacity[1.], LineBox[CompressedData["
1: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
gpnrFd0T70mEWXDSrpk+CgKehL0VGWHVW+M3T+kgBbd/xrdKjpKIQ1yX5lxG
KLh2JK5m1xiJWB1MqlrBpOCN79kYThqJmFa3TmmcZOmdx+f8icW9nK1+wdMU
yC4NnamZIBGZQX5n1n+nIEJPeugUg0QEq4/JDP6kYM8OkahFFjtyHluf8oeC
0/kTxzKZJMKgNe6XyT8K1Dz73hMfWHoFLQxLrqLCP0/bisriPeq6ddPsVJiR
X8wYfGT5jbMou4SLCucm/+vvWLzYwh3swkeFnrpMk9okiZh4YG57VICKRJ2T
IkUsblNr1F0hRMUjiyvGXJ9IROna7XKNwlSsTRaIMWBxQouXSLAoFR9cN75M
ZbHvg6F/WtuoeL1ue8cgi83V5BmCO6jQWVjoXDtFIs6tjWkZ2EXFz+MmNVIs
lm+ZK0iWouLjA+XkkywWf6AVabKfipB5V8vzLF6rlu8seYiKpK1LOy6x+CvH
WoNpOSpU5FvearJ4oNnseMlRKsQ/0W8pspgcWLfdBVQcNjWbFWHxk9NiHEdV
qGi+YmE6z7qfMA73z/9OUSHBI9b8msUuze/eNmhQce3AS2EvFhsFHnoepEXF
BLfnlYMsPnU6Mk5Llwr+a5UPR1h6SHPMegheoqLAvu6ZB4uFmjWuD1ymQmPt
CvI6Fi8H5JxMvkpFrC29Np6l74dTq/eYXKcixfpj2UYWd7Ff55O8QcWMxqO4
YFZ9kgM2vyu2piLrhIKCNque907dqXa2p2KzifuPNFa9rdl7UxWdqKi1Wsj5
SGf1Y0CoeYM7FaORqVPnWX6RODV1NsibCpn7tz1dWX7iYT99QMufdX3eZo7o
cRIxfH/F4rtgKkRiS9lzWf5sOHl1NCmMCksBDc90ln8L1lTVX4+i4oWg8Zfw
YRLhfv92yOd4KtyN7rWdYfl98/0PW/7lUnFj12MvsPqFa1Xj+IZnVKyzrimt
Z/XXok9mllQJFWOVvn/kKSRi0MNYyuAlFUvfbCjLXSQizun90fJWKtwkDLu+
NJOIB/Mv/rV3UnElzGaMm9Xfd+1j30z0UHFg+P0GkQYSoWd94cy691RYF+r+
Fahl6WvWZWA1RYWpGW3BvJJEsE8UiPnNUrGiI+yOWDmrn6+FTMTNU5G+Cweb
S0lE3xU1y6ZFln/st5vNs/Io+ny96zbuXmweyPpXxMozAZWKuHd7e9EZZsr6
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
22oLsHs2zY4+Z2L4///3/w9DD6CE
            "]]},
          Annotation[#, "Charting`Private`Tag$1291#1"]& ]}, {}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[91, 255], 0.3568627450980392], 
            NCache[
             Rational[94, 255], 0.3686274509803922], 
            NCache[
             Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
RHhKeUGlIYm2vcNy2l10ghh90fH2HInp1JZ97t10QmyFz+jK8yTOPjSblvhO
J3q33xPwMqHGk/V3iKPY/6H+BstLJFxw63N8D524HLNLg3WZxMlN0k8ke+nE
ti/yR49cIZHVoSfiRfH8HlGTXDMSBecCzg9TzJ0/55bC1f+1t7t+rI9OpCv9
cg63IMGxCddIpNhVry14wTUSv4pfVf+h2MCm9LXDdRI9B3etPvCD0isk/eMP
KxJBGSs2elI8mx1VdfYmiVjNX9NfKG5ieXKqrEmsTX3sN0lx/LTdwE4byo8n
onjrflL6rb30L9GWhPiCZQM6FB/dqysiaUe1V3+ff43itWY7ad53SBjVWhxx
oXj0ybptf+6SENJeERpEcXmSyKFr9lQ+c9/GRlIcUTdjyHYgkZCxyiqa4hvD
P65p3yex/7T5+HOKCdGWB3kPSJScDNHyoVhMvcRf8RGJor70/fco7jNMi4lw
IrGc27jQmOL8+xGZC51JvHJeFriTYv8XHqWOLiS25AaTSym+XGzb8tOVxKZB
97Z2an7q3SZ9Ru6UnhKSUQkULxDS+VPtQeJCtvfaqxRzFbYv3uVJIq51lakM
xelHadLJXiSiRUSuNv9Pb+ulm1f7kLB2K1Z6+D+9g/7u8fElcZzlmiFD8Uwr
w+x6AAlh+3K+E1T+Gv98vscJJLG9QKruK5X/eKkUL50gEqFMtXPmFGubuqUq
PSPhh7ji85RfpD1ufY4MJcHKXhJZT/lr5K1x06IwEn16Jjt3UBw2qDbeH0FC
oVqxYpzyp5WIrJBxFKXnt/GPRyiG2pJVtdEk9rgduBVK+bnH4btmSgyJUztM
NSQpv6vNC3WzSiBxQrRJu4ZaP+q+ZU1/35BoFgzOa6LW13bRcWmfRBJRIcWZ
DWw6oSF7KjcxhcSaQ8Z7Mtuo8bWWD/ZkkrCo9J8WodYvUbpn1933JMoX25Ek
tb736th4zssmYZpThIAmOrH/bKMcPZfyp2ljy0+qHmjf8T9z6TMJpdlSNa0q
yk/Tn+KHi0gcKg1nFlTQCV3XgRGnEhJHR0wk1MrpxLGnR31flJHwqoD7gi+U
3qkLizk1VD2R37bnGFXPLn33UDRoo9bbWKKIfiqVb6vse99ZJDK3DX88kkwn
rox9L7XjkLifUi6rmUgnzPkOXAhuJyGZJ689/zWlnxR/SGM3ia0Nv7ftjqL8
ftppRnuEikczlSPnRSccuWna7FESzv8C/kZ40In7pu3PLf+j+kfaL1rkRice
2Wht8fxN1VNWpRDjEeUPv7/mZTNU/0i7mrl2lB/L7jViIRPaRxTMu43pRLfC
t1vvFzHR/Uh8lYgRpa//URGFJUzovDUaVz9D5ctA9sTyZUzcaf667eZxqn73
VTO6VzCx5wh9o88BOjG0ULrVS5aJpE9z05w3UvocK+UxdjCRkFJjbk/tjwnv
VR4d1mBC5pZWQOMIjZheGS79aRcT4cVWunKDNOJt540LCbupc88SrYjMHhrB
d1ui034/EzWPPDs9WmlE5rNr3VLHmHCOiA/ny6ERopxl/VevMqF82tvB2I5G
hMUVlv+1YMIn8nlvgDWNWGNl9SrgGhMuxussC67RCPpMxdmPN5joka34NOcS
jVBb61QpaMfEg+wW/e26NOKU6cDr14+p+M+W77tEpxEh/VUXu8KZ6N9urcqo
kyPEpl1aTGqZ0Ly+1ylcWI7oqP9yor+Oich0Se7F+dT7TaxAw70GJmJ2HpOm
zZUj9h3yqAhsZiL6/PSNsHFZwjbIK6ekjTrnXdOeOsiVJZo2BEas/87El9I5
X3LfyhL+p6NNBmeYWHLlfd/63bKE0LuPPQ83tSDhJv1WmrEMse5jXNmITwuE
fx1O3KoiRRRVW9xRG25BbE5LxihtFeGx9ftYjW4rhJefOh94YQWhpUJ/7pPY
Cp85LBXJFhHCRk1zkeSSNviMVbtVRy4mGgMW6c1YtkHrln7L6hJBwkrVSDzw
ehucRDTf2ScJEkKMt+1yN9rwTaP9fXeQILFb/KD14VttqJxQP/3TVJBIiXoc
GHy3Db6f+3VTBAWJJ4njzQqubVj6V2xsif48YveXr2cMoqj+rq00o35+Inki
69K7+jacFucEXTrBR0Td0Xoo39gGxQGZ033gI3z/Kw972dQG2a3Pgh4o8xFW
o6yGALIN3epvHOvm8xEbB/9p3WK34blBC29Z0Rwi5buOpGpPG5bF781ZozqH
SCO7mjNn2nC7c06uvcYsMjNF92dvZEHO1mdMVuMPfu7aPEdehYWngvZrr6z5
A7myowXPN7GQLSE8VTg7haBWdzWHLSx05d16XvhlCjbTv+maO1jwEu9N6dab
wuaD3Hkl+1jY+sPgcpnlJNJY8RV1Rizk1wT0v8iYQM/lYtfdxizcY5op9YZO
QPoXD+/OszDzW2LxoQcT8J8Vzwm8yMJj/2feuocmcIPm9fakOQt1KxJt7drH
sfHGDS+WDQtuOn0OsiLjSJqjrvPdk4rvW+vmzCdjWDb4bO8dbxZ+K54Jbb0x
hruc8Z3zfFmoOb9cR+LUGPZkf9iwLoCFTDX2te8yY2i7vk3Q7BkL66b4ZvLy
RyHUqlbcHcvCoM2KRZgYwZXUrdu781j4WO5/5MCjYVRHBKvYFbBweIbFCLs6
jM2eY+sEClnIOzXDFjg+jOnLWWL0YhakNPLk1tOHEbxy66hpBQu30vYzJZ4P
ocR1S2oXg4WBVrnkVK1BrDVSpXX9YqHlyf3cydR+sOm1NwwHWeD6zMyjefUj
ZMg8p26IhVoVp6d2V/qxwD1KN2eUhcT1pdO+q/sx9k7I3m+SheTO9AOBPj9R
Ma+9drsAGxtam59X2f6AdYb3Xd/VbFQFL/2pe74Xig/WFfNJsbGl+PnIRq1e
dB8sWnRPmo2dYff7Nkn14ix3POaSLBtQcN8Zy+vBPqFLNerybNyIe/FA5WIP
JM5vl+ncwsZZqNK517/j8/zuqm3abJykNfVVRnXh7fYS/WodNo4uDtN7+agL
geYxTBNdNtwWOUxFXuzCxVLjzifH2FCrUngutK4Lcx8zJ1kGbGxTeov4d99w
8He5/CNTNkQWihYzazpR9z3RvfwBm9rfRNNV1nYgW8xz0blHbBwyNQj2ndeB
F/vMnw45saFSpLpqVdtX3IyVi17pysa9xymO3bZfsex85PtrXmx0xMz/F5vc
jlOkb5dwKBvi8V8aHinwwCmx3nPmHRtbl54x+HOKjcXTHVe709lYEPKp0kOR
Dc1tJ/xtMtkwVHmmpDuHjag3ahyfD1T72RTSI4UFY98pu6J8Nva9/77jjRAL
7add3ypUsnG9d2m5RWUrvvWFLp3uoOZ3rinZ0JaJ5XLz1b2+sWGrHTadocfE
3nMOxuLdbLyrchLYrcREXN25xM29bMg+uWk0QO1rVzJl9pkNsBHPEFgUZ0S9
F95Puls/xYay/xcdDX0GfggX8mKWcxDuaO0ZfY46Z6+7dkZUjIP+Gd7nTjRh
dJd4k/sKDh7+5t9zlN6EaYubpddWcsBZOm4fPNCIZV+kk9WkOYibrd3c49yI
Hfec7CsVOJjNPHVk5HIDPL4SosMEBwOvGqutDGqxaOKX7+W9HJANL6x+yNci
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
VMaf
            "]]},
          Annotation[#, "Charting`Private`Tag$7681#1"]& ]}, {}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.003110432498105149},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox["\" \"", FontSize -> 16, StripOnInput -> False], 
              TextForm]], "InlineText"], 
           Text[
            Style[" ", FontSize -> 16]]], TraditionalForm], None}, {
        None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-0.07832897429485854, 0.6783289742948586}, {
       0.0031104324981051485`, 10.458232286583394`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], "", ""},
    {
     GraphicsBox[{{
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {0.13636556135652042`,
             0.1818207484753606}}, {0.3, -1.1}}],
          
          Ellipsoid[{0.3, -1.1}, {{0.022957489288986367`, 
           0.020661740360087718`}, {0.020661740360087718`, 
           0.051654350900219276`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {0.2237377971657399, 
            0.2983170628876532}}, {0.3, -1.1}}],
          
          Ellipsoid[{0.3, -1.1}, {{0.06180074306244176, 
           0.05562066875619755}, {0.05562066875619755, 
           0.1390516718904938}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.34393543117714404`, 0.}, {
            0.30954188805942945`, 0.4127225174125727}}, {0.3, -1.1}}],
          
          Ellipsoid[{0.3, -1.1}, {{0.118291580819008, 0.10646242273710713`}, {
           0.10646242273710713`, 0.2661560568427677}}]]}}, {
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.05779814546515489, 
            0.}, {-0.06605449345999899, 0.11955795322331249`}}, {
            0.3199150971790507, -1.0384377639846631`}}],
          
          Ellipsoid[{0.3199150971790507, -1.0384377639846631`}, {{
           0.0033406256192112047`, -0.0038178272216281444`}, \
{-0.0038178272216281444`, 0.018657300285204827`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.09483061278814893, 0.}, {-0.1083769737213954,
             0.19616120684527547`}}, {
            0.3199150971790507, -1.0384377639846631`}}],
          
          Ellipsoid[{0.3199150971790507, -1.0384377639846631`}, {{
           0.008992845121775835, -0.01027745483012504}, {-0.01027745483012504,
            0.05022478750400298}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1311984264622552, 
            0.}, {-0.14993985590658557`, 0.2713895957683125}}, {
            0.3199150971790507, -1.0384377639846631`}}],
          
          Ellipsoid[{0.3199150971790507, -1.0384377639846631`}, {{
           0.01721302710617179, -0.01967187315892131}, {-0.01967187315892131, 
           0.09613427308057572}}]]}}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {None, None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {25, 8}},
      ImageSize->{250, 213},
      PlotRange->{{-0.07832897429485854, 
       0.6783289742948586}, {-1.6674934614422876`, -0.5325065385577126}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[10, 17], 0.5882352941176471], 
            NCache[
             Rational[164, 765], 0.21437908496732025`], 
            NCache[
             Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
           1.6], Opacity[1.], LineBox[CompressedData["
1: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
k6k=
            "]]},
          Annotation[#, "Charting`Private`Tag$2963#1"]& ]}, {}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[91, 255], 0.3568627450980392], 
            NCache[
             Rational[94, 255], 0.3686274509803922], 
            NCache[
             Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwt2Xk8VF/YAHBLC4lmqEQSRShLkajUuZVQaUGJlKUslSVZS2QXZUuSfc2a
pShLlkcKJaFsSSHLbLY7ZsbSz/Le9/2885l/vp9z7jlzznme5977Genrdwxt
eLiID8//fbn+WX0WdhSehUJeYb7uEw5I/GLd26fkWTh/2W0wNdABHdZ5a1xO
moXEZ3zBUx8dkPfu9MQVoVlQ0Nc6slPHEa3MeO6IEZgFPomIH8sXnNCqIDnV
ilWzsGbvg9EyzBnJeGzr6uedBTWeD3tX2zijkzdFPLgIT/dsassIc0Yh+itV
p7hn4b7AN3XodEb8m3qP/V7igEZAYUCi/V0klBNiwD3HAY/8IY+LBS5IOd6b
JTvLAfdVI1FpnS7o/GOX56c5HMjwSTyPllxQtJN53zMWB/iZHw75GrgiEY0D
VrtwDuxR+n5EeNkVbfk85nyGzoHJhas6G2+6I2mGdvTzfg5kHd6fcyjoHmLM
B9Xl/uJAiyEW/af2Hnq7tnGiqo8DU9dcU5fm7iE92ZOnBno5EDu0c6XS8T5y
tjzJI9fFgZVVhRs1LbxQfc9Jt8pWDlzfsmeXhpk3ejwWnNnylQP2h5XJO1O8
0UV2Y8fvFg40hHgfTx70RjSyjhL3Fw68beTUHLL1QRvO6lBONRLzv7Yx0fF6
iMw/6pj013JgQt9bUc/CD8n/CAmZrOHA7SxBxAjyQzNDTW9XqjmAOYXR+gv8
UMiyDlnmPQfKhpauvZ7zQ0UHdVscyjmg+cMgQfm5P1os0dVaLuZA0uuEev6h
AJSYrCclnc4BMrUqproqGNm6k8gn0jjAh/e0n6IGI7VzP7ltUjkgejk/TmVT
CGpdsRvJS+bA2j2F4qtcQtDy9Uc5exM4YOXdk/xX5RG6odCkiMVwIDIt7+Zs
TShSLD9x0CKIA3MLD4bYUuFoPlJgt38gB7RS51TyroSjRrtO8awADnyeyAtu
jg1H5mI3Fil+HNA+E0k+uy4CRXsHgJMPBzYdUg989C8CsY9/OPnQgwM7jE1a
zPAoVNt+1DDlJgeyr/xzubE1BolHyqR+tOPAYI1my9LRGOShv45Bt+UAe9Sh
rvd6DFL+0u1/wIYDrPqtQvqvYlBqg8ObdisO2GXXmh5Dz9DDd4kkHjMOmM0v
fql0jUVY0myb7Vmiv19LczP5BUo2/S0eoc+Bi6FT96SPvkDzog22ZWc4YGRp
ferz7RfodWzE8sopDhw61yOx8ukFko6UUU7Q4UCUibaPpE884vE3jPiKOHCp
OtU7YjEBfbQtPrNXlQPR6lnRzw+noM/HBnZq7+PArx8l/YqeKahNQmjx8l4O
WETVee0rS0E/fzgW+ioT5wsG9sGKqWjqqJJg+24O7JMWPmEvk4bERAvbHHdy
4PWjxICx2HR0pznf4NVGDnhVvNTiNGcit8w+BRDhwLu4f/46k5nIy4efp1OY
A8r28lK/hLNQkNqt0n8kDixmzP77Yp6FEtPkRU4LEu3nX57vXchCjZ65XbTV
HKjuldzFeyQbbZXPvrxrjg0xG7q/RPzLRTLfrs6cmmVDcZPc2X7ZPKTosjHC
kcMGia+Npk4GeUirJrDhLYsNDK4nobb5eejqhetKJ3A2kJuyX+ZfzUfJ97bz
WtKJ/popF9s7CpDEl4TihH42VE7ePnNhpgjJOBmcqv3FhsjMc0vr5YqRogj/
6FAfG7Zzp9RuvVqMtK7dE5P/yYaejSUi+5qL0VWmcVB5Fxs0w+CHTkYJShbb
eKXzGxukV+mM1ZW+RttuR64WrGfD658/a57Fl6K2PdGKksAGS3ENYcXqUuQ3
+dRIpY4NPyQjBhb/lKJh5+cZBjVsmOE6KnBKpgzleSYfiask+gtkCcaWlSHV
4AL37W/YsJN7yFLzz1ukl940ti+TDfWlA7Vj5hVowerz+hMZbLDwT/0jE1aB
Cna2qF1MJ8Zb0+2cU1aBBHO/+XuksuG8gcoJF/5K9KOoa1t1Ihsy7h78q15Z
ia5VD1/SfsYGnqdzSpU73iOXnuVG4yA2mH9bu5ukXIvKfCT1HAKJ8WZX7Iwt
axFb5miLfwAbXsCKMTWmFnm4+rQV+rFBq5iaw5ivRfdJiz08PmygVYuX+X2u
Q36nF6jF7mzYPX9LVeJwPYqsY/GvtWPDF7nXOfJrG1C7jUi4hC0bdlWMsc/K
NiCSoJqQqg2xPuGt51JPNKAYMxfhazfYsP+V9GC9XwN6Po+Ll1mw4bR76Wvh
pQaUrDq1x8KE6G8gTRJZ/ojyc2hnK06xYfrD44H+HU1oQjQ65rceG6oydu+/
pN2E9oZp9HITzp9W0F+waUKV9iGW+jpsyKtba9eQ34Sa9sq4/j3OhhRr8aar
as1o+L1FvIAWG0xflev3nPuMxNt7hi2UifgpMSrkymtB5thDuWAlNujH1n/c
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
AZP/1sI=
            "]]},
          Annotation[#, "Charting`Private`Tag$9274#1"]& ]}, {}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1.6674934614422874`, 0.002073621665403438},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {25, 8}},
      ImageSize->{213, 213},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.6674934614422876`, -0.5325065385577126}, {
       0.0020736216654034375`, 4.42535165049037}},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}], ""},
    {
     GraphicsBox[{{
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1515172903961339, 0.}, {-0.4090966840695614, 
            0.1981345671107559}}, {0.3, -0.1}}],
          
          Ellipsoid[{0.3, -0.1}, {{
           0.022957489288986367`, -0.06198522108026318}, \
{-0.06198522108026318, 0.20661740360087716`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.2485975524063778, 0.}, {-0.67121339149722, 
            0.3250834825652867}}, {0.3, -0.1}}],
          
          Ellipsoid[{0.3, -0.1}, {{
           0.06180074306244176, -0.1668620062685927}, {-0.1668620062685927, 
           0.5562066875619754}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.34393543117714404`, 
            0.}, {-0.9286256641782887, 0.44975393628127724`}}, {0.3, -0.1}}],
          
          Ellipsoid[{0.3, -0.1}, {{
           0.118291580819008, -0.3193872682113215}, {-0.3193872682113215, 
           1.064624227371071}}]]}}, {
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.05779814546515489, 0.}, {-0.0716590093067608,
             0.17073550527958536`}}, {
            0.3199150971790507, -0.18891947899914568`}}],
          
          Ellipsoid[{0.3199150971790507, -0.18891947899914568`}, {{
           0.0033406256192112047`, -0.004141757843801049}, \
{-0.004141757843801049, 0.03428562637790175}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.09483061278814893, 
            0.}, {-0.11757241879756537`, 0.2801292750840674}}, {
            0.3199150971790507, -0.18891947899914568`}}],
          
          Ellipsoid[{0.3199150971790507, -0.18891947899914568`}, {{
           0.008992845121775835, -0.011149464521558005`}, \
{-0.011149464521558005`, 0.09229568442103521}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1311984264622552, 
            0.}, {-0.16266178070642573`, 0.3875596604985228}}, {
            0.3199150971790507, -0.18891947899914568`}}],
          
          Ellipsoid[{0.3199150971790507, -0.18891947899914568`}, {{
           0.01721302710617179, -0.02134096967423148}, {-0.02134096967423148, 
           0.17666134534831562`}}]]}}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(m\\)]\\)\"", 
               FontSize -> 16, StripOnInput -> False], TextForm]], 
            "InlineText"], 
           Text[
            Style[
            "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", FontSize -> 
             16]]], TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{62, 8}, {50, 8}},
      ImageSize->{250, 238},
      PlotRange->{{-0.07832897429485854, 
       0.6783289742948586}, {-1.2349869228845753`, 1.0349869228845752`}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.22727593559420073`, 
            0.}, {-0.3636414969507212, 0.27273112271304095`}}, {-1.1, -0.1}}],
          
          
          Ellipsoid[{-1.1, -0.1}, {{
           0.051654350900219276`, -0.08264696144035084}, \
{-0.08264696144035084, 0.20661740360087716`}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.3728963286095665, 0.}, {-0.5966341257753065, 
            0.44747559433147993`}}, {-1.1, -0.1}}],
          
          Ellipsoid[{-1.1, -0.1}, {{
           0.1390516718904938, -0.2224826750247901}, {-0.2224826750247901, 
           0.5562066875619754}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[RGBColor[
          NCache[
           Rational[10, 17], 0.5882352941176471], 
          NCache[
           Rational[164, 765], 0.21437908496732025`], 
          NCache[
           Rational[122, 765], 0.15947712418300652`]]], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.5159031467657158, 0.}, {-0.8254450348251453, 
            0.6190837761188591}}, {-1.1, -0.1}}],
          
          Ellipsoid[{-1.1, -0.1}, {{
           0.2661560568427677, -0.42584969094842834`}, {-0.42584969094842834`,
            1.064624227371071}}]]}}, {
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.1365917284655437, 0.}, {-0.06161996665737016,
             0.17460986824073357`}}, {-1.0384377639846631`, \
-0.18891947899914568`}}],
          
          Ellipsoid[{-1.0384377639846631`, -0.18891947899914568`}, {{
           0.018657300285204827`, -0.008416777753719362}, \
{-0.008416777753719362, 0.03428562637790175}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.22410887421965908`, 
            0.}, {-0.10110115387052682`, 
            0.2864860225335318}}, {-1.0384377639846631`, \
-0.18891947899914568`}}],
          
          Ellipsoid[{-1.0384377639846631`, -0.18891947899914568`}, {{
           0.05022478750400298, -0.022657665776232294`}, \
{-0.022657665776232294`, 0.09229568442103521}}]]}, 
        {GrayLevel[0], Opacity[0], EdgeForm[{RGBColor[
          NCache[
           Rational[91, 255], 0.3568627450980392], 
          NCache[
           Rational[94, 255], 0.3686274509803922], 
          NCache[
           Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
         Dashing[{Small, Small}]}], 
         InterpretationBox[
          GeometricTransformationBox[
           DiskBox[{0, 0}], {{{0.31005527423441087`, 
            0.}, {-0.13987373814575957`, 
            0.39635423893967264`}}, {-1.0384377639846631`, \
-0.18891947899914568`}}],
          
          Ellipsoid[{-1.0384377639846631`, -0.18891947899914568`}, {{
           0.09613427308057572, -0.04336859023897566}, {-0.04336859023897566, 
           0.17666134534831562`}}]]}}},
      AspectRatio->1,
      Axes->False,
      Frame->True,
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(0\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      PlotRange->{{-1.6674934614422876`, -0.5325065385577126}, \
{-1.2349869228845753`, 1.0349869228845752`}},
      PlotRangePadding->None,
      RotateLabel->True], 
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[10, 17], 0.5882352941176471], 
            NCache[
             Rational[164, 765], 0.21437908496732025`], 
            NCache[
             Rational[122, 765], 0.15947712418300652`]], AbsoluteThickness[
           1.6], Opacity[1.], LineBox[CompressedData["
1:eJw12Xc4ll/4AHCJSgOFlFQko6xsUu4QbdmKZAtlZSQre5PMMrKz957HHi+Z
kVH2Hq/XOxDf9Ht/v+v6Pdfzz+c6fzznPOc+930/18NuaK1qQklBvij/76ao
wb744tlMQJlUsdyl/ykD77Hx6ExEQD/y5J/ScKhAArtWxPc6ApLbDZopfKAC
7uoqwecrCYiboa8AF6sCsjUKbsW5BLTC+fuwqqQqdPoKGMxEEdCUOqnpcqAa
SCXl6h6NIKCnfdNUHWVqkFPFo83/kYDcbtv2dU6rQcjaFbX3gQS04+uWNSml
Dk9VmBVOuxPQQmankSlOHUZYKa7JviIgrFuln6e1JtwTd+N8ZUxAELg+w5Gi
CVVP99hDDQjohRDrX94hTYjzIrKM6RDQ7cufLWwktUB3efmkrTIBebLq8kwd
fQbzpQO4ZCkCWl07aktR+xwID9OqKE4SkEdoofrOO12YZPrwZOUYAVE7UHyW
qdeFzmnt2QFqAprAOCiyHn4JXx3PnEz7h0dN8y+8k8JfwsNUTz0FAh6JPcPI
LpboQeofvSNB43hUviDR2XjcAEJbpePf/sQj6cuGbHrCBuD0kfmGzg88umir
rK+qbQBKnH3P+XrxSLPyOc/NXAPYU5bJ723Co5x3DifYVQxBNYtVnSEbj7DC
booz+UZw2253eT8Dj2ocuDQvThgBj8wPt/lUPArZkKOvPmYMB0PBmeUJeJTn
taFzxsQYcv7t7WmF49Hrr1vO+ldM4JDWWErCOzya1lKkoS8yhSLqmE1ORTya
Uw6i4LpoAZMfE7bl5PEonE58cUnNAk6wpP3Vu4NHPsevUDEEW4CpQNGJuJt4
JB5kUZu5ZwEXtTDctIJ4JNcqyTg1+RqCsg70tpnx6Iu6D+KpswTjR6/621e2
kOVClH79kg1EDFv+nFvcQl0d078sjtsC0rOfpJjfQiQRSYXn/LbAYu+5fnNy
C30Qdgncs7OFgYT4Y4WDW+hWh/x3baq3IIPtuxNbu4X0PfkSCEJ2wPxJsvhV
6Ba6+EKSsbjFAXDDnBKRQVvIjuBq6Yp1gE4WhvoGf7LdLt2OOu8ITukbnUxe
W8hirp4t18YRRitTp1sct5ATjeNd7yvv4PPkSXo2/S10JilF50G0E7DwzViN
Cm8h+8+WDUU1LoC36SUevrGFGL+otf3bdAFMea2zIP8W+pfm8SGX0xWcIcbP
j3sL0eIW7lyIcIVx1UdfRVm3EHWyoM9razeIf1/+PZx6Cx1hepP35NYHYO0I
5HswikN/VUz+fv7kCVb1ww8lhnHIm73mmXm5JzSWsptzDuKQ9t8KM5cxTzBO
rs441INDfDuU902veEH++5VLNQiHkrWPBRlWeoEM34PTvJk4NHZk7UAV6w36
n45tn3T8Xz96finSD0r81Rn33+KQQ7Pngz/ID6jck4VXrHHIVVbzD8eGH2RZ
SFq3mePQv+Dnbhb3/WFL3mzZTReH6tZMXLsoA8Bru2McexeH6OYOP7/lHwjp
Ov6onwGHbPlYtV0GQ0Dq9MFTAj0OWXFgjgYcCYXedvtpJlocona0e7h8MxR2
hAwP6RzDobSqTPWM9FCIonf2w/zZRLKiwv8uuobBjPlCKKF7E53iTkmsvBgO
zqx1CQo2m6giSqjD4t8nSPfPrg+y2ES4xzIprJcj4Ds+ZrLPeBOJHjnZ808m
Ati6bNm0n2+irlx6Rp0PEdDhwJ1uJbeJNBkxLm8oI4GxLyI3lnETiY0O/hY5
EwX5nuY1K1VYZLrC3nddOwYwTxlPlpVgUbTIOZpG7xhYvoh03fOwaMCmi/1L
fgxcrWE8xJCMRfL3y3TOUcZCHB7du+WPRdSysKdeEAsBRmeHwzSwiLXAR+Ic
4xcwVmjZFMFvoL8C7kaGzAngxWAle7C2gWKC1uiuP0yA5JlzkZ0LG6gWS4qX
dUuACTcrcd2xDSRW+XnZYD4BVCvOu/k1bqD2xl23txWJANw2x8fCNlCLnCWB
3yIJWGgucrrzbqCv6dZlToEpEPI42t6EcwMJyKllFWamwL+Pp1ofX95APFy/
PjC0p8D82QPDCwwbKHmoLM/wcCoUXp1KrtpbR6rVEl1XPVLh7p0UVkLXOhIX
Sp4y9UoDq3ecjGZm6yhX6Le4fm4GTNckGj01XEcXuc5rJfRlgNoBU6n4i3V0
/Ted6EliBkj6HlGlVl5HjK1njwXc/gaHI5c+pkqso286c9rbg9/gc0H2id9H
1lGyNQ/n9NEsaF7gP6yasYauSGJUvOJzoCZzXzw1aQ1xjVpFNrTkQIl5lwX+
yxrqMvS6KbCeA6kbxoMRYWsopB7jlnU7F7xI8SlD79aQMf1fGdq5XJClPn5H
4+EaaqTNuICRyIfGq4uuzzZXEWVWs5QQdRFULZYWZa2sIkuWupMVrEVQlOU5
vzu3irwVaCq1RIsgme/i4y+jq8hvQ3V3y6gIPETVL4w3rSIJReYDn9YiuHO3
uVonahUZVg0USgcXAzL6uv1SahWNRmcUpwiWQl7ANR1RkVXUK2VyUf5JKXzO
L0M0/Kvoz/nJ+8dfl4LNDiagjG0VOevomhzPLAW24B2W48dW0f0BGcNhtjLw
KFGG8pEV9KGDtFB6oRxkDx0OOGG/gjz62t99EKwEAa6w9WnLFfSgOPYGi2ol
sDw6r1LxagUN5tvMTNpXAj5KkMVAZwXtRJiVLNZUQirPi7wKuRXU3CbRQrhf
BZTK5f0Gp1cQ1YNLnOyW1dDy9dX5qoJlNPOHl7dspBZE5e4bbmcto/2n6D3H
f7XwbYEnVzRtGf301ztUy14HAXyrt4pjl1HPs7fcRpZ1oFTzRj/HYxmVZS42
xB2ph/Fh28wE1WVkF3zco+FOA+BOuop5bi8hXS+VxvsWjcDqEq7yUGYJBcTW
Dh2+0wKzkTKfMySXUPXALYdCrRbIylufpBBZQp6Rls621i0gNnn/TSX3EkrR
+zshmdQCSrKH/K+eXkIW7sECI/9awPPo27qDuUVUYRLmq97WCouRatylgYso
N8naINugHYryzv69MLyAgieHBkZmusCCx8v+v94F9KycZmbzEAY40zfWfnUu
oBKmVVauKxiIi28dT6xbQCrs1HKrhhjwCXpbdTl9AS2Zbj4dXMCAllmvHYfd
ArpRr5h4basbDjj8Vq+fXkD6VCVTNy71wqN40k+pJ/NoP6NKOdJ8AIKiK0S8
782jmQjPQ/SuA4D5+O5jj+w8CtmivxAXNgAPff4o6onPo+KhopCR0gF4YPm3
3OfyPPpopuKDOxiAe0Ad1bc1h+IbiK+zYwdBfo5R2SRmDv3jVfUQGhoCaV7R
zvCpWfT6kvBj97cjIOzUvSSiNoN4kkX6ln78gi5RDxJfwhSa+pCmHro7A6O1
PIrG7b/Q14M7dk+iFoBU50USKR1DlbdPcvzLW4F6ioQ+hx8jaNa9c/a35wZE
NZgeU64aQtMlD0rWqnEg9mP+zfm8IfRxLDzkURMORlYMB2aThpCVWeyvzE4c
nGfSi3PwH0JKpoNI4ycOvr7W4ovXHEISbphGXyIOMs/dV14kDqKL129cviGw
BTVvr312FRpES4QlYeevWzDNtc6dndOP1HgsDz20xUOIFJPG3aR+VOaSOML+
Dg+Sj2W8piL7UfPdXUqSKx7CbcN/Mbn1I/PCuYehAXiAOtFPXk/7Uci2/H8+
SXiQTtsjVi73offChUwhPXio2GWNu+jai/Sdaw2GrhCA9pI1Uc2kF40aNn86
wUMAE/kmpSClXnQi+ZWlDD8BGMNMDu+w9aIQPBtDlAQB7DgK3vS3fUeWhIdB
B48IcEMJwJvuO7rpNtjWbUeA3DSD+eXUbjRveUWTExHgh3r2IdGgbqT9WOPD
8VYC/Ee9demDbTfK1HArWO4kwGMzj+dMd7pRRWPp0fBBAqzzJfXK/sag7vs+
R4IWCCBQ8asqjhmDkpL81bmOE0Hz1dWRhYMu9O+bjPQXWiK4n3tDuLHYhW4E
v+6jYiBCr/M+f0dZF6J6xrTWdoEI1sCSRlDpQqHqWN1NPiIUdWqFPg7pRK5b
4Q3jT4gw+j4pJ9auE7VI6zKNqBCBgnepY1a7Ex3YnOjq0iCCcqgj5ftrnSjX
6ZRonC4RtlSi32W0d6Cpc0HRk2+IIDwxaHBA0YFuhXAFbQUSoWzjiXiRQxsa
RDoCVxqIgP+8Nv/1ZRvyjVI42GgkguDdwMjQe23oxPKbopIWIuTEteIszreh
S9NFhVxdREi+J53LWd+KIp+rdVUNESE4hYctnqoVDXi47XstEaHzcXtv4EYL
uphRmDixQoQju0ZuTiMt6GqY9TbfOhE8lJLGNbJakMvxsqZqHBEc95mi6R+3
oK+Pal1c/hDBUOPwcb/IZnQGa+CcSEOCZIqUKnvXZuRFG/bG4wQJfufKvDIy
aUZDpiJbOqdI8IzSufWORDOiUiBl/0dPAqVCnPv+eBOqk9BPm2cmQYh2GP9q
SxMqS79GCD5Pgi5qvl+jeU0odkq5nfcCCe6+eCVV4d6EypebNtUvkUCKZpJg
c6UJhf7lZ3tylQSOZS6peieaUP9Evk4VJwnK9M6rKBEbkd0hq1Os3CQQrFAv
4G1vRD101d97rpGA06jbbNG8EfHe9PkyJEACQ1pz5mHVRhT55+dLyhvk9VQf
aW+RbkTsd1Q/XhMiwQV6OY6UU43oQ2MHn4EICdidbWsrDRHK7/8l6SBBnp/L
uaNuYgg9ORMWYChJAlNXpCp3DCETawG/+1IkyHE/tdqT34D2PAL8D26SoOdD
mViERwNSF3AJ7JUmAdZDx1NLrQFtr/WKxd4igYh39rnZ3XpUfF4v6IwMCTR9
lI0zu+tRxtPTQm1kO/nuFL75Wo/krtJ/sAES1Pkr3NuRr0eCh0Roi++QYDJg
PaLubD2i6qBRUpQlAUVQ5KTnSh3qy4oQ/kG2QsiMw8mPdcjopv3SmBwJzEID
mgYM6pBdS12FijwJgsIET8WK1qHfrLE8zWTnfRx59uJoHQpQC7vFe5cEveFu
6ezjtUibVQwfQjbu01XcYl4t2vzB+WCJ7DOR3dJ5H2qRig+l7E0FEohGvfW3
Va1FERP2Y75ka0WfHxLnrEUW4gJnMGQ7xzRe+m+nBlXHL60eUSRBQuwriyZM
DTrWYGB0i+yGz7QVfonkDn3f2MWC7Okv5Yce29QgD/0m4U9kU8a/eHJavgaF
pSkFFpF9NeHwlxGmGvTftXX3TrIVE3Pm45erEZ7ak2GMbPOvKjcMaqsRzc6+
4izZIUm7Llxh1cjcQu38PNkFyUkda/rVaMzZN2iS7P4URYZikWrUjIuNGyAb
n7rx0vFINeKU+/ygnmzG9Kgc6bEq5B8RH5tCtniG9DZFXhVqK2nwcSf72bdZ
2Xb3KrTGxnVanWyXzMDQYJUqhD16cOsK2V+zbowpX61ChuB8bIX8Phqzf149
u1OJ2B6N2GWRPZvjbjPRVYkmtTU+6JNNlcdZl5xQieoeyPGeJpsrv+eoqXUl
akzcfFdDfv/3C+zUeOUq0SP/SpMXZIcWNa2WL1UgKz4uriDyfhYVm4m71FSg
+pjMP0xkD5bQed0JrUDe+F3rOHI8nC3XPd8tXIHWTjDdCyXHi2QFlUk4dQW6
UrCTtU+OL+3K3CKN0XJ0mma80JDspOo/96bdyhFjDXshCzkem2uSIzOUy9GD
k7+yXpPjdb723pQFRzniOXXnYfltEvA0RDuSOstQzgqlvzA53oubhTKOM5ah
uDbafz/I58d+osXxz2wpOnn/B/tP8vmSJGrcXy4uRWt9uZn94uR44HRea3ta
inJSv85ki5IAE9As5BlcgrIsb4uSBMnrTVE/bKNdgmTKCFEl5POtXLP44+W1
EuR0e8noFT8Jfq4dd7rVUYySumZUK6+T56ek1rBDWYzufl5Lw5HzSearhY+L
A0Xo2W+aDHMOElh4vDMYTi5CzBeuXxlnJ8FWcTxVqUwRKiOd/ZxCzkf71zqj
fxELkNmCZQ6GnM8EKlYKuuZy0RTNxn3/Y+R8tHRKNdMzF305PEz1/ggJpM8L
k3wu5yIn7x09Qyryfrk6S9/RyUGNbRcOLlCQwEDuRGfFYBba99Dl4N0hQlQv
30xaUwb6XMjpXjtHBBYKFR9PvQzEkz5sxzNDhBQhB269v+koYfGPWOgkEQqi
6i1ZpNKR/Td5PpkxInRoK+2FF6Wixxz20jK9RCB8n+L6TyYJSfXfG62uINeP
Q6M7Q/5f0f6MLON4KTm/i/V35vYnIqv4VzqEIiL0JzRa6BgmoNBeQ+bTuUTI
e51SUOP7BZnd+Jnw5ysRTGiMxN/3RCKJ0Ps5nr7k5wf2BK+XeqCwBPYYX3J9
lJx9ryMZ7I7+auwmfn9ABKZi7aTYAhckFgyX6RTJ9VaJlVuT5IDswuMT3WWI
4MkIlt+oTdCOyMMdOkEiVPwtVTdpNQPh4Ijkf+R6HRjAJX75bCj85DJjuIEh
9xfGv4050sLAKcJGQ6mNAH2XMV0M58JBZ9gyxKSRAM/3PXaZMz5BjWwxzr2C
AFYlWA02FAW3HH9JvEwlQCwbhl6IEAeMFpJUP5wI4OB+Rz47Pw1c6O6e62Qj
gHG+y4uF40VAV5TQIfcSDwKTi4RE6SLI5n9SgtXCwy6tarDmmyIQ9xl5Ha1C
7rdseGo6vhdBwAjjq6G7eCgTGWbOCS8GvQ2XO2d48XC4RmDI6mwpdDfUJ6Rs
b0Fq+8yDXfYKuH7h/GfJoC2YmroncUKqDizC2C1/p+NgzDtYpAzTAqGkE+Gb
BRuQwUFPW0Logg6+88MTEStwSeZsZHdpH8SHpeyN1y/AsKdahl3uIHz5yymJ
uToLIRYWV8xrhuGgYsuTguU3xNM3269HjcK5BtYoL66f8DA7nO1xyiik0Llw
vqP9CXuyej25+aNgPuPB5bI9Atp2/3G8bh+Fwu9VfsXtI8AyIj60sjMKGwry
nKOvRsj9fq7QkvYYeH/fqKHLH4Y4rmjsDNs4/IcdL7wp/wPibpmZ/cybAKOd
Yo+erwNwZzT4kUnVBNC9lWw5FDIAC3aFAoSWCUhpMq27+34AbuRuE2knJmCt
TKGXoDYAbed9PRVpfsHb+d9PtmkGALedEldu8gt+Xt51D3bqB4XiiZ7IS7+B
NRBz5QfqBRznUyHl8EnwUbPXGsnHwPrIz3Pp8ZNQOjL6JPojBpb89Sl2v03C
EEf7S0tbDEyu2PYl1U/Cw+9bxWZiGOjJj7LcXJ0ESoc6heCGLsgSG88OU5gC
/8BcvvfDnaCvYHLl+94UHB68tl7H1AEC+9s+9IenwVza8snHvXbIU6t1qjk2
DS8EMJXvp9ohk+quPi3jNFi9LPKMyW6Hr6YaghXXp2Hok9IvrEw7hFx3+k79
bBq4AiXPnLFqA7OSepqMkmnwtLrIPPG7BfCZrT1dVdPwLzXbMqylBVwSuz9i
G6Yh7ra3/4vsFggLGGOS7J6GLIrOnvsOLVD+ksTePTcN4v4C9Pq0LUB5gv/m
FuMMuOtJzrkqNEOCUYLF7Xcz4F2a7nCsoxG4nqfxG7rNgOiJst2dwkYoVMrB
+XnPAK1dmjHFl0Zolqpy7P84A5njlNU6rxthhe6Hl1HWDLSfIXy9eboRxOtO
xAeOzUDX74ybzC0NMMDo0j0sPQv51tGBTDx1MBLMl/NJdhaSYz5pJFLWwTjl
ZMCTe7PQJlB86snvWpjF3VFsU52FWYe+nxyRtUDsOdJUZj4LXWbSy7kUtXDW
N6IiMnYWMsI3gmjnqkGHlJ2iQpiFSNF9VYPWStB/o+Nx6s8sfHk9klCSVgnG
cyf1ug5moTw52p7HuxLeDFizyh6fg/oCZgNPuUpwzxeLvcE+B7niCmILzRWQ
bNIUQvd0DgZX9Cl0MeWwMDz67nvOHFwb0xhVIpTC9koPJ1XxHCzkXuJP/lEK
Rw4ah25WzoEjfsT6XEUpcHFlC2a1zEHXZQMxt/elYOr4fsnrF3m8ceMvA2Up
LJ9l0ZKknQcb5jz3ZywlsK6lI55mOw9WNvy6SqZF8N/rp/Nj7+Zhb6v8uvTj
IjjpIR9B7z4PznGJ6Q+Fi4A/ixfrFjQPJG4KwdS/hWC1u5/xLG0eflXQpeGE
C2HzcwIT7fA8REhzEzhz8gE/9pvoJLkAzHI9PJxdOZDvRJURIbMA/Iv6atuJ
OWDGzKuRd3cBtq9QWlHa5cCUulP5lPICMHGbemIu5kBP3xlHRfMFOPXWM4DB
MRu+td3bYYhbgHgZrWJ1oSzQKS7+U7C/ALMq+Zzb/RlwVnk0u/PQIhhu1QqU
5GXAIPbg+ezRRei/mNWbEpAB9/ke1zAxLkLI7YNNFtkMEM9cdHblW4TyxRNB
VmXpQJ944b8HuovQeqiSwSI9DVoDfA/mGxaBXUJaRCgrBfayNDHRrYsQWbNK
vx+cAje6uGMUMYuQZCk9s2adAgk0GP6s4UUI4HtRKCuZAvZBtLqv1xcB5zbz
shqTDBwhsbVb55dASutkstlGEnh9zHY6sF+CaGO2FpuhBKgqdL5b6LwE/Wn9
QmzpCYDte0Sv77EEITW8DxkcEkCbHpvZFLwE53rVoYU5AYQ/Cf/0SV2CtbsS
dbL68TAbUSt2on8JwuMCWx3+fgHZmO94Zt5lsDkexJ5nGgteajOh8kLL8Nqt
UWdDOhZa6Uk81hLLIP696Yrd6Vi4H8yq1y6/DBjicezD+hhQ9njdbf9iGWZ1
a3PZz8XASwua9IHQZTBNDNW9NB4FrjIKGsG4Zegpnji0FxIBDfvPcBXby6DP
MLDAYREBFNVvgmf/WwbLpIVM/3sR4C0S1SRFswLKpt989ykjIIhnjn+ZfQWS
DSIIwa6f4MsZzyMKaiuQ7fj24LhzOFQs1lUelK+ANdZTd1wyFN5yulg11a4A
9YYsTowqFASNpTh9mlbgUd7T3YW+EMiaKY+g+b4Ctt0zibJmIRD3q8CScX4F
xBgF+8YTgsF9MJnj+plV0D4Z1inMFASKDT4fNaxW4Yl1npcH+APlXznFc/ar
wCijxB/N6A9I+tDf8ferIBVFGsKt+IFktZuFvu8qfAkP93aJ9oPrZY4KrxNW
gX0ryn9o0xdoc8z2PTCrsHv7r7FksQ/8jH78Ko9rDUQ17YJvG3uBjN5tNlW+
NbhQ5+7HKecF33gExnaE1sC8wtdakc0LHGvpHsnfXgOnGzPNQr89gXFmUGBc
bQ00OQf8Mp57gjLf8+2jnmvgNU7rUPvCAzDNJr5GE2vggnV9f4TBDYRDNGVo
ZtZg3NKCb2bCFb5o3NspWFyDnw94w1gyXMFsmcd8b2sNDnmc4s6UdIWjtOuP
Px1bh209PtVzxi5w9/lbRiS2DnvdGuMz3e+hftM9jSV8HQxjSu9bTTjCDc0S
XumYdUgNeH/qWa4jpNctlOokrMM3PeJQoosjBAU+bk3IWod7Q9i9mxcd4RkH
y8KlpnWI/8iNzzF2AKJmORcHfh12zdUUJw/bg1n9coH87jow35ZWkR2zgwkO
Vgnjg3WoDxY7vVNgB804r3sZxzegezvw/TMdOwgPUjbj5tgA6+i12LnKt8DX
sJbNq04el5vdS/1gC8lXLws/1t6AVu67/rjntsAQrFrzRn8DbuL17gWI2sKe
VjUm/80GUDBS60at2kDnlt+aoO8GhGSwT9Fr24Ax5xV+0YoNeLEcqKUTYgXx
Ic+Kbp3DwrzvH/6XSRYQZC+uTryIhRCR/K0oMwtwesG4m8uBhSjWM9dEhC1A
na8fLghiYdfxnVRauzmc7LnX90cBCwSbo9RANAP3ExLYCjsshB9ViBgweAVv
CIwRVu+xcDXx2w9BoVegPYEX4/qAhZR6PsY1ilcgnlvgFh2EhTvDI6ccU0xh
8yHXKfsULDkPrZf1LJqAfhATn1AfFkRsFWm3PY1B6S2hb/kHFrzxY3oTmsZw
S3vALnkcC2f1OTgY+Yzh3PXQWrpFLIxFfapx+2kEA11Uj7D/YcGqQ9edXdgI
5GiI5rnXN2GqbzP1xrYBXA0YzOT024RBIxp3n9d6MB1s7OMfsgnOJ7tGH7Dp
kfd1W38lYhOaRiqKy4dfwplYFpb8pE3Y0eXNdZF7CYe+GYaIVm8CzTWZkQQO
XZhswdvIr29CFeUKO+thHYjr8HmSgd8E8QHvwyVN2qDRffb60T+b0Dc8Gzvu
oQ2m5om2C5Q4mE28LjRFoQ2TNk3Xs+lwoKnCczjm6HPo+UCTeOMaDgT+UFYg
AS3I8VQNNuDDwZybjOofkiYEeMe/jxDEgegD8mdAvSbI+/NrEsVwMM2M8JlK
mlATpkJXJYcD7truCCtHDchO/OIJL3DgJ+UXH/NLDfySZq1t9HAgv5ou8CpX
DYxTeF+mGOKARZCSkOWsBmwZ9TcPm+PASqpU25VFDT7nzRDaHXCwJGjB+EBP
FRwLrs/uOOEgjKMtMlBIFdSL7Pp5XHGw73/sqCiVKtCVUecHeeEgJsfkYUuO
CqyXK8XX+uLglTWn3jd3FcBUxgauB+DgZjTj1qaqCmRVT7+7GIIDBq4IriRu
FfCrvWaq9BEH//+//38A3bSiUg==
            "]]},
          Annotation[#, "Charting`Private`Tag$4556#1"]& ]}, {}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[
            NCache[
             Rational[91, 255], 0.3568627450980392], 
            NCache[
             Rational[94, 255], 0.3686274509803922], 
            NCache[
             Rational[166, 255], 0.6509803921568628]], Thickness[Large], 
           Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
XtuZ5cBpA3fas6M++lHg///3/w+H+PvO
            "]]},
          Annotation[#, "Charting`Private`Tag$10867#1"]& ]}, {}, {}}},
      AspectRatio->1,
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.0010368108327017207`},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {
         FormBox[
          InterpretationBox[
           Cell[
            BoxData[
             FormBox[
              StyleBox[
              "\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"", FontSize -> 
               16, StripOnInput -> False], TextForm]], "InlineText"], 
           Text[
            Style["\!\(\*SubscriptBox[\(w\), \(a\)]\)", FontSize -> 16]]], 
          TraditionalForm], None}},
      FrameStyle->10,
      FrameTicks->{{{}, {}}, {Automatic, {}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0,
      ImagePadding->{{25, 8}, {50, 8}},
      ImageSize->{213, 238},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-1.2349869228845753`, 1.0349869228845752`}, {
       0.0010368108327017205`, 3.264496018597956}},
      PlotRangeClipping->True,
      PlotRangePadding->{{None, None}, {None, None}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
  "Grid"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[44]:=",ExpressionUUID->"7175f664-ebdb-4d84-96f6-34fb23a21604"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "vecL", ",", "LMat", ",", "CLMat", ",", "chi2minfi", ",", "vecF", ",", 
     "FMat", ",", "CFMat", ",", "useFisher", ",", "comboLP"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->
  "(L3) In[51]:=",ExpressionUUID->"b2772f9d-e242-41ec-8b23-4112dd9a5924"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 Adjusting intervals using Fisher",
  FontColor->RGBColor[0, 0, 1]],
 " - can be skipped"
}], "Section",ExpressionUUID->"34c819e1-41c5-4d2d-acfa-07ea615f1f75"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["a Reducing grid intervals (intersection)",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Subsection",ExpressionUUID->"808ff4c1-\
0666-4720-aaca-9c46af822220"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nrisk", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "for", " ", "automatic", " ", "parameter", " ", "intervals", " ", "of", 
     " ", "vecF"}], " ", "\[PlusMinus]", " ", 
    RowBox[{"nrisk", " ", "sigma"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
      RowBox[{"redo", "\[Equal]", "0"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"redo", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridspo", "=", 
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"extremaF", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"extremaF", ",", 
           RowBox[{"auxex", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}]}], 
             "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"popo1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"vecF", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}], 
               "]"}], ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", "12"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"parnames", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Darker", "[", "Emerald", "]"}]}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "None"}], "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"popo2", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"CFMat", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}]}], ")"}], "^", 
                  RowBox[{"-", ".5"}]}]}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
              "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"popo", "[", "i", "]"}], "=", 
          RowBox[{"Show", "[", 
           RowBox[{"popo1", ",", "popo2"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"GraphicsRow", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"popo", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Suggested nrisk-intervals (x-axes) and original intervals \
\>\"", ",", "16"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<(green areas)\>\"", ",", "16", ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
                 "]"}]}]}], "]"}]}], "}"}], "]"}]}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"-", ".2"}], "]"}]}]}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"this", " ", "updates", " ", "the", " ", "intervals"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntervalIntersection", "[", 
             RowBox[{
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"extremaF", ",", 
              RowBox[{"pSet", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
            "]"}]}], "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "following", " ", "makes", " ", "the", " ", "paremeter"}], 
    "-", 
    RowBox[{"space", " ", "grid"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ngrid", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMin", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMax", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ParSpaceTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pTabX", "[", 
        RowBox[{"i", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParSpaceTab", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"pTabX", "[", 
       RowBox[{"#", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], "&"}], 
     " ", "/@", 
     RowBox[{"Range", "[", "dpar", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"pSet", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"parnames", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
        "\"\<grid  -  updated parameter intervals\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[52]:=",ExpressionUUID->"bc043824-8b24-4e63-9b33-3b8d691ab905"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"min\"\>",
       HoldForm], 
      TagBox["\<\"max\"\>",
       HoldForm], 
      TagBox["\<\"grid  -  updated parameter intervals\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>",
       HoldForm], "0.1`", "0.5`", "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1.4`"}], 
      RowBox[{"-", "0.6`"}], "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1"}], "1", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(0\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(a\)]\)"}, {
      "min", "max", "grid  -  updated parameter intervals"}}]]]], "Output",
 CellLabel->
  "(L3) Out[56]//TableForm=",ExpressionUUID->"1e5c7491-1b05-457a-9df2-\
808235f0402f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["b Increasing grid intervals (union)",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Subsection",ExpressionUUID->"7f6b054d-\
1bf1-4b6c-a89f-3e1b15b95074"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nrisk", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "for", " ", "automatic", " ", "parameter", " ", "intervals", " ", "of", 
     " ", "vecF"}], " ", "\[PlusMinus]", " ", 
    RowBox[{"nrisk", " ", "sigma"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
      RowBox[{"incr", "\[Equal]", "0"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"incr", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridspo", "=", 
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"extremaF", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"extremaF", ",", 
           RowBox[{"auxex", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}]}], 
             "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"popo1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"vecF", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}], 
               "]"}], ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", "12"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"parnames", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Darker", "[", "Emerald", "]"}]}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "None"}], "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"popo2", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"CFMat", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}]}], ")"}], "^", 
                  RowBox[{"-", ".5"}]}]}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
              "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"popo", "[", "i", "]"}], "=", 
          RowBox[{"Show", "[", 
           RowBox[{"popo1", ",", "popo2"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"GraphicsRow", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"popo", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Suggested nrisk-intervals (x-axes) and original intervals \
\>\"", ",", "16"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<(green areas)\>\"", ",", "16", ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
                 "]"}]}]}], "]"}]}], "}"}], "]"}]}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"-", ".2"}], "]"}]}]}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"this", " ", "updates", " ", "the", " ", "intervals"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntervalUnion", "[", 
             RowBox[{
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Interval", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"extremaF", ",", 
              RowBox[{"pSet", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "}"}], 
            "]"}]}], "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "following", " ", "makes", " ", "the", " ", "paremeter"}], 
    "-", 
    RowBox[{"space", " ", "grid"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ngrid", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMin", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMax", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ParSpaceTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pTabX", "[", 
        RowBox[{"i", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParSpaceTab", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"pTabX", "[", 
       RowBox[{"#", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], "&"}], 
     " ", "/@", 
     RowBox[{"Range", "[", "dpar", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"pSet", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"parnames", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
        "\"\<grid  -  updated parameter intervals\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[57]:=",ExpressionUUID->"9bcc6932-bb35-463f-be63-3b393d93533c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"min\"\>",
       HoldForm], 
      TagBox["\<\"max\"\>",
       HoldForm], 
      TagBox["\<\"grid  -  updated parameter intervals\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>",
       HoldForm], "0.1`", "0.5`", "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1.4`"}], 
      RowBox[{"-", "0.6`"}], "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1"}], "1", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(0\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(a\)]\)"}, {
      "min", "max", "grid  -  updated parameter intervals"}}]]]], "Output",
 CellLabel->
  "(L3) Out[61]//TableForm=",ExpressionUUID->"148a151c-9337-457a-9c03-\
1cec5cc1e9b9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["c Adjusting grid intervals (Fisher only)",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Subsection",ExpressionUUID->"d4e21bdf-\
407a-479e-944e-4c95c97605ff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nrisk", "=", "5"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "for", " ", "automatic", " ", "parameter", " ", "intervals", " ", "of", 
     " ", "vecF"}], " ", "\[PlusMinus]", " ", 
    RowBox[{"nrisk", " ", "sigma"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
      RowBox[{"adju", "\[Equal]", "0"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"adju", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"gridspo", "=", 
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"extremaF", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"extremaF", ",", 
           RowBox[{"auxex", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}], 
              ",", 
              RowBox[{
               RowBox[{"vecF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", 
               RowBox[{"nrisk", " ", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}]}]}], 
             "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"popo1", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"vecF", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"CFMat", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "^", ".5"}]}], 
               "]"}], ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"auxex", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", "12"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"parnames", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"Darker", "[", "Emerald", "]"}]}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "None"}], "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"popo2", "=", 
          RowBox[{"Plot", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"gridspo", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", " ", "\[Pi]", " ", 
                    RowBox[{"CFMat", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}]}], ")"}], "^", 
                  RowBox[{"-", ".5"}]}]}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
            RowBox[{"FillingStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
              "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"popo", "[", "i", "]"}], "=", 
          RowBox[{"Show", "[", 
           RowBox[{"popo1", ",", "popo2"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"GraphicsRow", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"popo", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Suggested nrisk-intervals (x-axes) and original intervals \
\>\"", ",", "16"}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<(green areas)\>\"", ",", "16", ",", 
               RowBox[{"Background", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.15", "]"}], ",", "Emerald"}], 
                 "]"}]}]}], "]"}]}], "}"}], "]"}]}], ",", 
         RowBox[{"Spacings", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"-", ".2"}], "]"}]}]}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"this", " ", "updates", " ", "the", " ", "intervals"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pSet", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "=", "extremaF"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "following", " ", "makes", " ", "the", " ", "paremeter"}], 
    "-", 
    RowBox[{"space", " ", "grid"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ngrid", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMin", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
   RowBox[{"pMax", "=", 
    RowBox[{"pSet", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ParSpaceTab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pTabX", "[", 
        RowBox[{"i", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "dpar"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParSpaceTab", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"pTabX", "[", 
       RowBox[{"#", ",", "pMin", ",", "pMax", ",", "ngrid"}], "]"}], "&"}], 
     " ", "/@", 
     RowBox[{"Range", "[", "dpar", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"pSet", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"parnames", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<min\>\"", ",", "\"\<max\>\"", ",", 
        "\"\<grid  -  updated parameter intervals\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[62]:=",ExpressionUUID->"fa90cd18-0caf-4752-bbd4-5478e4c4facd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"min\"\>",
       HoldForm], 
      TagBox["\<\"max\"\>",
       HoldForm], 
      TagBox["\<\"grid  -  updated parameter intervals\"\>",
       HoldForm]},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \
\\(m\\)]\\)\"\>",
       HoldForm], "0.1`", "0.5`", "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(0\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1.4`"}], 
      RowBox[{"-", "0.6`"}], "40"},
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(w\\), \\(a\\)]\\)\"\>",
       HoldForm], 
      RowBox[{"-", "1"}], "1", "40"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{
      "\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(m\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(0\)]\)", 
       "\!\(\*SubscriptBox[\(w\), \(a\)]\)"}, {
      "min", "max", "grid  -  updated parameter intervals"}}]]]], "Output",
 CellLabel->
  "(L3) Out[66]//TableForm=",ExpressionUUID->"ad1a4f25-de06-498b-bb64-\
349197c6fdec"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["d Flat prior (re)normalization",
 FontColor->RGBColor[0.6, 0.4, 0.2]]], "Subsection",ExpressionUUID->"2651632b-\
f27e-49f2-acec-fa0e5c221d87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mvprior", "\[Equal]", "0"}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"normPrior", "=", 
      RowBox[{"(", 
       RowBox[{"Times", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Differences", ",", 
           RowBox[{"pSet", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}], 
         "]"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Prior", "[", 
       RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
      RowBox[{"1", "/", "normPrior"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"normalization", ",", " ", 
       RowBox[{"necessary", " ", "for", " ", "the", " ", "evidence"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"chi2P", "[", 
       RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"Prior", "[", "vec", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"step", " ", "function", " ", "for", " ", "prior"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"chi2minfi", "=", 
      RowBox[{"chi2", "[", "vecF", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}]], "Input",
 CellLabel->
  "(L3) In[67]:=",ExpressionUUID->"c3d7182a-d61e-4c8f-b4de-d96366f9417c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["6 n-Evidence",
  FontColor->RGBColor[0, 0, 1]],
 " - can be skipped"
}], "Section",ExpressionUUID->"26a50104-84f0-4360-b4f9-20899c453e30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nEvi", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"mvprior", "\[Equal]", "1"}], "&&", 
      RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
      RowBox[{"comboLP", "\[Equal]", "1"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FEvi", "=", 
       RowBox[{"Lmax", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"dpar", "/", "2"}], ")"}]}], 
        RowBox[{
         RowBox[{"Det", "[", "FMat", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NEvi", "=", 
       RowBox[{"NEvidence", "[", 
        RowBox[{"vecF", ",", "FMat", ",", "nEvi"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NFEvi", "=", 
       RowBox[{
        RowBox[{"PLike", "[", "vecF", "]"}], "/", 
        RowBox[{"PosteriorF", "[", "vecF", "]"}]}]}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mvprior", "\[Equal]", "1"}], "&&", 
      RowBox[{"useFisher", "\[Equal]", "1"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"see", " ", 
       RowBox[{"eq", ".", 
        RowBox[{"(", "14", ")"}]}], " ", "of", " ", 
       RowBox[{"arXiv", ":", "1209.1897"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FEvi", "=", 
       RowBox[{"Lmax", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Det", "[", "PMat", "]"}], "/", " ", 
           RowBox[{"Det", "[", "FMat", "]"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vecL", "-", "vecP"}], ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"LMat", ".", 
             RowBox[{"Inverse", "[", "FMat", "]"}], ".", "PMat"}], ")"}], ".", 
           RowBox[{"(", 
            RowBox[{"vecL", "-", "vecP"}], ")"}]}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NEvi", "=", 
       RowBox[{"NEvidence", "[", 
        RowBox[{"vecF", ",", "FMat", ",", "nEvi"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NFEvi", "=", 
       RowBox[{
        RowBox[{"PLike", "[", "vecF", "]"}], "/", 
        RowBox[{"PosteriorF", "[", "vecF", "]"}]}]}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{"useFisher", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FEvi", "=", 
       RowBox[{
        RowBox[{"1", "/", "normPrior"}], " ", "Lmax", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "\[Pi]"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"dpar", "/", "2"}], ")"}]}], 
        RowBox[{
         RowBox[{"Det", "[", "LMat", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NEvi", "=", " ", 
       RowBox[{"NEvidence", "[", 
        RowBox[{"vecL", ",", "LMat", ",", "nEvi"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NFEvi", "=", 
       RowBox[{
        RowBox[{"PLike", "[", "vecL", "]"}], "/", 
        RowBox[{"PosteriorF", "[", "vecL", "]"}]}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Fisher evidence: Log E=\>\"", ",", 
      RowBox[{"logFEvi", "=", 
       RowBox[{"Chop", "[", 
        RowBox[{"Log", "[", "FEvi", "]"}], "]"}]}]}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Numeric evidence: Log E=\>\"", ",", 
      RowBox[{"logNEvi", "=", 
       RowBox[{"Log", "[", "NEvi", "]"}]}], ",", 
      "\"\<  -  limiting the integration within the n-\[Sigma] Fisher \
ellipsoid\>\""}], "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<'Numeric' Fisher: Log E=\>\"", ",", 
      RowBox[{"logFNEvi", "=", 
       RowBox[{"Log", "[", "NFEvi", "]"}]}]}], "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
    RowBox[{"ToFileName", "[", 
     RowBox[{"\"\<results-chi2\>\"", ",", 
      RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
       RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"logNEvi", ",", "logFEvi"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellLabel->
  "(L3) In[68]:=",ExpressionUUID->"38ac59c1-bbf1-48b7-8047-f510821e4b02"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "\"Fisher evidence: Log E=\"",RowBox[{"-", "18.41717808425052`"}]},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[68]:=",ExpressionUUID->"f0b67c88-ca05-4755-9987-ef88772b2585"],

Cell[BoxData[
 TemplateBox[{
  "\"Numeric evidence: Log E=\"",RowBox[{"-", "18.467158525980224`"}],
   "\"  -  limiting the integration within the n-\[Sigma] Fisher ellipsoid\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[68]:=",ExpressionUUID->"77776637-0b73-4186-997b-2af836668820"],

Cell[BoxData[
 TemplateBox[{
  "\"'Numeric' Fisher: Log E=\"",RowBox[{"-", "18.41717808425052`"}]},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[68]:=",ExpressionUUID->"3d6b5459-19ed-4225-8b3b-f6e82281c976"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", "normalized", ")"}], " ", "posterior", " ", "distribution"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Posterior", "[", 
      RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"PLike", "[", "vec", "]"}], "/", "NEvi"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PosteriorF2", "[", 
      RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"PLike", "[", "vec", "]"}], "/", "FEvi"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Posterior", "[", "vecF", "]"}], ",", 
     RowBox[{"PosteriorF2", "[", "vecF", "]"}], ",", 
     RowBox[{"PosteriorF", "[", "vecF", "]"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Posterior", "[", "vecsol", "]"}], ",", 
     RowBox[{"PosteriorF2", "[", "vecsol", "]"}], ",", 
     RowBox[{"PosteriorF", "[", "vecsol", "]"}]}], "}"}]}]}]], "Input",
 CellLabel->
  "(L3) In[74]:=",ExpressionUUID->"afeea501-2e89-4297-b19c-78244eb6069d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "257.29573151268255`", ",", "244.7520574933838`", ",", 
   "244.75205749338372`"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[76]=",ExpressionUUID->"6c31e580-9364-4bca-984e-603bffadc944"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "25.524865971404196`", ",", "24.280478447953175`", ",", 
   "24.43074351310375`"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[77]=",ExpressionUUID->"786128d1-d448-4fa7-ae26-bc2530ba82d0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["7 chi2 table",
 FontColor->RGBColor[1, 0, 0]]], "Section",ExpressionUUID->"a4600738-056d-\
4cf4-b4cd-6b8baeb20217"],

Cell[CellGroupData[{

Cell["a Preparation", "Subsection",ExpressionUUID->"2617a760-982e-465c-b90b-518f050d264c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LaunchKernels", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ncompkern", "=", 
  RowBox[{"Length", "[", 
   RowBox[{"Kernels", "[", "]"}], "]"}]}]}], "Input",
 CellLabel->
  "(L3) In[78]:=",ExpressionUUID->"bc3fec40-2bd2-4447-bce7-c926a44fbde9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"5", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"6", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"7", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"8", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"9", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"10", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"11", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"12", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"13", ",", "\<\"local\"\>"}], "]"}], ",", 
   RowBox[{"\<\"KernelObject\"\>", "[", 
    RowBox[{"14", ",", "\<\"local\"\>"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[78]=",ExpressionUUID->"31c630b1-c61f-4b1b-881a-6754fafe9609"],

Cell[BoxData["10"], "Output",
 CellLabel->
  "(L3) Out[79]=",ExpressionUUID->"09b4e74c-60a4-4d54-8b06-e1d6063058f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nco", "=", "32"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "number", " ", "of", " ", "points", " ", "to", " ", "be", " ", "computed",
      " ", "in", " ", "order", " ", "to", " ", "estimate", " ", "total", " ", 
     "time"}], " ", "-", " ", 
    RowBox[{"not", " ", "working", " ", "well"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ere", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ere", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{".9", ",", "1.1"}], "}"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"AbsoluteTiming", "[", 
        RowBox[{
         RowBox[{"chi2", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"vecsol", " ", "ere"}], "]"}], "]"}], ";"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"{", "$KernelCount", "}"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"to", " ", "load", " ", "stuff"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{"auxte", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ere", "=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{".9", ",", "1.1"}], "}"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"AbsoluteTiming", "[", 
          RowBox[{
           RowBox[{"chi2", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"vecsol", " ", "ere"}], "]"}], "]"}], ";"}], "]"}], "[", 
         
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", "nco", "}"}]}], "]"}]}], ";"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tempo1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", "auxte", "]"}], "/", "$KernelCount"}], "/", 
     "nco"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"glevel", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "restricting", " ", "the", " ", "grid", " ", "to", " ", "within", " ", 
      "the", " ", "glevel"}], "-", 
     RowBox[{"\[Sigma]", " ", "Fisher", " ", "ellipsoid"}]}], ";", " ", 
    RowBox[{"0", " ", "for", " ", "a", " ", "full", " ", "exploration"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"useFisher", "\[Equal]", "1"}], "&&", 
     RowBox[{"glevel", "\[NotEqual]", "0"}]}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"alevel", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "/.", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CDF", "[", 
              RowBox[{
               RowBox[{"ChiSquareDistribution", "[", "dpar", "]"}], ",", 
               "x"}], "]"}], "==", 
             RowBox[{"v", "[", "glevel", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "10"}], "}"}]}], "]"}]}], ")"}], "^", ".5"}]}],
       ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"alevel", "=", 
      RowBox[{
       RowBox[{"levhi2", "[", 
        RowBox[{"dpar", ",", "glevel"}], "]"}], "^", 
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"chi2vecx", "[", "vec_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gtest", "[", 
           RowBox[{"vec", ",", "alevel", ",", "FMat", ",", "vecF"}], "]"}], 
          ",", 
          RowBox[{"chi2vec", "[", "vec", "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"vec", ",", 
            RowBox[{"{", 
             RowBox[{"chi2F", "[", "vec", "]"}], "}"}]}], "]"}]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"chi2x", "[", "vec_", "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"gtest", "[", 
         RowBox[{"vec", ",", "alevel", ",", "FMat", ",", "vecF"}], "]"}], ",", 
        RowBox[{"chi2", "[", "vec", "]"}], ",", 
        RowBox[{"chi2F", "[", "vec", "]"}]}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "using", " ", "Fisher", " ", "to", " ", "give", " ", "the", " ", 
       "right", " ", "order", " ", "of", " ", "magnitude"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{
          RowBox[{"ppTab", "=", 
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"btest", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"take", "[", 
                  RowBox[{"ParSpaceTab", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "i"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "alevel", ",", "FMat", 
                ",", "vecF"}], "]"}], ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Times", "@@", "ngrid"}]}], "}"}]}], "]"}]}], ";"}], 
         "]"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"tpoints", "=", 
         RowBox[{"Total", "[", "ppTab", "]"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"volume", " ", "glevel"}], "-", 
       RowBox[{
       "\[Sigma]", " ", "Fisher", " ", "ellipsoid", " ", "over", " ", "total",
         " ", "volume"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"volratio", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["\[Pi]", 
           RowBox[{"dpar", "/", "2"}]], 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"dpar", "/", "2"}], "+", "1"}], "]"}]], 
         RowBox[{"glevel", "^", "dpar"}], " ", 
         RowBox[{"Times", "@@", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Eigenvalues", "[", "CFMat", "]"}], "]"}]}]}], ")"}], "/", 
       
       RowBox[{"(", 
        RowBox[{"Times", "@@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Differences", "/@", 
           RowBox[{"pSet", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Volume reduction: \>\"", ",", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"1", "/", "volratio"}], ",", ".1"}], "]"}]}], "}"}], "]"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tpoints", "=", 
      RowBox[{"volratio", " ", 
       RowBox[{"Times", "@@", "ngrid"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime1", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Estimated wall-clock time: \>\"", ",", 
          RowBox[{"tpoints", " ", 
           RowBox[{"tempo1", "/", "60"}]}], ",", "\"\< min or \>\"", ",", 
          RowBox[{"tpoints", " ", 
           RowBox[{"tempo1", "/", 
            RowBox[{"60", "^", "2"}]}]}], ",", "\"\< hours\>\""}], "}"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Posterior exploration will end on \>\"", ",", 
         RowBox[{"DatePlus", "[", 
          RowBox[{"Quantity", "[", 
           RowBox[{
            RowBox[{"tpoints", " ", "tempo1"}], ",", "\"\<Seconds\>\""}], 
           "]"}], "]"}]}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime2", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Total number of points: \>\"", ",", 
          RowBox[{"Round", "[", "tpoints", "]"}], ",", "\"\< instead of \>\"",
           ",", 
          RowBox[{"Times", "@@", "ngrid"}]}], "}"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"chi2vecx", "[", "vec_", "]"}], ":=", 
       RowBox[{"chi2vec", "[", "vec", "]"}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"chi2x", "[", "vec_", "]"}], ":=", 
      RowBox[{"chi2", "[", "vec", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime1", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Estimated wall-clock time: \>\"", ",", 
          RowBox[{
           RowBox[{"Times", "@@", "ngrid"}], " ", 
           RowBox[{"tempo1", "/", "60"}]}], ",", "\"\< min or \>\"", ",", 
          RowBox[{
           RowBox[{"Times", "@@", "ngrid"}], " ", 
           RowBox[{"tempo1", "/", 
            RowBox[{"60", "^", "2"}]}]}], ",", "\"\< hours\>\""}], "}"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Posterior exploration will end on \>\"", ",", 
         RowBox[{"DatePlus", "[", 
          RowBox[{"Quantity", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Times", "@@", "ngrid"}], " ", "tempo1"}], ",", 
            "\"\<Seconds\>\""}], "]"}], "]"}]}], "}"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"estime2", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Total number of points: \>\"", ",", 
          RowBox[{"Times", "@@", "ngrid"}]}], "}"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ncompkern", ",", "estime1", ",", "estime2"}], "}"}]}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[80]:=",ExpressionUUID->"c211c595-ca14-4065-a8c9-fbb01301de53"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  "\"Estimated wall-clock time: \"","0.6789433333333333`","\" min or \"",
   "0.011315722222222224`","\" hours\""},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[80]:=",ExpressionUUID->"82027334-3219-4e14-a3f9-095e9fcaca2c"],

Cell[BoxData[
 TemplateBox[{"\"Posterior exploration will end on \"",TemplateBox[{
     RowBox[{"\"Fri 18 May 2018 13:48:20\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "3.`"}], NumberMarks -> False, StripOnInput -> 
           False]}], FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2018", ",", "5", ",", "18", ",", "13", ",", "48", ",", 
             "20.39539098739624`"}], "}"}], ",", "\"Instant\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "3.`"}]}], "]"}]}, "DateObject", Editable -> False]},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[80]:=",ExpressionUUID->"93ff5fb0-e953-4fa8-875f-59512ebd7f4c"],

Cell[BoxData[
 TemplateBox[{"\"Total number of points: \"","64000"},
  "RowDefault"]], "Print",
 CellLabel->
  "During evaluation of (L3) \
In[80]:=",ExpressionUUID->"b2e76932-3960-4abf-9afd-2e002da69432"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["b Computation", "Subsection",ExpressionUUID->"a92f7429-5c41-496c-9b36-2fe2da1919f8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{"DistributeDefinitions", "[", "\"\<Global`\>\"", "]"}], ";"}], 
   "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tta", " ", "=", " ", 
    RowBox[{"SessionTime", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"chi2Tab", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"chi2", "[", "#", "]"}], ")"}], "&"}], ",", 
       RowBox[{"Tuples", "[", "ParSpaceTab", "]"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"chi2Tab", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"chi2x", "[", 
      RowBox[{
       RowBox[{"take", "[", 
        RowBox[{"ParSpaceTab", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "i"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Times", "@@", "ngrid"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dtt", "=", 
    RowBox[{
     RowBox[{"SessionTime", "[", "]"}], "-", "tta"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "pronto", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Calculation ended on \>\"", ",", 
    RowBox[{"DateString", "[", "]"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"dtt", "/", 
       RowBox[{"60", "^", "2"}]}], ",", ".1"}], "]"}], ",", "\"\<h or \>\"", 
    ",", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"dtt", "/", "60"}], ",", ".1"}], "]"}], ",", 
    "\"\<m of total computation\>\""}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"dtt", "/", 
       RowBox[{"(", 
        RowBox[{"Times", "@@", "ngrid"}], ")"}]}], ",", ".001"}], "]"}], ",", 
    "\"\<s per grid point\>\""}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logrun", "=", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Calculation ended on \>\"", ",", 
      RowBox[{"DateString", "[", "]"}], ",", "\"\<  -  \>\"", ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"dtt", "/", 
         RowBox[{"60", "^", "2"}]}], ",", ".1"}], "]"}], ",", "\"\<h or \>\"",
       ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"dtt", "/", "60"}], ",", ".1"}], "]"}], ",", 
      "\"\<m of total computation  -  \>\"", ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"dtt", "/", 
         RowBox[{"(", 
          RowBox[{"Times", "@@", "ngrid"}], ")"}]}], ",", ".00001"}], "]"}], 
      ",", "\"\<s per grid point\>\""}], "}"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "(L3) In[88]:=",ExpressionUUID->"7eec9cc2-0419-479b-896c-f4d12e27b804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.233318`", ",", "Null"}], "}"}]], "Output",
 CellLabel->
  "(L3) Out[88]=",ExpressionUUID->"c635e6f6-6475-4883-802e-3b6499df15bd"],

Cell[BoxData[
 TemplateBox[{"\"Calculation ended on \"","\"Fri 18 May 2018 13:48:33\""},
  "RowDefault"]], "Output",
 CellLabel->
  "(L3) Out[92]=",ExpressionUUID->"e0072c41-58ae-4228-8686-d5e3837f270a"],

Cell[BoxData[
 TemplateBox[{"0.`","\"h or \"","0.9`","\"m of total computation\""},
  "RowDefault"]], "Output",
 CellLabel->
  "(L3) Out[93]=",ExpressionUUID->"6b22aa27-7554-4e1a-bb29-4735609ab8b1"],

Cell[BoxData[
 TemplateBox[{"0.001`","\"s per grid point\""},
  "RowDefault"]], "Output",
 CellLabel->
  "(L3) Out[94]=",ExpressionUUID->"c6544efa-be78-493b-8499-6af7cae1edf1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"sanity", " ", "check"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"stest", "=", 
    RowBox[{"Total", "[", 
     RowBox[{"Im", "[", 
      RowBox[{"chi2Tab", "[", 
       RowBox[{"[", "All", "]"}], "]"}], "]"}], "]"}]}], ";", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"stest", "\[NotEqual]", " ", "0"}], ",", 
     "\"\<something funny is going on...\>\""}], "]"}]}]}]], "Input",
 CellLabel->
  "(L3) In[96]:=",ExpressionUUID->"59394994-cfea-456b-a056-2eb213ea0f6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<-log.txt\>\""}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"pSet", ",", "logrun"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"ToFileName", "[", 
    RowBox[{"\"\<results-chi2\>\"", ",", 
     RowBox[{"rname", "<>", "\"\<_run\>\"", "<>", 
      RowBox[{"ToString", "[", "run", "]"}], "<>", "\"\<.r32\>\""}]}], "]"}], 
   ",", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Re", "[", "chi2Tab", "]"}], "]"}], ",", "\"\<Real32\>\""}], 
  "]"}]}], "Input",
 CellLabel->
  "(L3) In[97]:=",ExpressionUUID->"71b910ef-ed05-49ad-b463-799d7e59dccd"],

Cell[BoxData["\<\"results-chi2/JLA_run1.r32\"\>"], "Output",
 CellLabel->
  "(L3) Out[98]=",ExpressionUUID->"0a07baa8-5b8e-4d62-a73a-d3ed6a138e63"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["c End", "Subsection",ExpressionUUID->"29fc1c95-49fc-4a02-9057-759ac81c252e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CloseKernels", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NotebookSave", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]}], "Input",
 CellLabel->
  "(L3) In[99]:=",ExpressionUUID->"2c32a026-be8f-44ab-b105-0f99a328e530"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1176, 819},
WindowMargins->{{3, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 272, 8, 33, "Text",ExpressionUUID->"1df35057-a96d-495e-94a0-0d484796faf7"],
Cell[CellGroupData[{
Cell[855, 32, 137, 2, 67, "Section",ExpressionUUID->"f66ae1b8-2596-49c1-9dc9-953450f586df"],
Cell[CellGroupData[{
Cell[1017, 38, 699, 18, 136, "Input",ExpressionUUID->"8192d94f-8a8c-4581-ac68-81f6d7aa93e9"],
Cell[1719, 58, 118, 2, 70, "Output",ExpressionUUID->"e4500050-8bf8-4ecc-bd95-738137f3b985"],
Cell[1840, 62, 159, 2, 70, "Output",ExpressionUUID->"1415665a-551f-4768-a093-7e3854301eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2036, 69, 1400, 41, 199, "Input",ExpressionUUID->"3c0fb340-d704-4546-bbfc-942172e359fc"],
Cell[3439, 112, 210, 5, 70, "Print",ExpressionUUID->"68ccc89a-0ee2-4742-8d68-9929b0f23061"]
}, Open  ]],
Cell[3664, 120, 401, 11, 52, "Input",ExpressionUUID->"f0415793-8b7c-44f3-8211-5ce27648ef6c"]
}, Closed]],
Cell[CellGroupData[{
Cell[4102, 136, 138, 2, 53, "Section",ExpressionUUID->"21cf603a-8223-4a0c-ac28-50742c4960ab"],
Cell[CellGroupData[{
Cell[4265, 142, 1415, 37, 136, "Input",ExpressionUUID->"b7b4c196-1a90-4f67-9696-d8c2fc427ffa"],
Cell[CellGroupData[{
Cell[5705, 183, 269, 5, 25, "Print",ExpressionUUID->"99af5dde-9e5a-4893-ac0a-0ef577b4a8ea"],
Cell[5977, 190, 212, 4, 24, "Print",ExpressionUUID->"5a679986-f538-4f74-b2aa-08b203e593b0"],
Cell[6192, 196, 207, 5, 24, "Print",ExpressionUUID->"5e8b26b4-2b3f-4151-bd73-819986cd1649"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6448, 207, 2616, 69, 241, "Input",ExpressionUUID->"c44e4a2a-29b2-459e-81d0-9db8db943e4d"],
Cell[9067, 278, 501, 13, 24, "Print",ExpressionUUID->"7bb8693b-dc52-4eae-a1ad-1a0eafa598d3"],
Cell[9571, 293, 185, 4, 34, "Output",ExpressionUUID->"8d3f1d9b-d8b6-46b9-b80d-033294534c5a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9805, 303, 154, 2, 67, "Section",ExpressionUUID->"f927329e-9eec-4607-9a6b-db479773003e"],
Cell[CellGroupData[{
Cell[9984, 309, 94, 0, 54, "Subsection",ExpressionUUID->"7f57a796-1961-49ed-bb8b-1b7c2f7726c9"],
Cell[10081, 311, 4173, 121, 493, "Input",ExpressionUUID->"118c7763-b43d-4ed1-9e62-a20e9c64efd9"],
Cell[CellGroupData[{
Cell[14279, 436, 4033, 101, 514, "Input",ExpressionUUID->"5326fd69-cb6f-439c-a2a0-5ae0fe888b59"],
Cell[18315, 539, 1748, 50, 98, "Output",ExpressionUUID->"a90196a1-4497-43d3-9001-f9d38ab58362"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20112, 595, 84, 0, 54, "Subsection",ExpressionUUID->"523ec158-ef57-40d9-b844-1ab3fecc1f57"],
Cell[CellGroupData[{
Cell[20221, 599, 10076, 272, 787, "Input",ExpressionUUID->"142fd9e4-69ff-46a5-9776-04f6675b4067"],
Cell[30300, 873, 46147, 897, 674, "Print",ExpressionUUID->"5b85c13a-1c7f-4414-b4f0-916638e063f4"]
}, Open  ]],
Cell[76462, 1773, 841, 21, 52, "Input",ExpressionUUID->"230ca7fa-08fd-4abc-bc10-d4e5c19e0f35"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77352, 1800, 175, 4, 67, "Section",ExpressionUUID->"485388a7-09b9-4f22-adb2-203059ac80d4"],
Cell[CellGroupData[{
Cell[77552, 1808, 40120, 949, 4129, "Input",ExpressionUUID->"e2e11314-00df-48a1-903d-42226ec84113"],
Cell[117675, 2759, 193, 5, 24, "Print",ExpressionUUID->"0308bb3e-2ab8-420f-a451-e36d8e558dfc"],
Cell[117871, 2766, 553, 11, 41, "Message",ExpressionUUID->"0f59188b-92a1-4a87-aec0-7b777cdd40c9"],
Cell[118427, 2779, 553, 11, 41, "Message",ExpressionUUID->"a912cc74-e0f3-4a04-8458-b63a2b87d61e"],
Cell[118983, 2792, 553, 11, 41, "Message",ExpressionUUID->"fa62957d-bdce-4157-b836-561bfe734091"],
Cell[119539, 2805, 4178, 103, 94, "Print",ExpressionUUID->"0aedc19a-8eb8-4831-81fd-cf30c4917c5e"],
Cell[123720, 2910, 396, 9, 24, "Message",ExpressionUUID->"6894266f-577b-42ae-81fa-caa91747b511"],
Cell[124119, 2921, 396, 9, 24, "Message",ExpressionUUID->"98bd1908-f379-43e4-b679-d5190a52c108"],
Cell[124518, 2932, 553, 11, 41, "Message",ExpressionUUID->"2479debf-3e62-42f0-9022-27097d950ff5"],
Cell[CellGroupData[{
Cell[125096, 2947, 4315, 106, 94, "Print",ExpressionUUID->"82413513-f0f4-4f9c-9581-bfb47363de06"],
Cell[129414, 3055, 1087, 30, 76, "Print",ExpressionUUID->"d77647ee-c217-4243-b38d-1eb6732a3fb5"],
Cell[130504, 3087, 223, 5, 24, "Print",ExpressionUUID->"5b1eaa24-bd43-4a13-8042-182a3660a358"],
Cell[130730, 3094, 2630, 60, 56, "Print",ExpressionUUID->"8fde8a7b-cbf4-43ec-acc7-c4c12cbc2c06"],
Cell[133363, 3156, 145, 3, 24, "Print",ExpressionUUID->"2463e879-659e-48e0-8e22-0940499cb33c"],
Cell[133511, 3161, 86651, 1624, 674, "Print",ExpressionUUID->"7175f664-ebdb-4d84-96f6-34fb23a21604"]
}, Open  ]]
}, Open  ]],
Cell[220189, 4789, 549, 14, 52, "Input",ExpressionUUID->"b2772f9d-e242-41ec-8b23-4112dd9a5924"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220775, 4808, 187, 4, 67, "Section",ExpressionUUID->"34c819e1-41c5-4d2d-acfa-07ea615f1f75"],
Cell[CellGroupData[{
Cell[220987, 4816, 176, 2, 54, "Subsection",ExpressionUUID->"808ff4c1-0666-4720-aaca-9c46af822220"],
Cell[CellGroupData[{
Cell[221188, 4822, 9259, 243, 682, "Input",ExpressionUUID->"bc043824-8b24-4e63-9b33-3b8d691ab905"],
Cell[230450, 5067, 1764, 50, 70, "Output",ExpressionUUID->"1e5c7491-1b05-457a-9df2-808235f0402f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[232263, 5123, 171, 2, 38, "Subsection",ExpressionUUID->"7f6b054d-1bf1-4b6c-a89f-3e1b15b95074"],
Cell[CellGroupData[{
Cell[232459, 5129, 9252, 243, 682, "Input",ExpressionUUID->"9bcc6932-bb35-463f-be63-3b393d93533c"],
Cell[241714, 5374, 1764, 50, 70, "Output",ExpressionUUID->"148a151c-9337-457a-9c03-1cec5cc1e9b9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[243527, 5430, 176, 2, 38, "Subsection",ExpressionUUID->"d4e21bdf-407a-479e-944e-4c95c97605ff"],
Cell[CellGroupData[{
Cell[243728, 5436, 8277, 217, 661, "Input",ExpressionUUID->"fa90cd18-0caf-4752-bbd4-5478e4c4facd"],
Cell[252008, 5655, 1764, 50, 70, "Output",ExpressionUUID->"ad1a4f25-de06-498b-bb64-349197c6fdec"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[253821, 5711, 166, 2, 38, "Subsection",ExpressionUUID->"2651632b-f27e-49f2-acec-fa0e5c221d87"],
Cell[253990, 5715, 1560, 41, 178, "Input",ExpressionUUID->"c3d7182a-d61e-4c8f-b4de-d96366f9417c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[255599, 5762, 165, 4, 53, "Section",ExpressionUUID->"26a50104-84f0-4360-b4f9-20899c453e30"],
Cell[CellGroupData[{
Cell[255789, 5770, 5128, 141, 556, "Input",ExpressionUUID->"38ac59c1-bbf1-48b7-8047-f510821e4b02"],
Cell[CellGroupData[{
Cell[260942, 5915, 235, 6, 24, "Print",ExpressionUUID->"f0b67c88-ca05-4755-9987-ef88772b2585"],
Cell[261180, 5923, 316, 7, 24, "Print",ExpressionUUID->"77776637-0b73-4186-997b-2af836668820"],
Cell[261499, 5932, 236, 6, 24, "Print",ExpressionUUID->"3d6b5459-19ed-4225-8b3b-f6e82281c976"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261784, 5944, 1166, 32, 136, "Input",ExpressionUUID->"afeea501-2e89-4297-b19c-78244eb6069d"],
Cell[262953, 5978, 230, 6, 34, "Output",ExpressionUUID->"6c31e580-9364-4bca-984e-603bffadc944"],
Cell[263186, 5986, 230, 6, 34, "Output",ExpressionUUID->"786128d1-d448-4fa7-ae26-bc2530ba82d0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263465, 5998, 139, 2, 67, "Section",ExpressionUUID->"a4600738-056d-4cf4-b4cd-6b8baeb20217"],
Cell[CellGroupData[{
Cell[263629, 6004, 90, 0, 54, "Subsection",ExpressionUUID->"2617a760-982e-465c-b90b-518f050d264c"],
Cell[CellGroupData[{
Cell[263744, 6008, 271, 6, 52, "Input",ExpressionUUID->"bc3fec40-2bd2-4447-bce7-c926a44fbde9"],
Cell[264018, 6016, 1095, 24, 56, "Output",ExpressionUUID->"31c630b1-c61f-4b1b-881a-6754fafe9609"],
Cell[265116, 6042, 116, 2, 34, "Output",ExpressionUUID->"09b4e74c-60a4-4d54-8b06-e1d6063058f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265269, 6049, 10507, 282, 765, "Input",ExpressionUUID->"c211c595-ca14-4065-a8c9-fbb01301de53"],
Cell[CellGroupData[{
Cell[275801, 6335, 281, 7, 24, "Print",ExpressionUUID->"82027334-3219-4e14-a3f9-095e9fcaca2c"],
Cell[276085, 6344, 815, 19, 33, "Print",ExpressionUUID->"93ff5fb0-e953-4fa8-875f-59512ebd7f4c"],
Cell[276903, 6365, 205, 5, 24, "Print",ExpressionUUID->"b2e76932-3960-4abf-9afd-2e002da69432"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277169, 6377, 90, 0, 54, "Subsection",ExpressionUUID->"a92f7429-5c41-496c-9b36-2fe2da1919f8"],
Cell[CellGroupData[{
Cell[277284, 6381, 3011, 90, 283, "Input",ExpressionUUID->"7eec9cc2-0419-479b-896c-f4d12e27b804"],
Cell[280298, 6473, 171, 4, 34, "Output",ExpressionUUID->"c635e6f6-6475-4883-802e-3b6499df15bd"],
Cell[280472, 6479, 203, 4, 34, "Output",ExpressionUUID->"e0072c41-58ae-4228-8686-d5e3837f270a"],
Cell[280678, 6485, 198, 4, 34, "Output",ExpressionUUID->"6b22aa27-7554-4e1a-bb29-4735609ab8b1"],
Cell[280879, 6491, 176, 4, 34, "Output",ExpressionUUID->"c6544efa-be78-493b-8499-6af7cae1edf1"]
}, Open  ]],
Cell[281070, 6498, 550, 15, 52, "Input",ExpressionUUID->"59394994-cfea-456b-a056-2eb213ea0f6b"],
Cell[CellGroupData[{
Cell[281645, 6517, 816, 21, 52, "Input",ExpressionUUID->"71b910ef-ed05-49ad-b463-799d7e59dccd"],
Cell[282464, 6540, 147, 2, 34, "Output",ExpressionUUID->"0a07baa8-5b8e-4d62-a73a-d3ed6a138e63"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282660, 6548, 82, 0, 54, "Subsection",ExpressionUUID->"29fc1c95-49fc-4a02-9057-759ac81c252e"],
Cell[282745, 6550, 317, 8, 73, "Input",ExpressionUUID->"2c32a026-be8f-44ab-b105-0f99a328e530"]
}, Open  ]]
}, Open  ]]
}
]
*)

